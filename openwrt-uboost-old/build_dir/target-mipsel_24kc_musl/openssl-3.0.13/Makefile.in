{- # -*- Mode: perl -*-

 # Commonly used list of generated files
 # The reason for the complexity is that the build.info files provide
 # GENERATE rules for *all* platforms without discrimination, while the
 # build files only want those for a particular build.  Therefore, we
 # need to extrapolate exactly what we need to generate.  The way to do
 # that is to extract all possible source files from diverse tables and
 # filter out all that are not generated
 my %generatables =
     map { $_ => 1 }
     ( # The sources of stuff may be generated
         ( map { @{$unified_info{sources}->{$_}} }
               keys %{$unified_info{sources}} ),
         $disabled{shared}
             ? ()
             : ( map { @{$unified_info{shared_sources}->{$_}} }
                 keys %{$unified_info{shared_sources}} ),
         # Things we explicitly depend on are usually generated
         ( map { $_ eq "" ? () : @{$unified_info{depends}->{$_}} }
               keys %{$unified_info{depends}} ));
 our @generated =
     sort ( ( grep { defined $unified_info{generate}->{$_} }
              sort keys %generatables ),
            # Scripts are assumed to be generated, so add them too
            ( grep { defined $unified_info{sources}->{$_} }
              @{$unified_info{scripts}} ) );

 # Avoid strange output
 "";
-}
##
## Makefile for OpenSSL
##
## {- join("\n## ", @autowarntext) -}
{-
     use OpenSSL::Util;

     our $makedep_scheme = $config{makedep_scheme};
     our $makedepcmd = platform->makedepcmd();

     sub windowsdll { $config{target} =~ /^(?:Cygwin|mingw)/ }

     # Shared AIX support is special. We put libcrypto[64].so.ver into
     # libcrypto.a and use libcrypto_a.a as static one.
     sub sharedaix  { !$disabled{shared} && $config{target} =~ /^aix/ }

     our $sover_dirname = platform->shlib_version_as_filename();

     # This makes sure things get built in the order they need
     # to. You're welcome.
     sub dependmagic {
         my $target = shift;

         return "$target: build_generated\n\t\$(MAKE) depend && \$(MAKE) _$target\n_$target";
     }

     our $COLUMNS = $ENV{COLUMNS};
     if ($COLUMNS =~ /^\d+$/) {
         $COLUMNS = int($COLUMNS) - 2; # 2 to leave space for ending ' \'
     } else {
         $COLUMNS = 76;
     }

     sub fill_lines {
         my $item_sep = shift;                  # string
         my $line_length = shift;               # number of chars

         my @result = ();
         my $resultpos = 0;

         foreach (@_) {
             my $fill_line = $result[$resultpos] // '';
             my $newline =
                 ($fill_line eq '' ? '' : $fill_line . $item_sep) . $_;

             if (length($newline) > $line_length) {
                 # If this is a single item and the intended result line
                 # is empty, we put it there anyway
                 if ($fill_line eq '') {
                     $result[$resultpos++] = $newline;
                 } else {
                     $result[++$resultpos] = $_;
                 }
             } else {
                 $result[$resultpos] = $newline;
             }
         }
         return @result;
     }
     '';
-}
PLATFORM={- $config{target} -}
OPTIONS={- $config{options} -}
CONFIGURE_ARGS=({- join(", ",quotify_l(@{$config{perlargv}})) -})
SRCDIR={- $config{sourcedir} -}
BLDDIR={- $config{builddir} -}
FIPSKEY={- $config{FIPSKEY} -}

VERSION={- "$config{full_version}" -}
VERSION_NUMBER={- "$config{version}" -}
MAJOR={- $config{major} -}
MINOR={- $config{minor} -}
SHLIB_VERSION_NUMBER={- $config{shlib_version} -}
SHLIB_TARGET={- $target{shared_target} -}

LIBS={- join(" \\\n" . ' ' x 5,
             fill_lines(" ", $COLUMNS - 5,
                        map { platform->staticlib($_) // () }
                        @{$unified_info{libraries}})) -}
SHLIBS={- join(" \\\n" . ' ' x 7,
               fill_lines(" ", $COLUMNS - 7,
                          map { platform->sharedlib($_) // () }
                          @{$unified_info{libraries}})) -}
SHLIB_INFO={- join(" \\\n" . ' ' x 11,
                   fill_lines(" ", $COLUMNS - 11,
                          map { my $x = platform->sharedlib($_);
                                my $y = platform->sharedlib_simple($_) // '';
                                my $z = platform->sharedlib_import($_) // '';
                                $x ? "\"$x;$y;$z\"" : () }
                          @{$unified_info{libraries}})) -}
MODULES={- join(" \\\n" . ' ' x 8,
                fill_lines(" ", $COLUMNS - 8,
                           map { platform->dso($_) }
                           # Drop all modules that are dependencies, they will
                           # be processed through their dependents
                           grep { my $x = $_;
                                  !grep { grep { $_ eq $x } @$_ }
                                        values %{$unified_info{depends}} }
                           @{$unified_info{modules}})) -}
FIPSMODULE={- # We do some extra checking here, as there should be only one
              use File::Basename;
              our @fipsmodules =
                  grep { !$unified_info{attributes}->{modules}->{$_}->{noinst}
                         && $unified_info{attributes}->{modules}->{$_}->{fips} }
                  @{$unified_info{modules}};
              die "More that one FIPS module" if scalar @fipsmodules > 1;
              join(" ", map { platform->dso($_) } @fipsmodules) -}
FIPSMODULENAME={- die "More that one FIPS module" if scalar @fipsmodules > 1;
                  join(" ", map { basename(platform->dso($_)) } @fipsmodules) -}

PROGRAMS={- join(" \\\n" . ' ' x 9,
                 fill_lines(" ", $COLUMNS - 9,
                            map { platform->bin($_) }
                            @{$unified_info{programs}})) -}
SCRIPTS={- join(" \\\n" . ' ' x 8,
                fill_lines(" ", $COLUMNS - 8, @{$unified_info{scripts}})) -}
{- output_off() if $disabled{makedepend}; "" -}
DEPS={- join(" \\\n" . ' ' x 5,
             fill_lines(" ", $COLUMNS - 5,
                        map { platform->isobj($_) ? platform->dep($_) : () }
                        grep { $unified_info{sources}->{$_}->[0] =~ /\.c$/ }
                        keys %{$unified_info{sources}})); -}
{- output_on() if $disabled{makedepend}; "" -}
GENERATED_MANDATORY={- join(" \\\n" . ' ' x 20,
                            fill_lines(" ", $COLUMNS - 20,
                                       @{$unified_info{depends}->{""}})) -}
GENERATED_PODS={- # common0.tmpl provides @generated
                  join(" \\\n" . ' ' x 15,
                       fill_lines(" ", $COLUMNS - 15,
                                  map { my $x = $_;
                                        (
                                          grep { 
                                                 $unified_info{attributes}->{depends}
                                                 ->{$x}->{$_}->{pod} // 0
                                               }
                                              keys %{$unified_info{attributes}->{depends}->{$x}}
                                        ) ? $x : ();
                                      }
                                      @generated)) -}
GENERATED={- # common0.tmpl provides @generated
             join(" \\\n" . ' ' x 5,
                  fill_lines(" ", $COLUMNS - 5,
                             map { platform->convertext($_) } @generated )) -}

INSTALL_LIBS={-
        join(" \\\n" . ' ' x 13,
             fill_lines(" ", $COLUMNS - 13,
                        map { platform->staticlib($_) // () }
                        grep { !$unified_info{attributes}->{libraries}->{$_}->{noinst} }
                        @{$unified_info{libraries}}))
-}
INSTALL_SHLIBS={-
        join(" \\\n" . ' ' x 15,
             fill_lines(" ", $COLUMNS - 15,
                        map { platform->sharedlib($_) // () }
                        grep { !$unified_info{attributes}->{libraries}->{$_}->{noinst} }
                        @{$unified_info{libraries}}))
-}
INSTALL_SHLIB_INFO={-
        join(" \\\n" . ' ' x 19,
             fill_lines(" ", $COLUMNS - 19,
                        map { my $x = platform->sharedlib($_);
                              my $y = platform->sharedlib_simple($_) // '';
                              my $z = platform->sharedlib_import($_) // '';
                              $x ? "\"$x;$y;$z\"" : () }
                        grep { !$unified_info{attributes}->{libraries}->{$_}->{noinst} }
                        @{$unified_info{libraries}}))
-}
INSTALL_ENGINES={-
        join(" \\\n" . ' ' x 16,
             fill_lines(" ", $COLUMNS - 16,
                        map { platform->dso($_) }
                        grep { !$unified_info{attributes}->{modules}->{$_}->{noinst}
                               && $unified_info{attributes}->{modules}->{$_}->{engine} }
                        @{$unified_info{modules}}))
-}
INSTALL_MODULES={-
        join(" \\\n" . ' ' x 16,
             fill_lines(" ", $COLUMNS - 16,
                        map { platform->dso($_) }
                        grep { !$unified_info{attributes}->{modules}->{$_}->{noinst}
                               && !$unified_info{attributes}->{modules}->{$_}->{engine}
                               && !$unified_info{attributes}->{modules}->{$_}->{fips} }
                        @{$unified_info{modules}}))
-}
INSTALL_FIPSMODULE={-
        join(" \\\n" . ' ' x 16,
             fill_lines(" ", $COLUMNS - 16,
                        map { platform->dso($_) }
                        grep { !$unified_info{attributes}->{modules}->{$_}->{noinst}
                               && $unified_info{attributes}->{modules}->{$_}->{fips} }
                        @{$unified_info{modules}}))
-}
INSTALL_FIPSMODULECONF=providers/fipsmodule.cnf
INSTALL_PROGRAMS={-
        join(" \\\n" . ' ' x 16,
             fill_lines(" ", $COLUMNS - 16, map { platform->bin($_) }
                        grep { !$unified_info{attributes}->{programs}->{$_}->{noinst} }
                        @{$unified_info{programs}}))
-}
BIN_SCRIPTS={-
        join(" \\\n" . ' ' x 12,
             fill_lines(" ", $COLUMNS - 12,
                        map { my $x = $unified_info{attributes}->{scripts}->{$_}->{linkname};
                              $x ? "$_:$x" : $_ }
                        grep { !$unified_info{attributes}->{scripts}->{$_}->{noinst}
                               && !$unified_info{attributes}->{scripts}->{$_}->{misc} }
                        @{$unified_info{scripts}}))
-}
MISC_SCRIPTS={-
        join(" \\\n" . ' ' x 13,
             fill_lines(" ", $COLUMNS - 13,
                        map { my $x = $unified_info{attributes}->{scripts}->{$_}->{linkname};
                              $x ? "$_:$x" : $_ }
                        grep { !$unified_info{attributes}->{scripts}->{$_}->{noinst}
                               && $unified_info{attributes}->{scripts}->{$_}->{misc} }
                        @{$unified_info{scripts}}))
-}
IMAGEDOCS1={-
        join(" \\\n" . ' ' x 10,
             fill_lines(" ", $COLUMNS - 10,
                        @{$unified_info{imagedocs}->{man1}})) -}
IMAGEDOCS3={-
        join(" \\\n" . ' ' x 10,
             fill_lines(" ", $COLUMNS - 10,
                        @{$unified_info{imagedocs}->{man3}})) -}
IMAGEDOCS5={-
        join(" \\\n" . ' ' x 10,
             fill_lines(" ", $COLUMNS - 10,
                        @{$unified_info{imagedocs}->{man5}})) -}
IMAGEDOCS7={-
        join(" \\\n" . ' ' x 10,
             fill_lines(" ", $COLUMNS - 10,
                        @{$unified_info{imagedocs}->{man7}})) -}
HTMLDOCS1={-
        join(" \\\n" . ' ' x 10,
             fill_lines(" ", $COLUMNS - 10,
                        @{$unified_info{htmldocs}->{man1}})) -}
HTMLDOCS3={-
        join(" \\\n" . ' ' x 10,
             fill_lines(" ", $COLUMNS - 10,
                        @{$unified_info{htmldocs}->{man3}})) -}
HTMLDOCS5={-
        join(" \\\n" . ' ' x 10,
             fill_lines(" ", $COLUMNS - 10,
                        @{$unified_info{htmldocs}->{man5}})) -}
HTMLDOCS7={-
        join(" \\\n" . ' ' x 10,
             fill_lines(" ", $COLUMNS - 10,
                        @{$unified_info{htmldocs}->{man7}})) -}
MANDOCS1={-
        join(" \\\n" . ' ' x 9,
             fill_lines(" ", $COLUMNS - 9,
                        @{$unified_info{mandocs}->{man1}})) -}
MANDOCS3={-
        join(" \\\n" . ' ' x 9,
             fill_lines(" ", $COLUMNS - 9,
                        @{$unified_info{mandocs}->{man3}})) -}
MANDOCS5={-
        join(" \\\n" . ' ' x 9,
             fill_lines(" ", $COLUMNS - 9,
                        @{$unified_info{mandocs}->{man5}})) -}
MANDOCS7={-
        join(" \\\n" . ' ' x 9,
             fill_lines(" ", $COLUMNS - 9,
                        @{$unified_info{mandocs}->{man7}})) -}

APPS_OPENSSL="{- use File::Spec::Functions;
                 catfile("apps","openssl") -}"

# DESTDIR is for package builders so that they can configure for, say,
# /usr/ and yet have everything installed to /tmp/somedir/usr/.
# Normally it is left empty.
DESTDIR=

# Do not edit these manually. Use Configure with --prefix or --openssldir
# to change this!  Short explanation in the top comment in Configure
INSTALLTOP={- # $prefix is used in the OPENSSLDIR perl snippet
	      #
	      our $prefix = $config{prefix} || "/usr/local";
              $prefix -}
OPENSSLDIR={- #
	      # The logic here is that if no --openssldir was given,
	      # OPENSSLDIR will get the value from $prefix plus "/ssl".
	      # If --openssldir was given and the value is an absolute
	      # path, OPENSSLDIR will get its value without change.
	      # If the value from --openssldir is a relative path,
	      # OPENSSLDIR will get $prefix with the --openssldir
	      # value appended as a subdirectory.
	      #
              use File::Spec::Functions;
              our $openssldir =
                  $config{openssldir} ?
                      (file_name_is_absolute($config{openssldir}) ?
                           $config{openssldir}
                           : catdir($prefix, $config{openssldir}))
                      : catdir($prefix, "ssl");
              $openssldir -}
LIBDIR={- our $libdir = $config{libdir};
          unless ($libdir) {
              $libdir = "lib$target{multilib}";
          }
          file_name_is_absolute($libdir) ? "" : $libdir -}
# $(libdir) is chosen to be compatible with the GNU coding standards
libdir={- file_name_is_absolute($libdir)
          ? $libdir : '$(INSTALLTOP)/$(LIBDIR)' -}
ENGINESDIR=$(libdir)/engines-{- $sover_dirname -}
MODULESDIR=$(libdir)/ossl-modules

# Convenience variable for those who want to set the rpath in shared
# libraries and applications
LIBRPATH=$(libdir)

MANDIR=$(INSTALLTOP)/share/man
DOCDIR=$(INSTALLTOP)/share/doc/$(BASENAME)
HTMLDIR=$(DOCDIR)/html

# MANSUFFIX is for the benefit of anyone who may want to have a suffix
# appended after the manpage file section number.  "ssl" is popular,
# resulting in files such as config.5ssl rather than config.5.
MANSUFFIX=ossl
HTMLSUFFIX=html

# For "optional" echo messages, to get "real" silence
ECHO = echo

##### User defined commands and flags ################################

# We let the C compiler driver to take care of .s files. This is done in
# order to be excused from maintaining a separate set of architecture
# dependent assembler flags. E.g. if you throw -mcpu=ultrasparc at SPARC
# gcc, then the driver will automatically translate it to -xarch=v8plus
# and pass it down to assembler.  In any case, we do not define AS or
# ASFLAGS for this reason.

CROSS_COMPILE={- $config{CROSS_COMPILE} -}
CC=$(CROSS_COMPILE){- $config{CC} -}
CXX={- $config{CXX} ? "\$(CROSS_COMPILE)$config{CXX}" : '' -}
CPPFLAGS={- our $cppflags1 = join(" ",
                                  (map { "-D".$_} @{$config{CPPDEFINES}}),
                                  (map { "-I".$_} @{$config{CPPINCLUDES}}),
                                  @{$config{CPPFLAGS}}) -}
CFLAGS={- join(' ', @{$config{CFLAGS}}) -}
CXXFLAGS={- join(' ', @{$config{CXXFLAGS}}) -}
LDFLAGS= {- join(' ', @{$config{LDFLAGS}}) -}
EX_LIBS= {- join(' ', @{$config{LDLIBS}}) -}

MAKEDEPEND={- $config{makedepcmd} -}

PERL={- $config{PERL} -}

AR=$(CROSS_COMPILE){- $config{AR} -}
ARFLAGS= {- join(' ', @{$config{ARFLAGS}}) -}
RANLIB={- $config{RANLIB} ? "\$(CROSS_COMPILE)$config{RANLIB}" : "true"; -}
RC= $(CROSS_COMPILE){- $config{RC} -}
RCFLAGS={- join(' ', @{$config{RCFLAGS}}) -} {- $target{shared_rcflag} -}

RM= rm -f
RMDIR= rmdir
TAR= {- $target{TAR} || "tar" -}
TARFLAGS= {- $target{TARFLAGS} -}

BASENAME=       openssl
NAME=           $(BASENAME)-$(VERSION)
# Relative to $(SRCDIR)
TARFILE=        ../$(NAME).tar

##### Project flags ##################################################

# Variables starting with CNF_ are common variables for all product types

CNF_CPPFLAGS={- our $cppflags2 =
                    join(' ', $target{cppflags} || (),
                              (map { "-D".$_} @{$target{defines}},
                                              @{$config{defines}}),
                              (map { "-I".$_} @{$target{includes}},
                                              @{$config{includes}}),
                              @{$config{cppflags}}) -}
CNF_CFLAGS={- join(' ', $target{cflags} || (),
                        @{$config{cflags}}) -}
CNF_CXXFLAGS={- join(' ', $target{cxxflags} || (),
                          @{$config{cxxflags}}) -}
CNF_LDFLAGS={- join(' ', $target{lflags} || (),
                         @{$config{lflags}}) -}
CNF_EX_LIBS={- join(' ', $target{ex_libs} || (),
                         @{$config{ex_libs}}) -}

# Variables starting with LIB_ are used to build library object files
# and shared libraries.
# Variables starting with DSO_ are used to build DSOs and their object files.
# Variables starting with BIN_ are used to build programs and their object
# files.

LIB_CPPFLAGS={- our $lib_cppflags =
                join(' ', $target{lib_cppflags} || (),
                          $target{shared_cppflag} || (),
                          (map { '-D'.$_ }
                               @{$target{lib_defines} || ()},
                               @{$target{shared_defines} || ()},
                               @{$config{lib_defines} || ()},
                               @{$config{shared_defines} || ()}),
                          (map { '-I'.quotify1($_) }
                               @{$target{lib_includes}},
                               @{$target{shared_includes}},
                               @{$config{lib_includes}},
                               @{$config{shared_includes}}),
                          @{$config{lib_cppflags}},
                          @{$config{shared_cppflag}});
                join(' ', $lib_cppflags,
                          (map { '-D'.$_ }
                               'OPENSSLDIR="\"$(OPENSSLDIR)\""',
                               'ENGINESDIR="\"$(ENGINESDIR)\""',
                               'MODULESDIR="\"$(MODULESDIR)\""'),
                          '$(CNF_CPPFLAGS)', '$(CPPFLAGS)') -}
LIB_CFLAGS={- join(' ', $target{lib_cflags} || (),
                        $target{shared_cflag} || (),
                        @{$config{lib_cflags}},
                        @{$config{shared_cflag}},
                        '$(CNF_CFLAGS)', '$(CFLAGS)') -}
LIB_CXXFLAGS={- join(' ', $target{lib_cxxflags} || (),
                          $target{shared_cxxflag} || (),
                          @{$config{lib_cxxflags}},
                          @{$config{shared_cxxflag}},
                          '$(CNF_CXXFLAGS)', '$(CXXFLAGS)') -}
LIB_LDFLAGS={- join(' ', $target{shared_ldflag} || (),
                         $config{shared_ldflag} || (),
                         '$(CNF_LDFLAGS)', '$(LDFLAGS)') -}
LIB_EX_LIBS=$(CNF_EX_LIBS) $(EX_LIBS)
DSO_CPPFLAGS={- join(' ', $target{dso_cppflags} || (),
                          $target{module_cppflags} || (),
                          (map { '-D'.$_ }
                               @{$target{dso_defines}},
                               @{$target{module_defines}},
                               @{$config{dso_defines} || ()},
                               @{$config{module_defines} || ()}),
                          (map { '-I'.quotify1($_) }
                               @{$target{dso_includes}},
                               @{$target{module_includes}},
                               @{$config{dso_includes}},
                               @{$config{module_includes}}),
                          @{$config{dso_cppflags}},
                          @{$config{module_cppflags}},
                          '$(CNF_CPPFLAGS)', '$(CPPFLAGS)') -}
DSO_CFLAGS={- join(' ', $target{dso_cflags} || (),
                        $target{module_cflags} || (),
                        @{$config{dso_cflags}},
                        @{$config{module_cflags}},
                        '$(CNF_CFLAGS)', '$(CFLAGS)') -}
DSO_CXXFLAGS={- join(' ', $target{dso_cxxflags} || (),
                          $target{module_cxxflags} || (),
                          @{$config{dso_cxxflags}},
                          @{$config{module_cxxflag}},
                          '$(CNF_CXXFLAGS)', '$(CXXFLAGS)') -}
DSO_LDFLAGS={- join(' ', $target{dso_ldflags} || (),
                         $target{module_ldflags} || (),
                         @{$config{dso_ldflags}},
                         @{$config{module_ldflags}},
                         '$(CNF_LDFLAGS)', '$(LDFLAGS)') -}
DSO_EX_LIBS=$(CNF_EX_LIBS) $(EX_LIBS)
BIN_CPPFLAGS={- join(' ', $target{bin_cppflags} || (),
                          (map { '-D'.$_ } @{$config{bin_defines} || ()}),
                          @{$config{bin_cppflags}},
                          '$(CNF_CPPFLAGS)', '$(CPPFLAGS)') -}
BIN_CFLAGS={- join(' ', $target{bin_cflags} || (),
                        @{$config{bin_cflags}},
                        '$(CNF_CFLAGS)', '$(CFLAGS)') -}
BIN_CXXFLAGS={- join(' ', $target{bin_cxxflags} || (),
                          @{$config{bin_cxxflags}},
                          '$(CNF_CXXFLAGS)', '$(CXXFLAGS)') -}
BIN_LDFLAGS={- join(' ', $target{bin_lflags} || (),
                         @{$config{bin_lflags}},
                         '$(CNF_LDFLAGS)', '$(LDFLAGS)') -}
BIN_EX_LIBS=$(CNF_EX_LIBS) $(EX_LIBS)

# CPPFLAGS_Q is used for one thing only: to build up buildinf.h
CPPFLAGS_Q={- $cppflags1 =~ s|([\\"])|\\$1|g;
              $cppflags2 =~ s|([\\"])|\\$1|g;
              $lib_cppflags =~ s|([\\"])|\\$1|g;
              join(' ', $lib_cppflags || (), $cppflags2 || (),
                        $cppflags1 || ()) -}

PERLASM_SCHEME= {- $target{perlasm_scheme} -}

# For x86 assembler: Set PROCESSOR to 386 if you want to support
# the 80386.
PROCESSOR= {- $config{processor} -}

# We want error [and other] messages in English. Trouble is that make(1)
# doesn't pass macros down as environment variables unless there already
# was corresponding variable originally set. In other words we can only
# reassign environment variables, but not set new ones, not in portable
# manner that is. That's why we reassign several, just to be sure...
LC_ALL=C
LC_MESSAGES=C
LANG=C

# The main targets ###################################################

{- dependmagic('build_sw'); -}: build_libs_nodep build_modules_nodep build_programs_nodep link-utils
{- dependmagic('build_libs'); -}: build_libs_nodep
{- dependmagic('build_modules'); -}: build_modules_nodep
{- dependmagic('build_programs'); -}: build_programs_nodep

build_generated_pods: $(GENERATED_PODS)
build_docs: build_man_docs build_html_docs
build_man_docs: $(MANDOCS1) $(MANDOCS3) $(MANDOCS5) $(MANDOCS7)
build_html_docs: $(HTMLDOCS1) $(HTMLDOCS3) $(HTMLDOCS5) $(HTMLDOCS7)

build_generated: $(GENERATED_MANDATORY)
build_libs_nodep: libcrypto.pc libssl.pc openssl.pc
build_modules_nodep: $(MODULES)
build_programs_nodep: $(PROGRAMS) $(SCRIPTS)

# Kept around for backward compatibility
build_apps build_tests: build_programs

# Convenience target to prebuild all generated files, not just the mandatory
# ones
build_all_generated: $(GENERATED_MANDATORY) $(GENERATED) build_docs
	@ : {- output_off() if $disabled{makedepend}; "" -}
	@echo "Warning: consider configuring with no-makedepend, because if"
	@echo "         target system doesn't have $(PERL),"
	@echo "         then make will fail..."
	@ : {- output_on() if $disabled{makedepend}; "" -}

all: build_sw build_docs

test: tests
{- dependmagic('tests'); -}: build_programs_nodep build_modules_nodep link-utils
	$(MAKE) run_tests
run_tests: FORCE
	@ : {- output_off() if $disabled{tests}; "" -}
	( SRCTOP=$(SRCDIR) \
	  BLDTOP=$(BLDDIR) \
	  PERL="$(PERL)" \
	  FIPSKEY="$(FIPSKEY)" \
	  EXE_EXT={- platform->binext() -} \
	  $(PERL) $(SRCDIR)/test/run_tests.pl $(TESTS) )
	@ : {- if ($disabled{tests}) { output_on(); } else { output_off(); } "" -}
	@echo "Tests are not supported with your chosen Configure options"
	@ : {- output_on() if !$disabled{tests}; "" -}

list-tests:
	@ : {- output_off() if $disabled{tests}; "" -}
	$(MAKE) run_tests TESTS=list
	@ : {- if ($disabled{tests}) { output_on(); } else { output_off(); } "" -}
	@echo "Tests are not supported with your chosen Configure options"
	@ : {- output_on() if !$disabled{tests}; "" -}

install: install_sw install_ssldirs install_docs {- $disabled{fips} ? "" : "install_fips" -}

uninstall: uninstall_docs uninstall_sw {- $disabled{fips} ? "" : "uninstall_fips" -}

libclean:
	@set -e; for s in $(SHLIB_INFO); do \
		if [ "$$s" = ";" ]; then continue; fi; \
		s1=`echo "$$s" | cut -f1 -d";"`; \
		s2=`echo "$$s" | cut -f2 -d";"`; \
		s3=`echo "$$s" | cut -f3 -d";"`; \
		$(ECHO) $(RM) $$s1; {- output_off() unless windowsdll(); "" -}\
		$(RM) apps/$$s1; \
		$(RM) test/$$s1; \
		$(RM) fuzz/$$s1; {- output_on() unless windowsdll(); "" -}\
		$(RM) $$s1; \
		if [ "$$s2" != "" ]; then \
			$(ECHO) $(RM) $$s2; \
			$(RM) $$s2; \
		fi; \
		if [ "$$s3" != "" ]; then \
			$(ECHO) $(RM) $$s3; \
			$(RM) $$s3; \
		fi; \
	done
	$(RM) $(LIBS)
	$(RM) *{- platform->defext() -}

clean: libclean
	$(RM) $(HTMLDOCS1)
	$(RM) $(HTMLDOCS3)
	$(RM) $(HTMLDOCS5)
	$(RM) $(HTMLDOCS7)
	$(RM) $(MANDOCS1)
	$(RM) $(MANDOCS3)
	$(RM) $(MANDOCS5)
	$(RM) $(MANDOCS7)
	$(RM) $(PROGRAMS) $(TESTPROGS) $(MODULES) $(FIPSMODULE) $(SCRIPTS)
	$(RM) $(GENERATED_MANDATORY) $(GENERATED)
	-find . -name '*{- platform->depext() -}' \! -name '.*' \! -type d -exec $(RM) {} \;
	-find . -name '*{- platform->objext() -}' \! -name '.*' \! -type d -exec $(RM) {} \;
	$(RM) core
	$(RM) tags TAGS doc-nits md-nits
	$(RM) -r test/test-runs
	$(RM) providers/fips*.new
	$(RM) openssl.pc libcrypto.pc libssl.pc
	-find . -type l \! -name '.*' -exec $(RM) {} \;

distclean: clean
	$(RM) include/openssl/configuration.h
	$(RM) configdata.pm
	$(RM) Makefile

# We check if any depfile is newer than Makefile and decide to
# concatenate only if that is true.
depend: Makefile
	@: {- output_off() if $disabled{makedepend}; "" -}
	@$(PERL) $(SRCDIR)/util/add-depends.pl "{- $makedep_scheme -}"
	@: {- output_on() if $disabled{makedepend}; "" -}

# Install helper targets #############################################

install_sw: install_dev install_engines install_modules install_runtime

uninstall_sw: uninstall_runtime uninstall_modules uninstall_engines uninstall_dev

install_docs: install_man_docs install_html_docs

uninstall_docs: uninstall_man_docs uninstall_html_docs
	$(RM) -r "$(DESTDIR)$(DOCDIR)"

{- output_off() if $disabled{fips}; "" -}
install_fips: build_sw $(INSTALL_FIPSMODULECONF)
	@[ -n "$(INSTALLTOP)" ] || (echo INSTALLTOP should not be empty; exit 1)
	@$(PERL) $(SRCDIR)/util/mkdir-p.pl "$(DESTDIR)$(MODULESDIR)"
	@$(PERL) $(SRCDIR)/util/mkdir-p.pl "$(DESTDIR)$(OPENSSLDIR)"
	@$(ECHO) "*** Installing FIPS module"
	@$(ECHO) "install $(INSTALL_FIPSMODULE) -> $(DESTDIR)$(MODULESDIR)/$(FIPSMODULENAME)"
	@cp "$(INSTALL_FIPSMODULE)" "$(DESTDIR)$(MODULESDIR)/$(FIPSMODULENAME).new"
	@chmod 755 "$(DESTDIR)$(MODULESDIR)/$(FIPSMODULENAME).new"
	@mv -f "$(DESTDIR)$(MODULESDIR)/$(FIPSMODULENAME).new" \
	       "$(DESTDIR)$(MODULESDIR)/$(FIPSMODULENAME)"
	@$(ECHO) "*** Installing FIPS module configuration"
	@$(ECHO) "install $(INSTALL_FIPSMODULECONF) -> $(DESTDIR)$(OPENSSLDIR)/fipsmodule.cnf"
	@cp $(INSTALL_FIPSMODULECONF) "$(DESTDIR)$(OPENSSLDIR)/fipsmodule.cnf"

uninstall_fips:
	@$(ECHO) "*** Uninstalling FIPS module configuration"
	$(RM) "$(DESTDIR)$(OPENSSLDIR)/fipsmodule.cnf"
	@$(ECHO) "*** Uninstalling FIPS module"
	$(RM) "$(DESTDIR)$(MODULESDIR)/$(FIPSMODULENAME)"
{- if ($disabled{fips}) { output_on(); } else { output_off(); } "" -}
install_fips:
	@$(ECHO) "The 'install_fips' target requires the 'enable-fips' option"

uninstall_fips:
	@$(ECHO) "The 'uninstall_fips' target requires the 'enable-fips' option"
{- output_on() if !$disabled{fips}; "" -}


install_ssldirs:
	@$(PERL) $(SRCDIR)/util/mkdir-p.pl "$(DESTDIR)$(OPENSSLDIR)/certs"
	@$(PERL) $(SRCDIR)/util/mkdir-p.pl "$(DESTDIR)$(OPENSSLDIR)/private"
	@$(PERL) $(SRCDIR)/util/mkdir-p.pl "$(DESTDIR)$(OPENSSLDIR)/misc"
	@set -e; for x in dummy $(MISC_SCRIPTS); do \
		if [ "$$x" = "dummy" ]; then continue; fi; \
		x1=`echo "$$x" | cut -f1 -d:`; \
		x2=`echo "$$x" | cut -f2 -d:`; \
		fn=`basename $$x1`; \
		$(ECHO) "install $$x1 -> $(DESTDIR)$(OPENSSLDIR)/misc/$$fn"; \
		cp $$x1 "$(DESTDIR)$(OPENSSLDIR)/misc/$$fn.new"; \
		chmod 755 "$(DESTDIR)$(OPENSSLDIR)/misc/$$fn.new"; \
		mv -f "$(DESTDIR)$(OPENSSLDIR)/misc/$$fn.new" \
		      "$(DESTDIR)$(OPENSSLDIR)/misc/$$fn"; \
		if [ "$$x1" != "$$x2" ]; then \
			ln=`basename "$$x2"`; \
			: {- output_off() unless windowsdll(); "" -}; \
			$(ECHO) "copy $(DESTDIR)$(OPENSSLDIR)/misc/$$ln -> $(DESTDIR)$(OPENSSLDIR)/misc/$$fn"; \
			cp "$(DESTDIR)$(OPENSSLDIR)/misc/$$fn" "$(DESTDIR)$(OPENSSLDIR)/misc/$$ln"; \
			: {- output_on() unless windowsdll();
			     output_off() if windowsdll(); "" -}; \
			$(ECHO) "link $(DESTDIR)$(OPENSSLDIR)/misc/$$ln -> $(DESTDIR)$(OPENSSLDIR)/misc/$$fn"; \
			ln -sf $$fn "$(DESTDIR)$(OPENSSLDIR)/misc/$$ln"; \
			: {- output_on() if windowsdll(); "" -}; \
		fi; \
	done
	@$(ECHO) "install $(SRCDIR)/apps/openssl.cnf -> $(DESTDIR)$(OPENSSLDIR)/openssl.cnf.dist"
	@cp $(SRCDIR)/apps/openssl.cnf "$(DESTDIR)$(OPENSSLDIR)/openssl.cnf.new"
	@chmod 644 "$(DESTDIR)$(OPENSSLDIR)/openssl.cnf.new"
	@mv -f  "$(DESTDIR)$(OPENSSLDIR)/openssl.cnf.new" "$(DESTDIR)$(OPENSSLDIR)/openssl.cnf.dist"
	@if [ ! -f "$(DESTDIR)$(OPENSSLDIR)/openssl.cnf" ]; then \
		$(ECHO) "install $(SRCDIR)/apps/openssl.cnf -> $(DESTDIR)$(OPENSSLDIR)/openssl.cnf"; \
		cp $(SRCDIR)/apps/openssl.cnf "$(DESTDIR)$(OPENSSLDIR)/openssl.cnf"; \
		chmod 644 "$(DESTDIR)$(OPENSSLDIR)/openssl.cnf"; \
	fi
	@$(ECHO) "install $(SRCDIR)/apps/ct_log_list.cnf -> $(DESTDIR)$(OPENSSLDIR)/ct_log_list.cnf.dist"
	@cp $(SRCDIR)/apps/ct_log_list.cnf "$(DESTDIR)$(OPENSSLDIR)/ct_log_list.cnf.new"
	@chmod 644 "$(DESTDIR)$(OPENSSLDIR)/ct_log_list.cnf.new"
	@mv -f  "$(DESTDIR)$(OPENSSLDIR)/ct_log_list.cnf.new" "$(DESTDIR)$(OPENSSLDIR)/ct_log_list.cnf.dist"
	@if [ ! -f "$(DESTDIR)$(OPENSSLDIR)/ct_log_list.cnf" ]; then \
		$(ECHO) "install $(SRCDIR)/apps/ct_log_list.cnf -> $(DESTDIR)$(OPENSSLDIR)/ct_log_list.cnf"; \
		cp $(SRCDIR)/apps/ct_log_list.cnf "$(DESTDIR)$(OPENSSLDIR)/ct_log_list.cnf"; \
		chmod 644 "$(DESTDIR)$(OPENSSLDIR)/ct_log_list.cnf"; \
	fi

install_dev: install_runtime_libs
	@[ -n "$(INSTALLTOP)" ] || (echo INSTALLTOP should not be empty; exit 1)
	@$(ECHO) "*** Installing development files"
	@$(PERL) $(SRCDIR)/util/mkdir-p.pl "$(DESTDIR)$(INSTALLTOP)/include/openssl"
	@ : {- output_off() if $disabled{uplink}; "" -}
	@$(ECHO) "install $(SRCDIR)/ms/applink.c -> $(DESTDIR)$(INSTALLTOP)/include/openssl/applink.c"
	@cp $(SRCDIR)/ms/applink.c "$(DESTDIR)$(INSTALLTOP)/include/openssl/applink.c"
	@chmod 644 "$(DESTDIR)$(INSTALLTOP)/include/openssl/applink.c"
	@ : {- output_on() if $disabled{uplink}; "" -}
	@set -e; for i in $(SRCDIR)/include/openssl/*.h \
			  $(BLDDIR)/include/openssl/*.h; do \
		fn=`basename $$i`; \
		$(ECHO) "install $$i -> $(DESTDIR)$(INSTALLTOP)/include/openssl/$$fn"; \
		cp $$i "$(DESTDIR)$(INSTALLTOP)/include/openssl/$$fn"; \
		chmod 644 "$(DESTDIR)$(INSTALLTOP)/include/openssl/$$fn"; \
	done
	@$(PERL) $(SRCDIR)/util/mkdir-p.pl "$(DESTDIR)$(libdir)"
	@set -e; for l in $(INSTALL_LIBS); do \
		fn=`basename $$l`; \
		$(ECHO) "install $$l -> $(DESTDIR)$(libdir)/$$fn"; \
		cp $$l "$(DESTDIR)$(libdir)/$$fn.new"; \
		$(RANLIB) "$(DESTDIR)$(libdir)/$$fn.new"; \
		chmod 644 "$(DESTDIR)$(libdir)/$$fn.new"; \
		mv -f "$(DESTDIR)$(libdir)/$$fn.new" \
		      "$(DESTDIR)$(libdir)/$$fn"; \
	done
	@ : {- output_off() if $disabled{shared}; "" -}
	@set -e; for s in $(INSTALL_SHLIB_INFO); do \
		s1=`echo "$$s" | cut -f1 -d";"`; \
		s2=`echo "$$s" | cut -f2 -d";"`; \
		s3=`echo "$$s" | cut -f3 -d";"`; \
		fn1=`basename "$$s1"`; \
		fn2=`basename "$$s2"`; \
		fn3=`basename "$$s3"`; \
		: {- output_off(); output_on() unless windowsdll() or sharedaix(); "" -}; \
		if [ "$$fn2" != "" ]; then \
			$(ECHO) "link $(DESTDIR)$(libdir)/$$fn2 -> $(DESTDIR)$(libdir)/$$fn1"; \
			ln -sf $$fn1 "$(DESTDIR)$(libdir)/$$fn2"; \
		fi; \
		: {- output_off() unless windowsdll() or sharedaix(); output_on() if windowsdll(); "" -}; \
		if [ "$$fn3" != "" ]; then \
			$(ECHO) "install $$s3 -> $(DESTDIR)$(libdir)/$$fn3"; \
			cp $$s3 "$(DESTDIR)$(libdir)/$$fn3.new"; \
			chmod 755 "$(DESTDIR)$(libdir)/$$fn3.new"; \
			mv -f "$(DESTDIR)$(libdir)/$$fn3.new" \
			      "$(DESTDIR)$(libdir)/$$fn3"; \
		fi; \
		: {- output_off() if windowsdll(); output_on() if sharedaix(); "" -}; \
		a="$(DESTDIR)$(libdir)/$$fn2"; \
		$(ECHO) "install $$s1 -> $$a"; \
		if [ -f $$a ]; then ( trap "rm -rf /tmp/ar.$$$$" INT 0; \
			mkdir /tmp/ar.$$$$; ( cd /tmp/ar.$$$$; \
			cp -f $$a $$a.new; \
			for so in `$(AR) t $$a`; do \
				$(AR) x $$a $$so; \
				chmod u+w $$so; \
				strip -X32_64 -e $$so; \
				$(AR) r $$a.new $$so; \
			done; \
		)); fi; \
		$(AR) r $$a.new $$s1; \
		mv -f $$a.new $$a; \
		: {- output_off() if sharedaix(); output_on(); "" -}; \
	done
	@ : {- output_on() if $disabled{shared}; "" -}
	@$(PERL) $(SRCDIR)/util/mkdir-p.pl "$(DESTDIR)$(libdir)/pkgconfig"
	@$(ECHO) "install libcrypto.pc -> $(DESTDIR)$(libdir)/pkgconfig/libcrypto.pc"
	@cp libcrypto.pc "$(DESTDIR)$(libdir)/pkgconfig"
	@chmod 644 "$(DESTDIR)$(libdir)/pkgconfig/libcrypto.pc"
	@$(ECHO) "install libssl.pc -> $(DESTDIR)$(libdir)/pkgconfig/libssl.pc"
	@cp libssl.pc "$(DESTDIR)$(libdir)/pkgconfig"
	@chmod 644 "$(DESTDIR)$(libdir)/pkgconfig/libssl.pc"
	@$(ECHO) "install openssl.pc -> $(DESTDIR)$(libdir)/pkgconfig/openssl.pc"
	@cp openssl.pc "$(DESTDIR)$(libdir)/pkgconfig"
	@chmod 644 "$(DESTDIR)$(libdir)/pkgconfig/openssl.pc"

uninstall_dev: uninstall_runtime_libs
	@$(ECHO) "*** Uninstalling development files"
	@ : {- output_off() if $disabled{uplink}; "" -}
	@$(ECHO) "$(RM) $(DESTDIR)$(INSTALLTOP)/include/openssl/applink.c"
	@$(RM) "$(DESTDIR)$(INSTALLTOP)/include/openssl/applink.c"
	@ : {- output_on() if $disabled{uplink}; "" -}
	@set -e; for i in $(SRCDIR)/include/openssl/*.h \
			  $(BLDDIR)/include/openssl/*.h; do \
		fn=`basename $$i`; \
		$(ECHO) "$(RM) $(DESTDIR)$(INSTALLTOP)/include/openssl/$$fn"; \
		$(RM) "$(DESTDIR)$(INSTALLTOP)/include/openssl/$$fn"; \
	done
	-$(RMDIR) "$(DESTDIR)$(INSTALLTOP)/include/openssl"
	-$(RMDIR) "$(DESTDIR)$(INSTALLTOP)/include"
	@set -e; for l in $(INSTALL_LIBS); do \
		fn=`basename $$l`; \
		$(ECHO) "$(RM) $(DESTDIR)$(libdir)/$$fn"; \
		$(RM) "$(DESTDIR)$(libdir)/$$fn"; \
	done
	@ : {- output_off() if $disabled{shared}; "" -}
	@set -e; for s in $(INSTALL_SHLIB_INFO); do \
		s1=`echo "$$s" | cut -f1 -d";"`; \
		s2=`echo "$$s" | cut -f2 -d";"`; \
		s3=`echo "$$s" | cut -f3 -d";"`; \
		fn1=`basename "$$s1"`; \
		fn2=`basename "$$s2"`; \
		fn3=`basename "$$s3"`; \
		: {- output_off() if windowsdll(); "" -}; \
		$(ECHO) "$(RM) $(DESTDIR)$(libdir)/$$fn1"; \
		$(RM) "$(DESTDIR)$(libdir)/$$fn1"; \
		if [ -n "$$fn2" ]; then \
			$(ECHO) "$(RM) $(DESTDIR)$(libdir)/$$fn2"; \
			$(RM) "$(DESTDIR)$(libdir)/$$fn2"; \
		fi; \
		: {- output_on() if windowsdll(); "" -}{- output_off() unless windowsdll(); "" -}; \
		if [ -n "$$fn3" ]; then \
			$(ECHO) "$(RM) $(DESTDIR)$(libdir)/$$fn3"; \
			$(RM) "$(DESTDIR)$(libdir)/$$fn3"; \
		fi; \
		: {- output_on() unless windowsdll(); "" -}; \
	done
	@ : {- output_on() if $disabled{shared}; "" -}
	$(RM) "$(DESTDIR)$(libdir)/pkgconfig/libcrypto.pc"
	$(RM) "$(DESTDIR)$(libdir)/pkgconfig/libssl.pc"
	$(RM) "$(DESTDIR)$(libdir)/pkgconfig/openssl.pc"
	-$(RMDIR) "$(DESTDIR)$(libdir)/pkgconfig"
	-$(RMDIR) "$(DESTDIR)$(libdir)"

_install_modules_deps: install_runtime_libs build_modules

install_engines: _install_modules_deps
	@[ -n "$(INSTALLTOP)" ] || (echo INSTALLTOP should not be empty; exit 1)
	@$(PERL) $(SRCDIR)/util/mkdir-p.pl "$(DESTDIR)$(ENGINESDIR)/"
	@$(ECHO) "*** Installing engines"
	@set -e; for e in dummy $(INSTALL_ENGINES); do \
		if [ "$$e" = "dummy" ]; then continue; fi; \
		fn=`basename $$e`; \
		$(ECHO) "install $$e -> $(DESTDIR)$(ENGINESDIR)/$$fn"; \
		cp $$e "$(DESTDIR)$(ENGINESDIR)/$$fn.new"; \
		chmod 755 "$(DESTDIR)$(ENGINESDIR)/$$fn.new"; \
		mv -f "$(DESTDIR)$(ENGINESDIR)/$$fn.new" \
		      "$(DESTDIR)$(ENGINESDIR)/$$fn"; \
	done

uninstall_engines:
	@$(ECHO) "*** Uninstalling engines"
	@set -e; for e in dummy $(INSTALL_ENGINES); do \
		if [ "$$e" = "dummy" ]; then continue; fi; \
		fn=`basename $$e`; \
		$(ECHO) "$(RM) $(DESTDIR)$(ENGINESDIR)/$$fn"; \
		$(RM) "$(DESTDIR)$(ENGINESDIR)/$$fn"; \
	done
	-$(RMDIR) "$(DESTDIR)$(ENGINESDIR)"

install_modules: _install_modules_deps
	@[ -n "$(INSTALLTOP)" ] || (echo INSTALLTOP should not be empty; exit 1)
	@$(PERL) $(SRCDIR)/util/mkdir-p.pl "$(DESTDIR)$(MODULESDIR)/"
	@$(ECHO) "*** Installing modules"
	@set -e; for e in dummy $(INSTALL_MODULES); do \
		if [ "$$e" = "dummy" ]; then continue; fi; \
		fn=`basename $$e`; \
		$(ECHO) "install $$e -> $(DESTDIR)$(MODULESDIR)/$$fn"; \
		cp $$e "$(DESTDIR)$(MODULESDIR)/$$fn.new"; \
		chmod 755 "$(DESTDIR)$(MODULESDIR)/$$fn.new"; \
		mv -f "$(DESTDIR)$(MODULESDIR)/$$fn.new" \
		      "$(DESTDIR)$(MODULESDIR)/$$fn"; \
	done

uninstall_modules:
	@$(ECHO) "*** Uninstalling modules"
	@set -e; for e in dummy $(INSTALL_MODULES); do \
		if [ "$$e" = "dummy" ]; then continue; fi; \
		fn=`basename $$e`; \
		$(ECHO) "$(RM) $(DESTDIR)$(MODULESDIR)/$$fn"; \
		$(RM) "$(DESTDIR)$(MODULESDIR)/$$fn"; \
	done
	-$(RMDIR) "$(DESTDIR)$(MODULESDIR)"

install_runtime: install_programs

install_runtime_libs: build_libs
	@[ -n "$(INSTALLTOP)" ] || (echo INSTALLTOP should not be empty; exit 1)
	@ : {- output_off() if windowsdll(); "" -}
	@$(PERL) $(SRCDIR)/util/mkdir-p.pl "$(DESTDIR)$(libdir)"
	@ : {- output_on() if windowsdll(); output_off() unless windowsdll(); "" -}
	@$(PERL) $(SRCDIR)/util/mkdir-p.pl "$(DESTDIR)$(INSTALLTOP)/bin"
	@ : {- output_on() unless windowsdll(); "" -}
	@$(ECHO) "*** Installing runtime libraries"
	@set -e; for s in dummy $(INSTALL_SHLIBS); do \
		if [ "$$s" = "dummy" ]; then continue; fi; \
		fn=`basename $$s`; \
		: {- output_off() unless windowsdll(); "" -}; \
		$(ECHO) "install $$s -> $(DESTDIR)$(INSTALLTOP)/bin/$$fn"; \
		cp $$s "$(DESTDIR)$(INSTALLTOP)/bin/$$fn.new"; \
		chmod 755 "$(DESTDIR)$(INSTALLTOP)/bin/$$fn.new"; \
		mv -f "$(DESTDIR)$(INSTALLTOP)/bin/$$fn.new" \
		      "$(DESTDIR)$(INSTALLTOP)/bin/$$fn"; \
		: {- output_on() unless windowsdll(); "" -}{- output_off() if windowsdll(); "" -}; \
		$(ECHO) "install $$s -> $(DESTDIR)$(libdir)/$$fn"; \
		cp $$s "$(DESTDIR)$(libdir)/$$fn.new"; \
		chmod 755 "$(DESTDIR)$(libdir)/$$fn.new"; \
		mv -f "$(DESTDIR)$(libdir)/$$fn.new" \
		      "$(DESTDIR)$(libdir)/$$fn"; \
		: {- output_on() if windowsdll(); "" -}; \
	done

install_programs: install_runtime_libs build_programs
	@[ -n "$(INSTALLTOP)" ] || (echo INSTALLTOP should not be empty; exit 1)
	@$(PERL) $(SRCDIR)/util/mkdir-p.pl "$(DESTDIR)$(INSTALLTOP)/bin"
	@$(ECHO) "*** Installing runtime programs"
	@set -e; for x in dummy $(INSTALL_PROGRAMS); do \
		if [ "$$x" = "dummy" ]; then continue; fi; \
		fn=`basename $$x`; \
		$(ECHO) "install $$x -> $(DESTDIR)$(INSTALLTOP)/bin/$$fn"; \
		cp $$x "$(DESTDIR)$(INSTALLTOP)/bin/$$fn.new"; \
		chmod 755 "$(DESTDIR)$(INSTALLTOP)/bin/$$fn.new"; \
		mv -f "$(DESTDIR)$(INSTALLTOP)/bin/$$fn.new" \
		      "$(DESTDIR)$(INSTALLTOP)/bin/$$fn"; \
	done
	@set -e; for x in dummy $(BIN_SCRIPTS); do \
		if [ "$$x" = "dummy" ]; then continue; fi; \
		fn=`basename $$x`; \
		$(ECHO) "install $$x -> $(DESTDIR)$(INSTALLTOP)/bin/$$fn"; \
		cp $$x "$(DESTDIR)$(INSTALLTOP)/bin/$$fn.new"; \
		chmod 755 "$(DESTDIR)$(INSTALLTOP)/bin/$$fn.new"; \
		mv -f "$(DESTDIR)$(INSTALLTOP)/bin/$$fn.new" \
		      "$(DESTDIR)$(INSTALLTOP)/bin/$$fn"; \
	done

uninstall_runtime: uninstall_programs uninstall_runtime_libs

uninstall_programs:
	@$(ECHO) "*** Uninstalling runtime programs"
	@set -e; for x in dummy $(INSTALL_PROGRAMS); \
	do  \
		if [ "$$x" = "dummy" ]; then continue; fi; \
		fn=`basename $$x`; \
		$(ECHO) "$(RM) $(DESTDIR)$(INSTALLTOP)/bin/$$fn"; \
		$(RM) "$(DESTDIR)$(INSTALLTOP)/bin/$$fn"; \
	done;
	@set -e; for x in dummy $(BIN_SCRIPTS); \
	do  \
		if [ "$$x" = "dummy" ]; then continue; fi; \
		fn=`basename $$x`; \
		$(ECHO) "$(RM) $(DESTDIR)$(INSTALLTOP)/bin/$$fn"; \
		$(RM) "$(DESTDIR)$(INSTALLTOP)/bin/$$fn"; \
	done
	-$(RMDIR) "$(DESTDIR)$(INSTALLTOP)/bin"

uninstall_runtime_libs:
	@$(ECHO) "*** Uninstalling runtime libraries"
	@ : {- output_off() unless windowsdll(); "" -}
	@set -e; for s in dummy $(INSTALL_SHLIBS); do \
		if [ "$$s" = "dummy" ]; then continue; fi; \
		fn=`basename $$s`; \
		$(ECHO) "$(RM) $(DESTDIR)$(INSTALLTOP)/bin/$$fn"; \
		$(RM) "$(DESTDIR)$(INSTALLTOP)/bin/$$fn"; \
	done
	@ : {- output_on() unless windowsdll(); "" -}


install_man_docs: build_man_docs
	@[ -n "$(INSTALLTOP)" ] || (echo INSTALLTOP should not be empty; exit 1)
	@$(PERL) $(SRCDIR)/util/mkdir-p.pl "$(DESTDIR)$(MANDIR)/man1"
	@$(PERL) $(SRCDIR)/util/mkdir-p.pl "$(DESTDIR)$(MANDIR)/man3"
	@$(PERL) $(SRCDIR)/util/mkdir-p.pl "$(DESTDIR)$(MANDIR)/man5"
	@$(PERL) $(SRCDIR)/util/mkdir-p.pl "$(DESTDIR)$(MANDIR)/man7"
	@$(ECHO) "*** Installing manpages"
	@set -e; for x in dummy $(MANDOCS1); do \
		if [ "$$x" = "dummy" ]; then continue; fi; \
		fn=`basename $$x`; \
		$(ECHO) "install $$x -> $(DESTDIR)$(MANDIR)/man1/$${fn}$(MANSUFFIX)"; \
		cp $$x "$(DESTDIR)$(MANDIR)/man1/$${fn}$(MANSUFFIX)"; \
		chmod 644 "$(DESTDIR)$(MANDIR)/man1/$${fn}$(MANSUFFIX)"; \
		$(PERL) $(SRCDIR)/util/write-man-symlinks install $(SRCDIR)/doc/man1 $(BLDDIR)/doc/man1 $${fn}$(MANSUFFIX) "$(DESTDIR)$(MANDIR)/man1"; \
	done
	@set -e; for x in dummy $(MANDOCS3); do \
		if [ "$$x" = "dummy" ]; then continue; fi; \
		fn=`basename $$x`; \
		$(ECHO) "install $$x -> $(DESTDIR)$(MANDIR)/man3/$${fn}$(MANSUFFIX)"; \
		cp $$x "$(DESTDIR)$(MANDIR)/man3/$${fn}$(MANSUFFIX)"; \
		chmod 644 "$(DESTDIR)$(MANDIR)/man3/$${fn}$(MANSUFFIX)"; \
		$(PERL) $(SRCDIR)/util/write-man-symlinks install $(SRCDIR)/doc/man3 $(BLDDIR)/doc/man3 $${fn}$(MANSUFFIX) "$(DESTDIR)$(MANDIR)/man3"; \
	done
	@set -e; for x in dummy $(MANDOCS5); do \
		if [ "$$x" = "dummy" ]; then continue; fi; \
		fn=`basename $$x`; \
		$(ECHO) "install $$x -> $(DESTDIR)$(MANDIR)/man5/$${fn}$(MANSUFFIX)"; \
		cp $$x "$(DESTDIR)$(MANDIR)/man5/$${fn}$(MANSUFFIX)"; \
		chmod 644 "$(DESTDIR)$(MANDIR)/man5/$${fn}$(MANSUFFIX)"; \
		$(PERL) $(SRCDIR)/util/write-man-symlinks install $(SRCDIR)/doc/man5 $(BLDDIR)/doc/man5 $${fn}$(MANSUFFIX) "$(DESTDIR)$(MANDIR)/man5"; \
	done
	@set -e; for x in dummy $(MANDOCS7); do \
		if [ "$$x" = "dummy" ]; then continue; fi; \
		fn=`basename $$x`; \
		$(ECHO) "install $$x -> $(DESTDIR)$(MANDIR)/man7/$${fn}$(MANSUFFIX)"; \
		cp $$x "$(DESTDIR)$(MANDIR)/man7/$${fn}$(MANSUFFIX)"; \
		chmod 644 "$(DESTDIR)$(MANDIR)/man7/$${fn}$(MANSUFFIX)"; \
		$(PERL) $(SRCDIR)/util/write-man-symlinks install $(SRCDIR)/doc/man7 $(BLDDIR)/doc/man7 $${fn}$(MANSUFFIX) "$(DESTDIR)$(MANDIR)/man7"; \
	done

uninstall_man_docs: build_man_docs
	@$(ECHO) "*** Uninstalling manpages"
	@set -e; for x in dummy $(MANDOCS1); do \
		if [ "$$x" = "dummy" ]; then continue; fi; \
		fn=`basename $$x`; \
		$(ECHO) "$(RM) $(DESTDIR)$(MANDIR)/man1/$${fn}$(MANSUFFIX)"; \
		$(RM) "$(DESTDIR)$(MANDIR)/man1/$${fn}$(MANSUFFIX)"; \
		$(PERL) $(SRCDIR)/util/write-man-symlinks uninstall $(SRCDIR)/doc/man1 $(BLDDIR)/doc/man1 $${fn}$(MANSUFFIX) "$(DESTDIR)$(MANDIR)/man1"; \
	done
	@set -e; for x in dummy $(MANDOCS3); do \
		if [ "$$x" = "dummy" ]; then continue; fi; \
		fn=`basename $$x`; \
		$(ECHO) "$(RM) $(DESTDIR)$(MANDIR)/man3/$${fn}$(MANSUFFIX)"; \
		$(RM) "$(DESTDIR)$(MANDIR)/man3/$${fn}$(MANSUFFIX)"; \
		$(PERL) $(SRCDIR)/util/write-man-symlinks uninstall $(SRCDIR)/doc/man3 $(BLDDIR)/doc/man3 $${fn}$(MANSUFFIX) "$(DESTDIR)$(MANDIR)/man3"; \
	done
	@set -e; for x in dummy $(MANDOCS5); do \
		if [ "$$x" = "dummy" ]; then continue; fi; \
		fn=`basename $$x`; \
		$(ECHO) "$(RM) $(DESTDIR)$(MANDIR)/man5/$${fn}$(MANSUFFIX)"; \
		$(RM) "$(DESTDIR)$(MANDIR)/man5/$${fn}$(MANSUFFIX)"; \
		$(PERL) $(SRCDIR)/util/write-man-symlinks uninstall $(SRCDIR)/doc/man5 $(BLDDIR)/doc/man5 $${fn}$(MANSUFFIX) "$(DESTDIR)$(MANDIR)/man5"; \
	done
	@set -e; for x in dummy $(MANDOCS7); do \
		if [ "$$x" = "dummy" ]; then continue; fi; \
		fn=`basename $$x`; \
		$(ECHO) "$(RM) $(DESTDIR)$(MANDIR)/man7/$${fn}$(MANSUFFIX)"; \
		$(RM) "$(DESTDIR)$(MANDIR)/man7/$${fn}$(MANSUFFIX)"; \
		$(PERL) $(SRCDIR)/util/write-man-symlinks uninstall $(SRCDIR)/doc/man7 $(BLDDIR)/doc/man7 $${fn}$(MANSUFFIX) "$(DESTDIR)$(MANDIR)/man7"; \
	done

install_html_docs: install_image_docs build_html_docs
	@[ -n "$(INSTALLTOP)" ] || (echo INSTALLTOP should not be empty; exit 1)
	@$(PERL) $(SRCDIR)/util/mkdir-p.pl "$(DESTDIR)$(HTMLDIR)/man1"
	@$(PERL) $(SRCDIR)/util/mkdir-p.pl "$(DESTDIR)$(HTMLDIR)/man3"
	@$(PERL) $(SRCDIR)/util/mkdir-p.pl "$(DESTDIR)$(HTMLDIR)/man5"
	@$(PERL) $(SRCDIR)/util/mkdir-p.pl "$(DESTDIR)$(HTMLDIR)/man7"
	@$(ECHO) "*** Installing HTML manpages"
	@set -e; for x in dummy $(HTMLDOCS1); do \
		if [ "$$x" = "dummy" ]; then continue; fi; \
		fn=`basename $$x`; \
		$(ECHO) "install $$x -> $(DESTDIR)$(HTMLDIR)/man1/$$fn"; \
		cp $$x "$(DESTDIR)$(HTMLDIR)/man1/$$fn"; \
		chmod 644 "$(DESTDIR)$(HTMLDIR)/man1/$$fn"; \
	done
	@set -e; for x in dummy $(HTMLDOCS3); do \
		if [ "$$x" = "dummy" ]; then continue; fi; \
		fn=`basename $$x`; \
		$(ECHO) "install $$x -> $(DESTDIR)$(HTMLDIR)/man3/$$fn"; \
		cp $$x "$(DESTDIR)$(HTMLDIR)/man3/$$fn"; \
		chmod 644 "$(DESTDIR)$(HTMLDIR)/man3/$$fn"; \
	done
	@set -e; for x in dummy $(HTMLDOCS5); do \
		if [ "$$x" = "dummy" ]; then continue; fi; \
		fn=`basename $$x`; \
		$(ECHO) "install $$x -> $(DESTDIR)$(HTMLDIR)/man5/$$fn"; \
		cp $$x "$(DESTDIR)$(HTMLDIR)/man5/$$fn"; \
		chmod 644 "$(DESTDIR)$(HTMLDIR)/man5/$$fn"; \
	done
	@set -e; for x in dummy $(HTMLDOCS7); do \
		if [ "$$x" = "dummy" ]; then continue; fi; \
		fn=`basename $$x`; \
		$(ECHO) "install $$x -> $(DESTDIR)$(HTMLDIR)/man7/$$fn"; \
		cp $$x "$(DESTDIR)$(HTMLDIR)/man7/$$fn"; \
		chmod 644 "$(DESTDIR)$(HTMLDIR)/man7/$$fn"; \
	done

uninstall_html_docs: uninstall_image_docs
	@$(ECHO) "*** Uninstalling HTML manpages"
	@set -e; for x in dummy $(HTMLDOCS1); do \
		if [ "$$x" = "dummy" ]; then continue; fi; \
		fn=`basename $$x`; \
		$(ECHO) "$(RM) $(DESTDIR)$(HTMLDIR)/man1/$$fn"; \
		$(RM) "$(DESTDIR)$(HTMLDIR)/man1/$$fn"; \
	done
	@set -e; for x in dummy $(HTMLDOCS3); do \
		if [ "$$x" = "dummy" ]; then continue; fi; \
		fn=`basename $$x`; \
		$(ECHO) "$(RM) $(DESTDIR)$(HTMLDIR)/man3/$$fn"; \
		$(RM) "$(DESTDIR)$(HTMLDIR)/man3/$$fn"; \
	done
	@set -e; for x in dummy $(HTMLDOCS5); do \
		if [ "$$x" = "dummy" ]; then continue; fi; \
		fn=`basename $$x`; \
		$(ECHO) "$(RM) $(DESTDIR)$(HTMLDIR)/man5/$$fn"; \
		$(RM) "$(DESTDIR)$(HTMLDIR)/man5/$$fn"; \
	done
	@set -e; for x in dummy $(HTMLDOCS7); do \
		if [ "$$x" = "dummy" ]; then continue; fi; \
		fn=`basename $$x`; \
		$(ECHO) "$(RM) $(DESTDIR)$(HTMLDIR)/man7/$$fn"; \
		$(RM) "$(DESTDIR)$(HTMLDIR)/man7/$$fn"; \
	done

install_image_docs:
	@$(PERL) $(SRCDIR)/util/mkdir-p.pl "$(DESTDIR)$(HTMLDIR)/man7/img"
	@set -e; for x in dummy $(IMAGEDOCS7); do \
		if [ "$$x" = "dummy" ]; then continue; fi; \
		fn=`basename $$x`; \
		$(ECHO) "install $$x -> $(DESTDIR)$(HTMLDIR)/man7/img/$$fn"; \
		cp $(SRCDIR)/$$x "$(DESTDIR)$(HTMLDIR)/man7/img/$$fn"; \
		chmod 644 "$(DESTDIR)$(HTMLDIR)/man7/img/$$fn"; \
	done

uninstall_image_docs:
	@set -e; for x in dummy $(IMAGEDOCS7); do \
		if [ "$$x" = "dummy" ]; then continue; fi; \
		fn=`basename $$x`; \
		$(ECHO) "$(RM) $(DESTDIR)$(HTMLDIR)/man7/img/$$fn"; \
		$(RM) "$(DESTDIR)$(HTMLDIR)/man7/img/$$fn"; \
	done

# Developer targets (note: these are only available on Unix) #########

# It's important that generate_buildinfo comes after ordinals, as ordinals
# is sensitive to build.info changes.
update: generate errors ordinals generate_buildinfo

generate: generate_apps generate_crypto_bn generate_crypto_objects \
          generate_crypto_conf generate_crypto_asn1 generate_fuzz_oids

generate_buildinfo: generate_doc_buildinfo

.PHONY: doc-nits md-nits
doc-nits: build_generated_pods
	$(PERL) $(SRCDIR)/util/find-doc-nits -c -n -l -e

# This uses "mdl", the markdownlint application, which is written in ruby.
# The source is at https://github.com/markdownlint/markdownlint
# If you have ruby installed, "gem install mdl" should work.
# Another option is at https://snapcraft.io/install/mdl/debian
# Finally, there's a Node.js version, which we haven't tried, that
# can be found at https://github.com/DavidAnson/markdownlint
md-nits:
	mdl -s util/markdownlint.rb .

# Test coverage is a good idea for the future
#coverage: $(PROGRAMS) $(TESTPROGRAMS)
#	...

lint:
	lint -DLINT $(INCLUDES) $(SRCS)

generate_apps:
	( cd $(SRCDIR); $(PERL) VMS/VMSify-conf.pl \
				< apps/openssl.cnf > apps/openssl-vms.cnf )

generate_crypto_bn:
	( cd $(SRCDIR); $(PERL) crypto/bn/bn_prime.pl > crypto/bn/bn_prime.h )

generate_crypto_objects:
	( cd $(SRCDIR); $(PERL) crypto/objects/objects.pl -n \
				crypto/objects/objects.txt \
				crypto/objects/obj_mac.num \
				> crypto/objects/obj_mac.new && \
	    mv crypto/objects/obj_mac.new crypto/objects/obj_mac.num )
	( cd $(SRCDIR); $(PERL) crypto/objects/objects.pl \
				crypto/objects/objects.txt \
				crypto/objects/obj_mac.num \
				> include/openssl/obj_mac.h )
	( cd $(SRCDIR); $(PERL) crypto/objects/obj_dat.pl \
				include/openssl/obj_mac.h \
				> crypto/objects/obj_dat.h )
	( cd $(SRCDIR); $(PERL) crypto/objects/objxref.pl \
				crypto/objects/obj_mac.num \
				crypto/objects/obj_xref.txt \
				> crypto/objects/obj_xref.h )
	( cd $(SRCDIR);	sed -e '1,8d' crypto/objects/obj_compat.h >> include/openssl/obj_mac.h )

generate_crypto_conf:
	( cd $(SRCDIR); $(PERL) crypto/conf/keysets.pl \
			        > crypto/conf/conf_def.h )

generate_crypto_asn1:
	( cd $(SRCDIR); $(PERL) crypto/asn1/charmap.pl \
			        > crypto/asn1/charmap.h )

generate_fuzz_oids:
	( cd $(SRCDIR); $(PERL) fuzz/mkfuzzoids.pl \
				crypto/objects/obj_dat.h \
				> fuzz/oids.txt )

generate_doc_buildinfo:
	( $(PERL) -I$(BLDDIR) -Mconfigdata \
                $(SRCDIR)/util/dofile.pl -o Makefile \
                        $(SRCDIR)/doc/build.info.in \
                        > $(SRCDIR)/doc/build.info.new; \
          if ( test -e $(SRCDIR)/doc/build.info \
               && cmp $(SRCDIR)/doc/build.info.new $(SRCDIR)/doc/build.info \
                  > /dev/null ); \
          then \
                rm $(SRCDIR)/doc/build.info.new; \
          else \
                mv $(SRCDIR)/doc/build.info.new $(SRCDIR)/doc/build.info; \
          fi )

generate_fips_sources: providers/fips.module.sources.new
providers/fips.module.sources.new: configdata.pm
	rm -rf sources-tmp
	mkdir sources-tmp
	( \
	  srcdir=`cd $(SRCDIR); pwd`; \
	  cd sources-tmp \
	  && $$srcdir/Configure --banner=Configured enable-fips -O0 \
	  && ./configdata.pm --query 'get_sources("providers/fips")' > sources1 \
	  && $(MAKE) -sj 4 build_generated providers/fips.so \
	  && find . -name '*.d' | xargs cat > dep1 \
          && $(MAKE) distclean \
	  && $$srcdir/Configure --banner=Configured enable-fips no-asm -O0 \
	  && ./configdata.pm --query 'get_sources("providers/fips")' > sources2 \
	  && $(MAKE) -sj 4 build_generated providers/fips.so \
	  && find . -name '*.d' | xargs cat > dep2 \
	  && cat sources1 sources2 \
	     | grep -v ' : \\$$' | grep -v util/providers.num \
	     | sed -e 's/^ *//' -e 's/ *\\$$//' \
	     | sort | uniq > sources \
	  && cat dep1 dep2 \
	     | $(PERL) -p -e 's/\\\n//' \
	     | sed -e 's/^.*: *//' -e 's/  */ /g' \
	     | fgrep -f sources \
	     | tr ' ' '\n' \
	     | sort | uniq > deps.raw \
	  && cat deps.raw \
	     | xargs ./configdata.pm --query 'get_sources(@ARGV)' \
	     | $(PERL) -p -e 's/\\\n//' \
	     | sed -e 's/\./\\\./g' -e 's/ : */:/' -e 's/^/s:/' -e 's/$$/:/' \
	     > deps.sed \
	  && cat deps.raw | sed -f deps.sed > deps \
	)
	( \
	  cat sources-tmp/sources sources-tmp/deps \
	     | $(PERL) -p -e 's:^ *\Q../\E:: ;' \
			  -e 's:^\Q$(SRCDIR)/\E:: if "$(SRCDIR)" ne "." ;' \
			  -e 'my $$x; do { $$x = $$_; s:(^|/)((?!\Q../\E)[^/]*/)\Q..\E($$|/):$$1: } while ($$x ne $$_) ;' ; \
	  cd $(SRCDIR); \
	  for x in crypto/bn/asm/*.pl crypto/bn/asm/*.S \
		   crypto/aes/asm/*.pl crypto/aes/asm/*.S \
		   crypto/ec/asm/*.pl \
		   crypto/modes/asm/*.pl \
		   crypto/sha/asm/*.pl \
		   crypto/*cpuid.pl crypto/*cpuid.S \
		   crypto/*cap.c; do \
	    echo "$$x"; \
	  done \
	) | sort | uniq > providers/fips.module.sources.new
	rm -rf sources-tmp

# Set to -force to force a rebuild
ERROR_REBUILD=
errors:
	( b=`pwd`; set -e; cd $(SRCDIR); \
          $(PERL) util/ck_errf.pl -strict -internal; \
          $(PERL) -I$$b util/mkerr.pl $(ERROR_REBUILD) -internal )
	( b=`pwd`; set -e; cd $(SRCDIR)/engines; \
          for E in *.ec ; do \
              $(PERL) ../util/ck_errf.pl -strict \
                -conf $$E `basename $$E .ec`.c; \
              $(PERL) -I$$b ../util/mkerr.pl $(ERROR_REBUILD) -static \
                -conf $$E `basename $$E .ec`.c ; \
          done )

{- use File::Basename;

   my @sslheaders_tmpl =
       qw( include/openssl/ssl.h
           include/openssl/ssl2.h
           include/openssl/ssl3.h
           include/openssl/sslerr.h
           include/openssl/tls1.h
           include/openssl/dtls1.h
           include/openssl/srtp.h
           include/openssl/sslerr_legacy.h );
   my @cryptoheaders_tmpl =
       qw( include/internal/dso.h
           include/internal/o_dir.h
           include/internal/err.h
           include/internal/evp.h
           include/internal/pem.h
           include/internal/asn1.h
           include/internal/sslconf.h );
   my @cryptoskipheaders = ( @sslheaders_tmpl,
       qw( include/openssl/conf_api.h
           include/openssl/ebcdic.h
           include/openssl/opensslconf.h
           include/openssl/symhacks.h ) );
   our %cryptoheaders = ();
   our %sslheaders = ();
   foreach my $d ( qw( include/openssl include/internal ) ) {
       my @header_patterns =
           map { catfile($config{sourcedir}, $d, $_) } ( '*.h', '*.h.in' );
       foreach my $f ( map { glob($_) } @header_patterns ) {
           my $base = basename($f);
           my $base_in = basename($f, '.in');
           my $dir = catfile($config{sourcedir}, $d);
           if ($base ne $base_in) {
               # We have a .h.in file, which means the header file is in the
               # build tree.
               $base = $base_in;
               $dir = catfile($config{builddir}, $d);
           }
           my $new_f = catfile($dir, $base);
           my $fn = "$d/$base";
           # The logic to add files to @cryptoheaders is a bit complex.  The
           # file to be added must be either in the public header directory
           # or one of the pre-declared internal headers, and must under no
           # circumstances be one of those that must be skipped.
           $cryptoheaders{$new_f} = 1
               if (($d eq 'include/openssl'
                    || ( grep { $_ eq $fn } @cryptoheaders_tmpl ))
                   && !( grep { $_ eq $fn } @cryptoskipheaders ));
           # The logic to add files to @sslheaders is much simpler...
           $sslheaders{$new_f} = 1 if grep { $_ eq $fn } @sslheaders_tmpl;
       }
   }
   "";
-}
CRYPTOHEADERS={- join(" \\\n" . ' ' x 14,
                      fill_lines(" ", $COLUMNS - 14, sort keys %cryptoheaders)) -}
SSLHEADERS={- join(" \\\n" . ' ' x 11,
                   fill_lines(" ", $COLUMNS - 11, sort keys %sslheaders)) -}

renumber: build_generated
	$(PERL) $(SRCDIR)/util/mknum.pl --version $(VERSION_NUMBER) --no-warnings \
                --ordinals $(SRCDIR)/util/libcrypto.num \
                --symhacks $(SRCDIR)/include/openssl/symhacks.h \
                --renumber \
                $(CRYPTOHEADERS)
	$(PERL) $(SRCDIR)/util/mknum.pl --version $(VERSION_NUMBER) --no-warnings \
                --ordinals $(SRCDIR)/util/libssl.num \
                --symhacks $(SRCDIR)/include/openssl/symhacks.h \
                --renumber \
                $(SSLHEADERS)

ordinals: build_generated
	$(PERL) $(SRCDIR)/util/mknum.pl --version $(VERSION_NUMBER) --no-warnings \
                --ordinals $(SRCDIR)/util/libcrypto.num \
                --symhacks $(SRCDIR)/include/openssl/symhacks.h \
                $(CRYPTOHEADERS)
	$(PERL) $(SRCDIR)/util/mknum.pl --version $(VERSION_NUMBER) --no-warnings \
                --ordinals $(SRCDIR)/util/libssl.num \
                --symhacks $(SRCDIR)/include/openssl/symhacks.h \
                $(SSLHEADERS)

test_ordinals:
	$(MAKE) run_tests TESTS=test_ordinals

tags TAGS: FORCE
	rm -f TAGS tags
	-ctags -R .
	-etags `find . -name '*.[ch]' -o -name '*.pm'`

providers/fips.checksum.new: providers/fips.module.sources.new
	@which unifdef > /dev/null || \
	( echo >&2 "ERROR: unifdef not in your \$$PATH, FIPS checksums not calculated"; \
	  false )
	( sources=`pwd`/providers/fips.module.sources.new; \
	  cd $(SRCDIR) \
	  && cat $$sources \
	         | xargs ./util/fips-checksums.sh ) \
	         > providers/fips-sources.checksums.new \
	&& sha256sum providers/fips-sources.checksums.new \
	     | sed -e 's|\.new||' > providers/fips.checksum.new

fips-checksums: providers/fips.checksum.new

$(SRCDIR)/providers/fips.checksum: providers/fips.checksum.new
	cp -p providers/fips.module.sources.new $(SRCDIR)/providers/fips.module.sources
	cp -p providers/fips-sources.checksums.new $(SRCDIR)/providers/fips-sources.checksums
	cp -p providers/fips.checksum.new $(SRCDIR)/providers/fips.checksum

update-fips-checksums: $(SRCDIR)/providers/fips.checksum

diff-fips-checksums: fips-checksums
	diff -u $(SRCDIR)/providers/fips.module.sources providers/fips.module.sources.new
	diff -u $(SRCDIR)/providers/fips-sources.checksums providers/fips-sources.checksums.new
	diff -u $(SRCDIR)/providers/fips.checksum providers/fips.checksum.new

# Release targets (note: only available on Unix) #####################

tar:
	(cd $(SRCDIR); ./util/mktar.sh --name='$(NAME)' --tarfile='$(TARFILE)')

# Helper targets #####################################################

link-utils: $(BLDDIR)/util/opensslwrap.sh $(BLDDIR)/apps/openssl.cnf

$(BLDDIR)/util/opensslwrap.sh: Makefile
	@if [ "$(SRCDIR)" != "$(BLDDIR)" ]; then \
	    mkdir -p "$(BLDDIR)/util"; \
	    ln -sf "../$(SRCDIR)/util/`basename "$@"`" "$(BLDDIR)/util"; \
	fi

$(BLDDIR)/apps/openssl.cnf: Makefile
	@if [ "$(SRCDIR)" != "$(BLDDIR)" ]; then \
	    mkdir -p "$(BLDDIR)/apps"; \
	    ln -sf "../$(SRCDIR)/apps/`basename "$@"`" "$(BLDDIR)/apps"; \
	fi

FORCE:

# Building targets ###################################################

libcrypto.pc libssl.pc openssl.pc: Makefile $(LIBS) {- join(" ",map { platform->sharedlib_simple($_) // platform->sharedlib_import($_) // platform->sharedlib($_) // () } @{$unified_info{libraries}}) -}

libcrypto.pc:
	@ ( echo 'prefix=$(INSTALLTOP)'; \
	    echo 'exec_prefix=$${prefix}'; \
	    if [ -n "$(LIBDIR)" ]; then \
	        echo 'libdir=$${exec_prefix}/$(LIBDIR)'; \
	    else \
	        echo 'libdir=$(libdir)'; \
	    fi; \
	    echo 'includedir=$${prefix}/include'; \
	    echo 'enginesdir=$${libdir}/engines-{- $sover_dirname -}'; \
	    echo 'modulesdir=$${libdir}/ossl-modules'; \
	    echo ''; \
	    echo 'Name: OpenSSL-libcrypto'; \
	    echo 'Description: OpenSSL cryptography library'; \
	    echo 'Version: '$(VERSION); \
	    echo 'Libs: -L$${libdir} -lcrypto'; \
	    echo 'Libs.private: $(LIB_EX_LIBS)'; \
	    echo 'Cflags: -I$${includedir}' ) > libcrypto.pc

libssl.pc:
	@ ( echo 'prefix=$(INSTALLTOP)'; \
	    echo 'exec_prefix=$${prefix}'; \
	    if [ -n "$(LIBDIR)" ]; then \
	        echo 'libdir=$${exec_prefix}/$(LIBDIR)'; \
	    else \
	        echo 'libdir=$(libdir)'; \
	    fi; \
	    echo 'includedir=$${prefix}/include'; \
	    echo ''; \
	    echo 'Name: OpenSSL-libssl'; \
	    echo 'Description: Secure Sockets Layer and cryptography libraries'; \
	    echo 'Version: '$(VERSION); \
	    echo 'Requires.private: libcrypto'; \
	    echo 'Libs: -L$${libdir} -lssl'; \
	    echo 'Cflags: -I$${includedir}' ) > libssl.pc

openssl.pc:
	@ ( echo 'prefix=$(INSTALLTOP)'; \
	    echo 'exec_prefix=$${prefix}'; \
	    if [ -n "$(LIBDIR)" ]; then \
	        echo 'libdir=$${exec_prefix}/$(LIBDIR)'; \
	    else \
	        echo 'libdir=$(libdir)'; \
	    fi; \
	    echo 'includedir=$${prefix}/include'; \
	    echo ''; \
	    echo 'Name: OpenSSL'; \
	    echo 'Description: Secure Sockets Layer and cryptography libraries and tools'; \
	    echo 'Version: '$(VERSION); \
	    echo 'Requires: libssl libcrypto' ) > openssl.pc

Makefile: configdata.pm \
          {- join(" \\\n" . ' ' x 10,
                  fill_lines(" ", $COLUMNS - 10,
                             @{$config{build_file_templates}})) -}
	@echo "Detected changed: $?"
	$(PERL) configdata.pm
	@echo "**************************************************"
	@echo "***                                            ***"
	@echo "***   Please run the same make command again   ***"
	@echo "***                                            ***"
	@echo "**************************************************"
	@false

configdata.pm: $(SRCDIR)/Configure $(SRCDIR)/config \
               {- join(" \\\n" . ' ' x 15,
                       fill_lines(" ", $COLUMNS - 15,
                                  @{$config{build_infos}},
                                  @{$config{conf_files}})) -}
	@echo "Detected changed: $?"
	$(PERL) configdata.pm -r
	@echo "**************************************************"
	@echo "***                                            ***"
	@echo "***   Please run the same make command again   ***"
	@echo "***                                            ***"
	@echo "**************************************************"
	@false

reconfigure reconf:
	$(PERL) configdata.pm -r

{-
  use File::Basename;
  use File::Spec::Functions qw/:DEFAULT abs2rel rel2abs/;

  # Helper function to convert dependencies in platform agnostic form to
  # dependencies in platform form.
  sub compute_platform_depends {
      map { my $x = $_;

            grep { $x eq $_ } @{$unified_info{programs}} and platform->bin($x)
            or grep { $x eq $_ } @{$unified_info{modules}} and platform->dso($x)
            or grep { $x eq $_ } @{$unified_info{libraries}} and platform->lib($x)
            or platform->convertext($x); } @_;
  }

  # Helper function to figure out dependencies on libraries
  # It takes a list of library names and outputs a list of dependencies
  sub compute_lib_depends {
      # Depending on shared libraries:
      # On Windows POSIX layers, we depend on {libname}.dll.a
      # On Unix platforms, we depend on {shlibname}.so
      return map { platform->sharedlib_simple($_)
                   // platform->sharedlib_import($_)
                   // platform->sharedlib($_)
                   // platform->staticlib($_)
                 } @_;
  }

  sub generatetarget {
      my %args = @_;
      my $deps = join(" ", compute_platform_depends(@{$args{deps}}));
      return <<"EOF";
$args{target}: $deps
EOF
  }

  sub generatesrc {
      my %args = @_;
      my $gen0 = $args{generator}->[0];
      my $gen_args = join('', map { " $_" }
                              @{$args{generator}}[1..$#{$args{generator}}]);
      my $gen_incs = join("", map { " -I".$_ } @{$args{generator_incs}});
      my $incs = join("", map { " -I".$_ } @{$args{incs}});
      my $defs = join("", map { " -D".$_ } @{$args{defs}});
      my $deps = join(" ", compute_platform_depends(@{$args{generator_deps}},
                                                    @{$args{deps}}));

      if ($args{src} =~ /\.html$/) {
          #
          # HTML generator
          #
          my $title = basename($args{src}, ".html");
          my $pod = $gen0;
          return <<"EOF";
$args{src}: $pod
	\$(PERL) \$(SRCDIR)/util/mkpod2html.pl -i "$pod" -o \$\@ -t "$title" -r "\$(SRCDIR)/doc"
EOF
      } elsif ($args{src} =~ /\.(\d)$/) {
          #
          # Man-page generator
          #
          my $section = $1;
          my $name = uc basename($args{src}, ".$section");
          my $pod = $gen0;
          return <<"EOF";
$args{src}: $pod
	pod2man --name=$name --section=$section\$(MANSUFFIX) --center=OpenSSL \\
		--release=\$(VERSION) $pod >\$\@
EOF
      } elsif (platform->isdef($args{src})) {
          #
          # Linker script-ish generator
          #
          my $target = platform->def($args{src});
          (my $mkdef_os = $target{shared_target}) =~ s|-shared$||;
          my $ord_ver = $args{intent} eq 'lib' ? ' --version $(VERSION_NUMBER)' : '';
          my $ord_name = $args{generator}->[1] || $args{product};
          return <<"EOF";
$target: $gen0 $deps \$(SRCDIR)/util/mkdef.pl
	\$(PERL) \$(SRCDIR)/util/mkdef.pl$ord_ver --type $args{intent} --ordinals $gen0  --name $ord_name --OS $mkdef_os > $target
EOF
      } elsif (platform->isasm($args{src})
               || platform->iscppasm($args{src})) {
          #
          # Assembler generator
          #
          my $cppflags = {
              shlib => '$(LIB_CFLAGS) $(LIB_CPPFLAGS)',
              lib => '$(LIB_CFLAGS) $(LIB_CPPFLAGS)',
              dso => '$(DSO_CFLAGS) $(DSO_CPPFLAGS)',
              bin => '$(BIN_CFLAGS) $(BIN_CPPFLAGS)'
          } -> {$args{intent}};

          my $generator;
          if ($gen0 =~ /\.pl$/) {
              $generator = 'CC="$(CC)" $(PERL)'.$gen_incs.' '.$gen0.$gen_args
                  .' "$(PERLASM_SCHEME)"'.$incs.' '.$cppflags.$defs.' $(PROCESSOR)';
          } elsif ($gen0 =~ /\.m4$/) {
              $generator = 'm4 -B 8192'.$gen_incs.' '.$gen0.$gen_args.' >'
          } elsif ($gen0 =~ /\.S$/) {
              $generator = undef;
          } else {
              die "Generator type for $args{src} unknown: $gen0\n";
          }

          if (defined($generator)) {
              return <<"EOF";
$args{src}: $gen0 $deps
	$generator \$@
EOF
          }
          return <<"EOF";
$args{src}: $gen0 $deps
	\$(CC) $incs $cppflags $defs -E $gen0 | \\
	\$(PERL) -ne '/^#(line)?\\s*[0-9]+/ or print' > \$@
EOF
      } elsif ($gen0 =~ m|^.*\.in$|) {
          #
          # "dofile" generator (file.in -> file)
          #
          my $dofile = abs2rel(rel2abs(catfile($config{sourcedir},
                                               "util", "dofile.pl")),
                               rel2abs($config{builddir}));
          my @perlmodules = ( 'configdata.pm',
                              grep { $_ =~ m|\.pm$| } @{$args{deps}} );
          my %perlmoduleincs = map { '"-I'.dirname($_).'"' => 1 } @perlmodules;
          $deps = join(' ', $deps, compute_platform_depends(@perlmodules));
          @perlmodules = map { "-M".basename($_, '.pm') } @perlmodules;
          my $perlmodules = join(' ', '', sort keys %perlmoduleincs, @perlmodules);
          return <<"EOF";
$args{src}: $gen0 $deps
	\$(PERL)$perlmodules "$dofile" "-o$target{build_file}" $gen0$gen_args > \$@
EOF
      } elsif (grep { $_ eq $gen0 } @{$unified_info{programs}}) {
          #
          # Generic generator using OpenSSL programs
          #

          # Redo $gen0, to ensure that we have the proper extension where
          # necessary.
          $gen0 = platform->bin($gen0);
          # Use $(PERL) to execute wrap.pl directly to avoid calling env
          return <<"EOF";
$args{src}: $gen0 $deps \$(BLDDIR)/util/wrap.pl
	\$(PERL) \$(BLDDIR)/util/wrap.pl $gen0$gen_args > \$@
EOF
      } else {
          #
          # Generic generator using Perl
          #
          return <<"EOF";
$args{src}: $gen0 $deps
	\$(PERL)$gen_incs $gen0$gen_args > \$@
EOF
      }
  }

  # Should one wonder about the end of the Perl snippet, it's because this
  # second regexp eats up line endings as well, if the removed path is the
  # last in the line.  We may therefore need to put back a line ending.
  sub src2obj {
      my %args = @_;
      my $obj = platform->convertext($args{obj});
      my $dep = platform->dep($args{obj});
      my @srcs = @{$args{srcs}};
      my $srcs = join(" ",  @srcs);
      my $deps = join(" ", @srcs, @{$args{deps}});
      my $incs = join("", map { " -I".$_ } @{$args{incs}});
      my $defs = join("", map { " -D".$_ } @{$args{defs}});
      my $cmd;
      my $cmdflags;
      my $cmdcompile;
      if (grep /\.rc$/, @srcs) {
          $cmd = '$(RC)';
          $cmdflags = '$(RCFLAGS)';
          $cmdcompile = '';
      } elsif (grep /\.(cc|cpp)$/, @srcs) {
          $cmd = '$(CXX)';
          $cmdcompile = ' -c';
          $cmdflags = {
              shlib => '$(LIB_CXXFLAGS) $(LIB_CPPFLAGS)',
              lib => '$(LIB_CXXFLAGS) $(LIB_CPPFLAGS)',
              dso => '$(DSO_CXXFLAGS) $(DSO_CPPFLAGS)',
              bin => '$(BIN_CXXFLAGS) $(BIN_CPPFLAGS)'
          } -> {$args{intent}};
      } else {
          $cmd = '$(CC)';
          $cmdcompile = ' -c';
          $cmdflags = {
              shlib => '$(LIB_CFLAGS) $(LIB_CPPFLAGS)',
              lib => '$(LIB_CFLAGS) $(LIB_CPPFLAGS)',
              dso => '$(DSO_CFLAGS) $(DSO_CPPFLAGS)',
              bin => '$(BIN_CFLAGS) $(BIN_CPPFLAGS)'
          } -> {$args{intent}};
      }
      my $recipe;
      # extension-specific rules
      if (grep /\.s$/, @srcs) {
          $recipe .= <<"EOF";
$obj: $deps
	$cmd $cmdflags -c -o \$\@ $srcs
EOF
      } elsif (grep /\.S$/, @srcs) {
          # Originally there was multi-step rule with $(CC) -E file.S
          # followed by $(CC) -c file.s. It compensated for one of
          # legacy platform compiler's inability to handle .S files.
          # The platform is long discontinued by vendor so there is
          # hardly a point to drag it along...
          $recipe .= <<"EOF";
$obj: $deps
	$cmd $incs $defs $cmdflags -c -o \$\@ $srcs
EOF
      } elsif ($makedep_scheme eq 'gcc' && !grep /\.rc$/, @srcs) {
          $recipe .= <<"EOF";
$obj: $deps
	$cmd $incs $defs $cmdflags -MMD -MF $dep.tmp -MT \$\@ -c -o \$\@ $srcs
	\@touch $dep.tmp
	\@if cmp $dep.tmp $dep > /dev/null 2> /dev/null; then \\
		rm -f $dep.tmp; \\
	else \\
		mv $dep.tmp $dep; \\
	fi
EOF
      } else {
          $recipe .= <<"EOF";
$obj: $deps
	$cmd $incs $defs $cmdflags $cmdcompile -o \$\@ $srcs
EOF
          if ($makedep_scheme eq 'makedepend') {
              $recipe .= <<"EOF";
	\$(MAKEDEPEND) -f- -Y -- $incs $cmdflags -- $srcs 2>/dev/null \\
	    > $dep
EOF
          }
      }
      return $recipe;
  }
  # We *know* this routine is only called when we've configure 'shared'.
  sub obj2shlib {
      my %args = @_;
      my @linkdirs = ();
      my @linklibs = ();
      foreach (@{$args{deps}}) {
          if (platform->isstaticlib($_)) {
              push @linklibs, platform->convertext($_);
          } else {
              my $d = "-L" . dirname($_);
              my $l = basename($_);
              $l =~ s/^lib//;
              $l = "-l" . $l;
              push @linklibs, $l;
              push @linkdirs, $d unless grep { $d eq $_ } @linkdirs;
          }
      }
      my $linkflags = join("", map { $_." " } @linkdirs);
      my $linklibs = join("", map { $_." " } @linklibs);
      my @objs = map { platform->convertext($_) }
                 grep { !platform->isdef($_) }
                 @{$args{objs}};
      my @defs = map { platform->def($_) }
                 grep { platform->isdef($_) }
                 @{$args{objs}};
      my @deps = compute_lib_depends(@{$args{deps}});
      die "More than one exported symbol map" if scalar @defs > 1;

      my $full = platform->sharedlib($args{lib});
      # $import is for Windows and subsystems thereof, where static import
      # libraries for DLLs are a thing.  On platforms that have this mechanism,
      # $import has the name of this import library.  On platforms that don't
      # have this mechanism, $import will be |undef|.
      my $import = platform->sharedlib_import($args{lib});
      # $simple is for platforms where full shared library names include the
      # shared library version, and there's a simpler name that doesn't include
      # that version.  On such platforms, $simple has the simpler name.  On
      # other platforms, it will be |undef|.
      my $simple = platform->sharedlib_simple($args{lib});

      my $argfile = defined $target{shared_argfileflag} ? $full.".args" : undef;
      my $shared_soname = "";
      $shared_soname .= ' '.$target{shared_sonameflag}.basename($full)
          if defined $target{shared_sonameflag};
      my $shared_imp = "";
      $shared_imp .= ' '.$target{shared_impflag}.basename($import)
          if defined $target{shared_impflag} && defined $import;
      my $shared_def = join("", map { ' '.$target{shared_defflag}.$_ } @defs);

      # There is at least one platform where the compiler-as-linker needs to
      # have one object file directly on the command line.  That won't hurt
      # any other platform, so we do that for everyone when there's an argfile
      # to be had.  This depends heavily on splice, which removes elements from
      # the given array, and returns them so they can be captured.
      my @argfileobjs = $argfile
          ? splice(@objs, 1)
          : ();
      my $argfilecmds = $argfile
          ? join("\n\t", map { "echo $_ >> $argfile" } @argfileobjs)
          : undef;
      my $argfiledeps = $argfile
          ? join(" \\\n" . ' ' x (length($argfile) + 2),
                 fill_lines(' ', $COLUMNS - length($full) - 2, @argfileobjs))
          : undef;
      my @fulldeps = (@objs, ($argfile ? $argfile : ()), @defs, @deps);
      my @fullobjs = (
          @objs,
          ($argfile ? $target{shared_argfileflag}.$argfile : ())
      );
      my $fulldeps =
          join(" \\\n" . ' ' x (length($full) + 2),
               fill_lines(' ', $COLUMNS - length($full) - 2, @fulldeps));
      my $fullobjs =
          join(" \\\n\t\t", fill_lines(' ', $COLUMNS - 16, @fullobjs));

      my $recipe = '';

      if (defined $simple && $simple ne $full) {
          if (sharedaix()) {
              $recipe .= <<"EOF";
$simple: $full
	rm -f $simple && \\
	\$(AR) r $simple $full
EOF
          } else {
              $recipe .= <<"EOF";
$simple: $full
	rm -f $simple && \\
	ln -s $full $simple
EOF
          }
      }
      if (defined $import) {
      $recipe .= <<"EOF";
$import: $full
EOF
      }
      $recipe .= <<"EOF";
$full: $fulldeps
	\$(CC) \$(LIB_CFLAGS) $linkflags\$(LIB_LDFLAGS)$shared_soname$shared_imp \\
		-o $full$shared_def \\
		$fullobjs \\
		$linklibs \$(LIB_EX_LIBS)
EOF
      if (windowsdll()) {
          $recipe .= <<"EOF";
	rm -f apps/$full
	rm -f fuzz/$full
	cp -p $full apps/
	cp -p $full fuzz/
EOF
          if (!$disabled{tests}) {
            $recipe .= <<"EOF";
	rm -f test/$full
	cp -p $full test/
EOF
          }
      }
      $recipe .= <<"EOF" if defined $argfile;
$argfile: $argfiledeps
	\$(RM) $argfile
	$argfilecmds
EOF
      return $recipe;
  }
  sub obj2dso {
      my %args = @_;
      my $dso = platform->dso($args{module});
      my @linkdirs = ();
      my @linklibs = ();
      foreach (@{$args{deps}}) {
          next unless defined $_;
          if (platform->isstaticlib($_)) {
              push @linklibs, platform->convertext($_);
          } else {
              my $d = "-L" . dirname($_);
              my $l = basename($_);
              $l =~ s/^lib//;
              $l = "-l" . $l;
              push @linklibs, $l;
              push @linkdirs, $d unless grep { $d eq $_ } @linkdirs;
          }
      }
      my $linkflags = join("", map { $_." " } @linkdirs);
      my $linklibs = join("", map { $_." " } @linklibs);
      my @objs = map { platform->convertext($_) }
                 grep { !platform->isdef($_) }
                 @{$args{objs}};
      my @defs = map { platform->def($_) }
                 grep { platform->isdef($_) }
                 @{$args{objs}};
      my @deps = compute_lib_depends(@{$args{deps}});
      my $shared_def = join("", map { ' '.$target{shared_defflag}.$_ } @defs);
      # Next line needs to become "less magic" (see PR #11950)
      $shared_def .= ' '.$target{shared_fipsflag} if (defined $target{shared_fipsflag} && $shared_def =~ m/providers\/fips/);
      my $objs = join(" \\\n\t\t", fill_lines(' ', $COLUMNS - 16, @objs));
      my $deps = join(" \\\n" . ' ' x (length($dso) + 2),
                      fill_lines(' ', $COLUMNS - length($dso) - 2,
                                 @objs, @defs, @deps));

      return <<"EOF";
$dso: $deps
	\$(CC) \$(DSO_CFLAGS) $linkflags\$(DSO_LDFLAGS) \\
		-o $dso$shared_def \\
		$objs \\
		$linklibs\$(DSO_EX_LIBS)
EOF
  }
  sub obj2lib {
      my %args = @_;
      my $lib = platform->staticlib($args{lib});
      my @objs = map { platform->obj($_) } @{$args{objs}};
      my $deps = join(" \\\n" . ' ' x (length($lib) + 2),
                      fill_lines(' ', $COLUMNS - length($lib) - 2, @objs));
      my $max_per_call = 500;
      my @objs_grouped;
      push @objs_grouped, join(" ", splice @objs, 0, $max_per_call) while @objs;
      my $fill_lib =
          join("\n\t", (map { "\$(AR) \$(ARFLAGS) $lib $_" } @objs_grouped));
      return <<"EOF";
$lib: $deps
	\$(RM) $lib
	$fill_lib
	\$(RANLIB) \$\@ || echo Never mind.
EOF
  }
  sub obj2bin {
      my %args = @_;
      my $bin = platform->bin($args{bin});
      my @objs = map { platform->obj($_) } @{$args{objs}};
      my @deps = compute_lib_depends(@{$args{deps}});
      my $objs = join(" \\\n" . ' ' x (length($bin) + 2),
                      fill_lines(' ', $COLUMNS - length($bin) - 2, @objs));
      my @linkdirs = ();
      my @linklibs = ();
      foreach (@{$args{deps}}) {
          next unless defined $_;
          if (platform->isstaticlib($_)) {
              push @linklibs, platform->convertext($_);
          } else {
              my $d = "-L" . dirname($_);
              my $l = basename($_);
              $l =~ s/^lib//;
              $l = "-l" . $l;
              push @linklibs, $l;
              push @linkdirs, $d unless grep { $d eq $_ } @linkdirs;
          }
      }
      my $linkflags = join("", map { $_." " } @linkdirs);
      my $linklibs = join("", map { $_." " } @linklibs);
      my $cmd = '$(CC)';
      my $cmdflags = '$(BIN_CFLAGS)';
      if (grep /_cc\.o$/, @{$args{objs}}) {
          $cmd = '$(CXX)';
          $cmdflags = '$(BIN_CXXFLAGS)';
      }

      my $objs = join(" \\\n\t\t", fill_lines(' ', $COLUMNS - 16, @objs));
      my $deps = join(" \\\n" . ' ' x (length($bin) + 2),
                      fill_lines(' ', $COLUMNS - length($bin) - 2,
                                 @objs, @deps));

      return <<"EOF";
$bin: $deps
	rm -f $bin
	\$\${LDCMD:-$cmd} $cmdflags $linkflags\$(BIN_LDFLAGS) \\
		-o $bin \\
		$objs \\
		$linklibs\$(BIN_EX_LIBS)
EOF
  }
  sub in2script {
      my %args = @_;
      my $script = $args{script};
      my $sources = join(" ", @{$args{sources}});
      my $dofile = abs2rel(rel2abs(catfile($config{sourcedir},
                                           "util", "dofile.pl")),
                           rel2abs($config{builddir}));
      return <<"EOF";
$script: $sources configdata.pm
	\$(RM) "$script"
	\$(PERL) "-I\$(BLDDIR)" -Mconfigdata "$dofile" \\
	    "-o$target{build_file}" $sources > "$script"
	chmod a+x $script
EOF
  }
  sub generatedir {
      my %args = @_;
      my $dir = $args{dir};
      my @deps = compute_platform_depends(@{$args{deps}});
      my @comments = ();

      # We already have a 'test' target, and the top directory is just plain
      # silly
      return if $dir eq "test" || $dir eq ".";

      foreach my $type (("dso", "lib", "bin", "script")) {
          next unless defined($unified_info{dirinfo}->{$dir}->{products}->{$type});
          # For lib object files, we could update the library.  However, it
          # was decided that it's enough to build the directory local object
          # files, so we don't need to add any actions, and the dependencies
          # are already taken care of.
          if ($type ne "lib") {
              foreach my $prod (@{$unified_info{dirinfo}->{$dir}->{products}->{$type}}) {
                  if (dirname($prod) eq $dir) {
                      push @deps, compute_platform_depends($prod);
                  } else {
                      push @comments, "# No support to produce $type ".join(", ", @{$unified_info{dirinfo}->{$dir}->{products}->{$type}});
                  }
              }
          }
      }

      my $target = "$dir $dir/";
      my $deps = join(" \\\n\t",
                      fill_lines(' ', $COLUMNS - 8, @deps));
      my $comments = join("\n", "", @comments);
      return <<"EOF";
$target: \\
	$deps$comments
EOF
  }
  ""    # Important!  This becomes part of the template result.
-}
{-
 generatesrc( "attrs" => {}, "defs" => [], "deps" => [], "generator" => [ "include/crypto/bn_conf.h.in" ], "generator_deps" => [], "generator_incs" => [], "incs" => [], "product" => undef, "src" => "include/crypto/bn_conf.h" ); 
-}{-
 generatesrc( "attrs" => {}, "defs" => [], "deps" => [], "generator" => [ "include/crypto/dso_conf.h.in" ], "generator_deps" => [], "generator_incs" => [], "incs" => [], "product" => undef, "src" => "include/crypto/dso_conf.h" ); 
-}{-
 generatesrc( "attrs" => {}, "defs" => [], "deps" => [], "generator" => [ "include/openssl/asn1.h.in" ], "generator_deps" => [], "generator_incs" => [], "incs" => [], "product" => undef, "src" => "include/openssl/asn1.h" ); 
-}{-
 generatesrc( "attrs" => {}, "defs" => [], "deps" => [], "generator" => [ "include/openssl/asn1t.h.in" ], "generator_deps" => [], "generator_incs" => [], "incs" => [], "product" => undef, "src" => "include/openssl/asn1t.h" ); 
-}{-
 generatesrc( "attrs" => {}, "defs" => [], "deps" => [], "generator" => [ "include/openssl/bio.h.in" ], "generator_deps" => [], "generator_incs" => [], "incs" => [], "product" => undef, "src" => "include/openssl/bio.h" ); 
-}{-
 generatesrc( "attrs" => {}, "defs" => [], "deps" => [], "generator" => [ "include/openssl/cmp.h.in" ], "generator_deps" => [], "generator_incs" => [], "incs" => [], "product" => undef, "src" => "include/openssl/cmp.h" ); 
-}{-
 generatesrc( "attrs" => {}, "defs" => [], "deps" => [], "generator" => [ "include/openssl/cms.h.in" ], "generator_deps" => [], "generator_incs" => [], "incs" => [], "product" => undef, "src" => "include/openssl/cms.h" ); 
-}{-
 generatesrc( "attrs" => {}, "defs" => [], "deps" => [], "generator" => [ "include/openssl/conf.h.in" ], "generator_deps" => [], "generator_incs" => [], "incs" => [], "product" => undef, "src" => "include/openssl/conf.h" ); 
-}{-
 generatesrc( "attrs" => {}, "defs" => [], "deps" => [], "generator" => [ "include/openssl/crmf.h.in" ], "generator_deps" => [], "generator_incs" => [], "incs" => [], "product" => undef, "src" => "include/openssl/crmf.h" ); 
-}{-
 generatesrc( "attrs" => {}, "defs" => [], "deps" => [], "generator" => [ "include/openssl/crypto.h.in" ], "generator_deps" => [], "generator_incs" => [], "incs" => [], "product" => undef, "src" => "include/openssl/crypto.h" ); 
-}{-
 generatesrc( "attrs" => {}, "defs" => [], "deps" => [], "generator" => [ "include/openssl/ct.h.in" ], "generator_deps" => [], "generator_incs" => [], "incs" => [], "product" => undef, "src" => "include/openssl/ct.h" ); 
-}{-
 generatesrc( "attrs" => {}, "defs" => [], "deps" => [], "generator" => [ "include/openssl/err.h.in" ], "generator_deps" => [], "generator_incs" => [], "incs" => [], "product" => undef, "src" => "include/openssl/err.h" ); 
-}{-
 generatesrc( "attrs" => {}, "defs" => [], "deps" => [], "generator" => [ "include/openssl/ess.h.in" ], "generator_deps" => [], "generator_incs" => [], "incs" => [], "product" => undef, "src" => "include/openssl/ess.h" ); 
-}{-
 generatesrc( "attrs" => {}, "defs" => [], "deps" => [], "generator" => [ "include/openssl/fipskey.h.in" ], "generator_deps" => [], "generator_incs" => [], "incs" => [], "product" => undef, "src" => "include/openssl/fipskey.h" ); 
-}{-
 generatesrc( "attrs" => {}, "defs" => [], "deps" => [], "generator" => [ "include/openssl/lhash.h.in" ], "generator_deps" => [], "generator_incs" => [], "incs" => [], "product" => undef, "src" => "include/openssl/lhash.h" ); 
-}{-
 generatesrc( "attrs" => {}, "defs" => [], "deps" => [], "generator" => [ "include/openssl/ocsp.h.in" ], "generator_deps" => [], "generator_incs" => [], "incs" => [], "product" => undef, "src" => "include/openssl/ocsp.h" ); 
-}{-
 generatesrc( "attrs" => {}, "defs" => [], "deps" => [], "generator" => [ "include/openssl/opensslv.h.in" ], "generator_deps" => [], "generator_incs" => [], "incs" => [], "product" => undef, "src" => "include/openssl/opensslv.h" ); 
-}{-
 generatesrc( "attrs" => {}, "defs" => [], "deps" => [], "generator" => [ "include/openssl/pkcs12.h.in" ], "generator_deps" => [], "generator_incs" => [], "incs" => [], "product" => undef, "src" => "include/openssl/pkcs12.h" ); 
-}{-
 generatesrc( "attrs" => {}, "defs" => [], "deps" => [], "generator" => [ "include/openssl/pkcs7.h.in" ], "generator_deps" => [], "generator_incs" => [], "incs" => [], "product" => undef, "src" => "include/openssl/pkcs7.h" ); 
-}{-
 generatesrc( "attrs" => {}, "defs" => [], "deps" => [], "generator" => [ "include/openssl/safestack.h.in" ], "generator_deps" => [], "generator_incs" => [], "incs" => [], "product" => undef, "src" => "include/openssl/safestack.h" ); 
-}{-
 generatesrc( "attrs" => {}, "defs" => [], "deps" => [], "generator" => [ "include/openssl/srp.h.in" ], "generator_deps" => [], "generator_incs" => [], "incs" => [], "product" => undef, "src" => "include/openssl/srp.h" ); 
-}{-
 generatesrc( "attrs" => {}, "defs" => [], "deps" => [], "generator" => [ "include/openssl/ssl.h.in" ], "generator_deps" => [], "generator_incs" => [], "incs" => [], "product" => undef, "src" => "include/openssl/ssl.h" ); 
-}{-
 generatesrc( "attrs" => {}, "defs" => [], "deps" => [], "generator" => [ "include/openssl/ui.h.in" ], "generator_deps" => [], "generator_incs" => [], "incs" => [], "product" => undef, "src" => "include/openssl/ui.h" ); 
-}{-
 generatesrc( "attrs" => {}, "defs" => [], "deps" => [], "generator" => [ "include/openssl/x509.h.in" ], "generator_deps" => [], "generator_incs" => [], "incs" => [], "product" => undef, "src" => "include/openssl/x509.h" ); 
-}{-
 generatesrc( "attrs" => {}, "defs" => [], "deps" => [], "generator" => [ "include/openssl/x509_vfy.h.in" ], "generator_deps" => [], "generator_incs" => [], "incs" => [], "product" => undef, "src" => "include/openssl/x509_vfy.h" ); 
-}{-
 generatesrc( "attrs" => {}, "defs" => [], "deps" => [], "generator" => [ "include/openssl/x509v3.h.in" ], "generator_deps" => [], "generator_incs" => [], "incs" => [], "product" => undef, "src" => "include/openssl/x509v3.h" ); 
-}{-
 obj2lib( "attrs" => { "noinst" => "1" }, "lib" => "apps/libapps.a", "objs" => [ "apps/lib/libapps-lib-app_libctx.o", "apps/lib/libapps-lib-app_params.o", "apps/lib/libapps-lib-app_provider.o", "apps/lib/libapps-lib-app_rand.o", "apps/lib/libapps-lib-app_x509.o", "apps/lib/libapps-lib-apps.o", "apps/lib/libapps-lib-apps_ui.o", "apps/lib/libapps-lib-columns.o", "apps/lib/libapps-lib-engine.o", "apps/lib/libapps-lib-engine_loader.o", "apps/lib/libapps-lib-fmt.o", "apps/lib/libapps-lib-http_server.o", "apps/lib/libapps-lib-names.o", "apps/lib/libapps-lib-opt.o", "apps/lib/libapps-lib-s_cb.o", "apps/lib/libapps-lib-s_socket.o" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "include", "apps/include" ], "intent" => "lib", "obj" => "apps/lib/libapps-lib-app_libctx.o", "product" => "apps/libapps.a", "srcs" => [ "apps/lib/app_libctx.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "include", "apps/include" ], "intent" => "lib", "obj" => "apps/lib/libapps-lib-app_params.o", "product" => "apps/libapps.a", "srcs" => [ "apps/lib/app_params.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "include", "apps/include" ], "intent" => "lib", "obj" => "apps/lib/libapps-lib-app_provider.o", "product" => "apps/libapps.a", "srcs" => [ "apps/lib/app_provider.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "include", "apps/include" ], "intent" => "lib", "obj" => "apps/lib/libapps-lib-app_rand.o", "product" => "apps/libapps.a", "srcs" => [ "apps/lib/app_rand.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "include", "apps/include" ], "intent" => "lib", "obj" => "apps/lib/libapps-lib-app_x509.o", "product" => "apps/libapps.a", "srcs" => [ "apps/lib/app_x509.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "include", "apps/include" ], "intent" => "lib", "obj" => "apps/lib/libapps-lib-apps.o", "product" => "apps/libapps.a", "srcs" => [ "apps/lib/apps.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "include", "apps/include" ], "intent" => "lib", "obj" => "apps/lib/libapps-lib-apps_ui.o", "product" => "apps/libapps.a", "srcs" => [ "apps/lib/apps_ui.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "include", "apps/include" ], "intent" => "lib", "obj" => "apps/lib/libapps-lib-columns.o", "product" => "apps/libapps.a", "srcs" => [ "apps/lib/columns.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "include", "apps/include" ], "intent" => "lib", "obj" => "apps/lib/libapps-lib-engine.o", "product" => "apps/libapps.a", "srcs" => [ "apps/lib/engine.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "include", "apps/include" ], "intent" => "lib", "obj" => "apps/lib/libapps-lib-engine_loader.o", "product" => "apps/libapps.a", "srcs" => [ "apps/lib/engine_loader.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "include", "apps/include" ], "intent" => "lib", "obj" => "apps/lib/libapps-lib-fmt.o", "product" => "apps/libapps.a", "srcs" => [ "apps/lib/fmt.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "include", "apps/include" ], "intent" => "lib", "obj" => "apps/lib/libapps-lib-http_server.o", "product" => "apps/libapps.a", "srcs" => [ "apps/lib/http_server.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "include", "apps/include" ], "intent" => "lib", "obj" => "apps/lib/libapps-lib-names.o", "product" => "apps/libapps.a", "srcs" => [ "apps/lib/names.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "include", "apps/include" ], "intent" => "lib", "obj" => "apps/lib/libapps-lib-opt.o", "product" => "apps/libapps.a", "srcs" => [ "apps/lib/opt.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "include", "apps/include" ], "intent" => "lib", "obj" => "apps/lib/libapps-lib-s_cb.o", "product" => "apps/libapps.a", "srcs" => [ "apps/lib/s_cb.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "include", "apps/include" ], "intent" => "lib", "obj" => "apps/lib/libapps-lib-s_socket.o", "product" => "apps/libapps.a", "srcs" => [ "apps/lib/s_socket.c" ] ); 
-}{-
 obj2shlib( "attrs" => {}, "deps" => [ "providers/libdefault.a", "providers/libcommon.a" ], "lib" => "libcrypto", "objs" => [ "crypto/aes/libcrypto-shlib-aes_cbc.o", "crypto/aes/libcrypto-shlib-aes_cfb.o", "crypto/aes/libcrypto-shlib-aes_core.o", "crypto/aes/libcrypto-shlib-aes_ecb.o", "crypto/aes/libcrypto-shlib-aes_ige.o", "crypto/aes/libcrypto-shlib-aes_misc.o", "crypto/aes/libcrypto-shlib-aes_ofb.o", "crypto/aes/libcrypto-shlib-aes_wrap.o", "crypto/asn1/libcrypto-shlib-a_bitstr.o", "crypto/asn1/libcrypto-shlib-a_d2i_fp.o", "crypto/asn1/libcrypto-shlib-a_digest.o", "crypto/asn1/libcrypto-shlib-a_dup.o", "crypto/asn1/libcrypto-shlib-a_gentm.o", "crypto/asn1/libcrypto-shlib-a_i2d_fp.o", "crypto/asn1/libcrypto-shlib-a_int.o", "crypto/asn1/libcrypto-shlib-a_mbstr.o", "crypto/asn1/libcrypto-shlib-a_object.o", "crypto/asn1/libcrypto-shlib-a_octet.o", "crypto/asn1/libcrypto-shlib-a_print.o", "crypto/asn1/libcrypto-shlib-a_sign.o", "crypto/asn1/libcrypto-shlib-a_strex.o", "crypto/asn1/libcrypto-shlib-a_strnid.o", "crypto/asn1/libcrypto-shlib-a_time.o", "crypto/asn1/libcrypto-shlib-a_type.o", "crypto/asn1/libcrypto-shlib-a_utctm.o", "crypto/asn1/libcrypto-shlib-a_utf8.o", "crypto/asn1/libcrypto-shlib-a_verify.o", "crypto/asn1/libcrypto-shlib-ameth_lib.o", "crypto/asn1/libcrypto-shlib-asn1_err.o", "crypto/asn1/libcrypto-shlib-asn1_gen.o", "crypto/asn1/libcrypto-shlib-asn1_item_list.o", "crypto/asn1/libcrypto-shlib-asn1_lib.o", "crypto/asn1/libcrypto-shlib-asn1_parse.o", "crypto/asn1/libcrypto-shlib-asn_mime.o", "crypto/asn1/libcrypto-shlib-asn_moid.o", "crypto/asn1/libcrypto-shlib-asn_mstbl.o", "crypto/asn1/libcrypto-shlib-asn_pack.o", "crypto/asn1/libcrypto-shlib-bio_asn1.o", "crypto/asn1/libcrypto-shlib-bio_ndef.o", "crypto/asn1/libcrypto-shlib-d2i_param.o", "crypto/asn1/libcrypto-shlib-d2i_pr.o", "crypto/asn1/libcrypto-shlib-d2i_pu.o", "crypto/asn1/libcrypto-shlib-evp_asn1.o", "crypto/asn1/libcrypto-shlib-f_int.o", "crypto/asn1/libcrypto-shlib-f_string.o", "crypto/asn1/libcrypto-shlib-i2d_evp.o", "crypto/asn1/libcrypto-shlib-n_pkey.o", "crypto/asn1/libcrypto-shlib-nsseq.o", "crypto/asn1/libcrypto-shlib-p5_pbe.o", "crypto/asn1/libcrypto-shlib-p5_pbev2.o", "crypto/asn1/libcrypto-shlib-p5_scrypt.o", "crypto/asn1/libcrypto-shlib-p8_pkey.o", "crypto/asn1/libcrypto-shlib-t_bitst.o", "crypto/asn1/libcrypto-shlib-t_pkey.o", "crypto/asn1/libcrypto-shlib-t_spki.o", "crypto/asn1/libcrypto-shlib-tasn_dec.o", "crypto/asn1/libcrypto-shlib-tasn_enc.o", "crypto/asn1/libcrypto-shlib-tasn_fre.o", "crypto/asn1/libcrypto-shlib-tasn_new.o", "crypto/asn1/libcrypto-shlib-tasn_prn.o", "crypto/asn1/libcrypto-shlib-tasn_scn.o", "crypto/asn1/libcrypto-shlib-tasn_typ.o", "crypto/asn1/libcrypto-shlib-tasn_utl.o", "crypto/asn1/libcrypto-shlib-x_algor.o", "crypto/asn1/libcrypto-shlib-x_bignum.o", "crypto/asn1/libcrypto-shlib-x_info.o", "crypto/asn1/libcrypto-shlib-x_int64.o", "crypto/asn1/libcrypto-shlib-x_long.o", "crypto/asn1/libcrypto-shlib-x_pkey.o", "crypto/asn1/libcrypto-shlib-x_sig.o", "crypto/asn1/libcrypto-shlib-x_spki.o", "crypto/asn1/libcrypto-shlib-x_val.o", "crypto/async/arch/libcrypto-shlib-async_null.o", "crypto/async/arch/libcrypto-shlib-async_posix.o", "crypto/async/arch/libcrypto-shlib-async_win.o", "crypto/async/libcrypto-shlib-async.o", "crypto/async/libcrypto-shlib-async_err.o", "crypto/async/libcrypto-shlib-async_wait.o", "crypto/bf/libcrypto-shlib-bf_cfb64.o", "crypto/bf/libcrypto-shlib-bf_ecb.o", "crypto/bf/libcrypto-shlib-bf_enc.o", "crypto/bf/libcrypto-shlib-bf_ofb64.o", "crypto/bf/libcrypto-shlib-bf_skey.o", "crypto/bio/libcrypto-shlib-bf_buff.o", "crypto/bio/libcrypto-shlib-bf_lbuf.o", "crypto/bio/libcrypto-shlib-bf_nbio.o", "crypto/bio/libcrypto-shlib-bf_null.o", "crypto/bio/libcrypto-shlib-bf_prefix.o", "crypto/bio/libcrypto-shlib-bf_readbuff.o", "crypto/bio/libcrypto-shlib-bio_addr.o", "crypto/bio/libcrypto-shlib-bio_cb.o", "crypto/bio/libcrypto-shlib-bio_dump.o", "crypto/bio/libcrypto-shlib-bio_err.o", "crypto/bio/libcrypto-shlib-bio_lib.o", "crypto/bio/libcrypto-shlib-bio_meth.o", "crypto/bio/libcrypto-shlib-bio_print.o", "crypto/bio/libcrypto-shlib-bio_sock.o", "crypto/bio/libcrypto-shlib-bio_sock2.o", "crypto/bio/libcrypto-shlib-bss_acpt.o", "crypto/bio/libcrypto-shlib-bss_bio.o", "crypto/bio/libcrypto-shlib-bss_conn.o", "crypto/bio/libcrypto-shlib-bss_core.o", "crypto/bio/libcrypto-shlib-bss_dgram.o", "crypto/bio/libcrypto-shlib-bss_fd.o", "crypto/bio/libcrypto-shlib-bss_file.o", "crypto/bio/libcrypto-shlib-bss_log.o", "crypto/bio/libcrypto-shlib-bss_mem.o", "crypto/bio/libcrypto-shlib-bss_null.o", "crypto/bio/libcrypto-shlib-bss_sock.o", "crypto/bio/libcrypto-shlib-ossl_core_bio.o", "crypto/bn/libcrypto-shlib-bn_add.o", "crypto/bn/libcrypto-shlib-bn_asm.o", "crypto/bn/libcrypto-shlib-bn_blind.o", "crypto/bn/libcrypto-shlib-bn_const.o", "crypto/bn/libcrypto-shlib-bn_conv.o", "crypto/bn/libcrypto-shlib-bn_ctx.o", "crypto/bn/libcrypto-shlib-bn_depr.o", "crypto/bn/libcrypto-shlib-bn_dh.o", "crypto/bn/libcrypto-shlib-bn_div.o", "crypto/bn/libcrypto-shlib-bn_err.o", "crypto/bn/libcrypto-shlib-bn_exp.o", "crypto/bn/libcrypto-shlib-bn_exp2.o", "crypto/bn/libcrypto-shlib-bn_gcd.o", "crypto/bn/libcrypto-shlib-bn_gf2m.o", "crypto/bn/libcrypto-shlib-bn_intern.o", "crypto/bn/libcrypto-shlib-bn_kron.o", "crypto/bn/libcrypto-shlib-bn_lib.o", "crypto/bn/libcrypto-shlib-bn_mod.o", "crypto/bn/libcrypto-shlib-bn_mont.o", "crypto/bn/libcrypto-shlib-bn_mpi.o", "crypto/bn/libcrypto-shlib-bn_mul.o", "crypto/bn/libcrypto-shlib-bn_nist.o", "crypto/bn/libcrypto-shlib-bn_prime.o", "crypto/bn/libcrypto-shlib-bn_print.o", "crypto/bn/libcrypto-shlib-bn_rand.o", "crypto/bn/libcrypto-shlib-bn_recp.o", "crypto/bn/libcrypto-shlib-bn_rsa_fips186_4.o", "crypto/bn/libcrypto-shlib-bn_shift.o", "crypto/bn/libcrypto-shlib-bn_sqr.o", "crypto/bn/libcrypto-shlib-bn_sqrt.o", "crypto/bn/libcrypto-shlib-bn_srp.o", "crypto/bn/libcrypto-shlib-bn_word.o", "crypto/bn/libcrypto-shlib-bn_x931p.o", "crypto/buffer/libcrypto-shlib-buf_err.o", "crypto/buffer/libcrypto-shlib-buffer.o", "crypto/cast/libcrypto-shlib-c_cfb64.o", "crypto/cast/libcrypto-shlib-c_ecb.o", "crypto/cast/libcrypto-shlib-c_enc.o", "crypto/cast/libcrypto-shlib-c_ofb64.o", "crypto/cast/libcrypto-shlib-c_skey.o", "crypto/cmac/libcrypto-shlib-cmac.o", "crypto/cmp/libcrypto-shlib-cmp_asn.o", "crypto/cmp/libcrypto-shlib-cmp_client.o", "crypto/cmp/libcrypto-shlib-cmp_ctx.o", "crypto/cmp/libcrypto-shlib-cmp_err.o", "crypto/cmp/libcrypto-shlib-cmp_hdr.o", "crypto/cmp/libcrypto-shlib-cmp_http.o", "crypto/cmp/libcrypto-shlib-cmp_msg.o", "crypto/cmp/libcrypto-shlib-cmp_protect.o", "crypto/cmp/libcrypto-shlib-cmp_server.o", "crypto/cmp/libcrypto-shlib-cmp_status.o", "crypto/cmp/libcrypto-shlib-cmp_util.o", "crypto/cmp/libcrypto-shlib-cmp_vfy.o", "crypto/conf/libcrypto-shlib-conf_api.o", "crypto/conf/libcrypto-shlib-conf_def.o", "crypto/conf/libcrypto-shlib-conf_err.o", "crypto/conf/libcrypto-shlib-conf_lib.o", "crypto/conf/libcrypto-shlib-conf_mall.o", "crypto/conf/libcrypto-shlib-conf_mod.o", "crypto/conf/libcrypto-shlib-conf_sap.o", "crypto/conf/libcrypto-shlib-conf_ssl.o", "crypto/crmf/libcrypto-shlib-crmf_asn.o", "crypto/crmf/libcrypto-shlib-crmf_err.o", "crypto/crmf/libcrypto-shlib-crmf_lib.o", "crypto/crmf/libcrypto-shlib-crmf_pbm.o", "crypto/ct/libcrypto-shlib-ct_b64.o", "crypto/ct/libcrypto-shlib-ct_err.o", "crypto/ct/libcrypto-shlib-ct_log.o", "crypto/ct/libcrypto-shlib-ct_oct.o", "crypto/ct/libcrypto-shlib-ct_policy.o", "crypto/ct/libcrypto-shlib-ct_prn.o", "crypto/ct/libcrypto-shlib-ct_sct.o", "crypto/ct/libcrypto-shlib-ct_sct_ctx.o", "crypto/ct/libcrypto-shlib-ct_vfy.o", "crypto/ct/libcrypto-shlib-ct_x509v3.o", "crypto/des/libcrypto-shlib-cbc_cksm.o", "crypto/des/libcrypto-shlib-cbc_enc.o", "crypto/des/libcrypto-shlib-cfb64ede.o", "crypto/des/libcrypto-shlib-cfb64enc.o", "crypto/des/libcrypto-shlib-cfb_enc.o", "crypto/des/libcrypto-shlib-des_enc.o", "crypto/des/libcrypto-shlib-ecb3_enc.o", "crypto/des/libcrypto-shlib-ecb_enc.o", "crypto/des/libcrypto-shlib-fcrypt.o", "crypto/des/libcrypto-shlib-fcrypt_b.o", "crypto/des/libcrypto-shlib-ofb64ede.o", "crypto/des/libcrypto-shlib-ofb64enc.o", "crypto/des/libcrypto-shlib-ofb_enc.o", "crypto/des/libcrypto-shlib-pcbc_enc.o", "crypto/des/libcrypto-shlib-qud_cksm.o", "crypto/des/libcrypto-shlib-rand_key.o", "crypto/des/libcrypto-shlib-set_key.o", "crypto/des/libcrypto-shlib-str2key.o", "crypto/des/libcrypto-shlib-xcbc_enc.o", "crypto/dh/libcrypto-shlib-dh_ameth.o", "crypto/dh/libcrypto-shlib-dh_asn1.o", "crypto/dh/libcrypto-shlib-dh_backend.o", "crypto/dh/libcrypto-shlib-dh_check.o", "crypto/dh/libcrypto-shlib-dh_depr.o", "crypto/dh/libcrypto-shlib-dh_err.o", "crypto/dh/libcrypto-shlib-dh_gen.o", "crypto/dh/libcrypto-shlib-dh_group_params.o", "crypto/dh/libcrypto-shlib-dh_kdf.o", "crypto/dh/libcrypto-shlib-dh_key.o", "crypto/dh/libcrypto-shlib-dh_lib.o", "crypto/dh/libcrypto-shlib-dh_meth.o", "crypto/dh/libcrypto-shlib-dh_pmeth.o", "crypto/dh/libcrypto-shlib-dh_prn.o", "crypto/dh/libcrypto-shlib-dh_rfc5114.o", "crypto/dsa/libcrypto-shlib-dsa_ameth.o", "crypto/dsa/libcrypto-shlib-dsa_asn1.o", "crypto/dsa/libcrypto-shlib-dsa_backend.o", "crypto/dsa/libcrypto-shlib-dsa_check.o", "crypto/dsa/libcrypto-shlib-dsa_depr.o", "crypto/dsa/libcrypto-shlib-dsa_err.o", "crypto/dsa/libcrypto-shlib-dsa_gen.o", "crypto/dsa/libcrypto-shlib-dsa_key.o", "crypto/dsa/libcrypto-shlib-dsa_lib.o", "crypto/dsa/libcrypto-shlib-dsa_meth.o", "crypto/dsa/libcrypto-shlib-dsa_ossl.o", "crypto/dsa/libcrypto-shlib-dsa_pmeth.o", "crypto/dsa/libcrypto-shlib-dsa_prn.o", "crypto/dsa/libcrypto-shlib-dsa_sign.o", "crypto/dsa/libcrypto-shlib-dsa_vrf.o", "crypto/dso/libcrypto-shlib-dso_dl.o", "crypto/dso/libcrypto-shlib-dso_dlfcn.o", "crypto/dso/libcrypto-shlib-dso_err.o", "crypto/dso/libcrypto-shlib-dso_lib.o", "crypto/dso/libcrypto-shlib-dso_openssl.o", "crypto/dso/libcrypto-shlib-dso_vms.o", "crypto/dso/libcrypto-shlib-dso_win32.o", "crypto/ec/curve448/arch_32/libcrypto-shlib-f_impl32.o", "crypto/ec/curve448/arch_64/libcrypto-shlib-f_impl64.o", "crypto/ec/curve448/libcrypto-shlib-curve448.o", "crypto/ec/curve448/libcrypto-shlib-curve448_tables.o", "crypto/ec/curve448/libcrypto-shlib-eddsa.o", "crypto/ec/curve448/libcrypto-shlib-f_generic.o", "crypto/ec/curve448/libcrypto-shlib-scalar.o", "crypto/ec/libcrypto-shlib-curve25519.o", "crypto/ec/libcrypto-shlib-ec2_oct.o", "crypto/ec/libcrypto-shlib-ec2_smpl.o", "crypto/ec/libcrypto-shlib-ec_ameth.o", "crypto/ec/libcrypto-shlib-ec_asn1.o", "crypto/ec/libcrypto-shlib-ec_backend.o", "crypto/ec/libcrypto-shlib-ec_check.o", "crypto/ec/libcrypto-shlib-ec_curve.o", "crypto/ec/libcrypto-shlib-ec_cvt.o", "crypto/ec/libcrypto-shlib-ec_deprecated.o", "crypto/ec/libcrypto-shlib-ec_err.o", "crypto/ec/libcrypto-shlib-ec_key.o", "crypto/ec/libcrypto-shlib-ec_kmeth.o", "crypto/ec/libcrypto-shlib-ec_lib.o", "crypto/ec/libcrypto-shlib-ec_mult.o", "crypto/ec/libcrypto-shlib-ec_oct.o", "crypto/ec/libcrypto-shlib-ec_pmeth.o", "crypto/ec/libcrypto-shlib-ec_print.o", "crypto/ec/libcrypto-shlib-ecdh_kdf.o", "crypto/ec/libcrypto-shlib-ecdh_ossl.o", "crypto/ec/libcrypto-shlib-ecdsa_ossl.o", "crypto/ec/libcrypto-shlib-ecdsa_sign.o", "crypto/ec/libcrypto-shlib-ecdsa_vrf.o", "crypto/ec/libcrypto-shlib-eck_prn.o", "crypto/ec/libcrypto-shlib-ecp_mont.o", "crypto/ec/libcrypto-shlib-ecp_nist.o", "crypto/ec/libcrypto-shlib-ecp_oct.o", "crypto/ec/libcrypto-shlib-ecp_smpl.o", "crypto/ec/libcrypto-shlib-ecx_backend.o", "crypto/ec/libcrypto-shlib-ecx_key.o", "crypto/ec/libcrypto-shlib-ecx_meth.o", "crypto/encode_decode/libcrypto-shlib-decoder_err.o", "crypto/encode_decode/libcrypto-shlib-decoder_lib.o", "crypto/encode_decode/libcrypto-shlib-decoder_meth.o", "crypto/encode_decode/libcrypto-shlib-decoder_pkey.o", "crypto/encode_decode/libcrypto-shlib-encoder_err.o", "crypto/encode_decode/libcrypto-shlib-encoder_lib.o", "crypto/encode_decode/libcrypto-shlib-encoder_meth.o", "crypto/encode_decode/libcrypto-shlib-encoder_pkey.o", "crypto/err/libcrypto-shlib-err.o", "crypto/err/libcrypto-shlib-err_all.o", "crypto/err/libcrypto-shlib-err_all_legacy.o", "crypto/err/libcrypto-shlib-err_blocks.o", "crypto/err/libcrypto-shlib-err_prn.o", "crypto/ess/libcrypto-shlib-ess_asn1.o", "crypto/ess/libcrypto-shlib-ess_err.o", "crypto/ess/libcrypto-shlib-ess_lib.o", "crypto/evp/libcrypto-shlib-asymcipher.o", "crypto/evp/libcrypto-shlib-bio_b64.o", "crypto/evp/libcrypto-shlib-bio_enc.o", "crypto/evp/libcrypto-shlib-bio_md.o", "crypto/evp/libcrypto-shlib-bio_ok.o", "crypto/evp/libcrypto-shlib-c_allc.o", "crypto/evp/libcrypto-shlib-c_alld.o", "crypto/evp/libcrypto-shlib-cmeth_lib.o", "crypto/evp/libcrypto-shlib-ctrl_params_translate.o", "crypto/evp/libcrypto-shlib-dh_ctrl.o", "crypto/evp/libcrypto-shlib-dh_support.o", "crypto/evp/libcrypto-shlib-digest.o", "crypto/evp/libcrypto-shlib-dsa_ctrl.o", "crypto/evp/libcrypto-shlib-e_aes.o", "crypto/evp/libcrypto-shlib-e_aes_cbc_hmac_sha1.o", "crypto/evp/libcrypto-shlib-e_aes_cbc_hmac_sha256.o", "crypto/evp/libcrypto-shlib-e_aria.o", "crypto/evp/libcrypto-shlib-e_bf.o", "crypto/evp/libcrypto-shlib-e_cast.o", "crypto/evp/libcrypto-shlib-e_chacha20_poly1305.o", "crypto/evp/libcrypto-shlib-e_des.o", "crypto/evp/libcrypto-shlib-e_des3.o", "crypto/evp/libcrypto-shlib-e_idea.o", "crypto/evp/libcrypto-shlib-e_null.o", "crypto/evp/libcrypto-shlib-e_old.o", "crypto/evp/libcrypto-shlib-e_rc2.o", "crypto/evp/libcrypto-shlib-e_rc4.o", "crypto/evp/libcrypto-shlib-e_rc4_hmac_md5.o", "crypto/evp/libcrypto-shlib-e_rc5.o", "crypto/evp/libcrypto-shlib-e_sm4.o", "crypto/evp/libcrypto-shlib-e_xcbc_d.o", "crypto/evp/libcrypto-shlib-ec_ctrl.o", "crypto/evp/libcrypto-shlib-ec_support.o", "crypto/evp/libcrypto-shlib-encode.o", "crypto/evp/libcrypto-shlib-evp_cnf.o", "crypto/evp/libcrypto-shlib-evp_enc.o", "crypto/evp/libcrypto-shlib-evp_err.o", "crypto/evp/libcrypto-shlib-evp_fetch.o", "crypto/evp/libcrypto-shlib-evp_key.o", "crypto/evp/libcrypto-shlib-evp_lib.o", "crypto/evp/libcrypto-shlib-evp_pbe.o", "crypto/evp/libcrypto-shlib-evp_pkey.o", "crypto/evp/libcrypto-shlib-evp_rand.o", "crypto/evp/libcrypto-shlib-evp_utils.o", "crypto/evp/libcrypto-shlib-exchange.o", "crypto/evp/libcrypto-shlib-kdf_lib.o", "crypto/evp/libcrypto-shlib-kdf_meth.o", "crypto/evp/libcrypto-shlib-kem.o", "crypto/evp/libcrypto-shlib-keymgmt_lib.o", "crypto/evp/libcrypto-shlib-keymgmt_meth.o", "crypto/evp/libcrypto-shlib-legacy_md4.o", "crypto/evp/libcrypto-shlib-legacy_md5.o", "crypto/evp/libcrypto-shlib-legacy_md5_sha1.o", "crypto/evp/libcrypto-shlib-legacy_ripemd.o", "crypto/evp/libcrypto-shlib-legacy_sha.o", "crypto/evp/libcrypto-shlib-m_null.o", "crypto/evp/libcrypto-shlib-m_sigver.o", "crypto/evp/libcrypto-shlib-mac_lib.o", "crypto/evp/libcrypto-shlib-mac_meth.o", "crypto/evp/libcrypto-shlib-names.o", "crypto/evp/libcrypto-shlib-p5_crpt.o", "crypto/evp/libcrypto-shlib-p5_crpt2.o", "crypto/evp/libcrypto-shlib-p_dec.o", "crypto/evp/libcrypto-shlib-p_enc.o", "crypto/evp/libcrypto-shlib-p_legacy.o", "crypto/evp/libcrypto-shlib-p_lib.o", "crypto/evp/libcrypto-shlib-p_open.o", "crypto/evp/libcrypto-shlib-p_seal.o", "crypto/evp/libcrypto-shlib-p_sign.o", "crypto/evp/libcrypto-shlib-p_verify.o", "crypto/evp/libcrypto-shlib-pbe_scrypt.o", "crypto/evp/libcrypto-shlib-pmeth_check.o", "crypto/evp/libcrypto-shlib-pmeth_gn.o", "crypto/evp/libcrypto-shlib-pmeth_lib.o", "crypto/evp/libcrypto-shlib-signature.o", "crypto/ffc/libcrypto-shlib-ffc_backend.o", "crypto/ffc/libcrypto-shlib-ffc_dh.o", "crypto/ffc/libcrypto-shlib-ffc_key_generate.o", "crypto/ffc/libcrypto-shlib-ffc_key_validate.o", "crypto/ffc/libcrypto-shlib-ffc_params.o", "crypto/ffc/libcrypto-shlib-ffc_params_generate.o", "crypto/ffc/libcrypto-shlib-ffc_params_validate.o", "crypto/hmac/libcrypto-shlib-hmac.o", "crypto/http/libcrypto-shlib-http_client.o", "crypto/http/libcrypto-shlib-http_err.o", "crypto/http/libcrypto-shlib-http_lib.o", "crypto/kdf/libcrypto-shlib-kdf_err.o", "crypto/lhash/libcrypto-shlib-lh_stats.o", "crypto/lhash/libcrypto-shlib-lhash.o", "crypto/libcrypto-shlib-asn1_dsa.o", "crypto/libcrypto-shlib-bsearch.o", "crypto/libcrypto-shlib-context.o", "crypto/libcrypto-shlib-core_algorithm.o", "crypto/libcrypto-shlib-core_fetch.o", "crypto/libcrypto-shlib-core_namemap.o", "crypto/libcrypto-shlib-cpt_err.o", "crypto/libcrypto-shlib-cpuid.o", "crypto/libcrypto-shlib-cryptlib.o", "crypto/libcrypto-shlib-ctype.o", "crypto/libcrypto-shlib-cversion.o", "crypto/libcrypto-shlib-der_writer.o", "crypto/libcrypto-shlib-ebcdic.o", "crypto/libcrypto-shlib-ex_data.o", "crypto/libcrypto-shlib-getenv.o", "crypto/libcrypto-shlib-info.o", "crypto/libcrypto-shlib-init.o", "crypto/libcrypto-shlib-initthread.o", "crypto/libcrypto-shlib-mem.o", "crypto/libcrypto-shlib-mem_clr.o", "crypto/libcrypto-shlib-mem_sec.o", "crypto/libcrypto-shlib-o_dir.o", "crypto/libcrypto-shlib-o_fopen.o", "crypto/libcrypto-shlib-o_init.o", "crypto/libcrypto-shlib-o_str.o", "crypto/libcrypto-shlib-o_time.o", "crypto/libcrypto-shlib-packet.o", "crypto/libcrypto-shlib-param_build.o", "crypto/libcrypto-shlib-param_build_set.o", "crypto/libcrypto-shlib-params.o", "crypto/libcrypto-shlib-params_dup.o", "crypto/libcrypto-shlib-params_from_text.o", "crypto/libcrypto-shlib-passphrase.o", "crypto/libcrypto-shlib-provider.o", "crypto/libcrypto-shlib-provider_child.o", "crypto/libcrypto-shlib-provider_conf.o", "crypto/libcrypto-shlib-provider_core.o", "crypto/libcrypto-shlib-provider_predefined.o", "crypto/libcrypto-shlib-punycode.o", "crypto/libcrypto-shlib-self_test_core.o", "crypto/libcrypto-shlib-sparse_array.o", "crypto/libcrypto-shlib-threads_lib.o", "crypto/libcrypto-shlib-threads_none.o", "crypto/libcrypto-shlib-threads_pthread.o", "crypto/libcrypto-shlib-threads_win.o", "crypto/libcrypto-shlib-trace.o", "crypto/libcrypto-shlib-uid.o", "crypto/md4/libcrypto-shlib-md4_dgst.o", "crypto/md4/libcrypto-shlib-md4_one.o", "crypto/md5/libcrypto-shlib-md5_dgst.o", "crypto/md5/libcrypto-shlib-md5_one.o", "crypto/md5/libcrypto-shlib-md5_sha1.o", "crypto/modes/libcrypto-shlib-cbc128.o", "crypto/modes/libcrypto-shlib-ccm128.o", "crypto/modes/libcrypto-shlib-cfb128.o", "crypto/modes/libcrypto-shlib-ctr128.o", "crypto/modes/libcrypto-shlib-cts128.o", "crypto/modes/libcrypto-shlib-gcm128.o", "crypto/modes/libcrypto-shlib-ocb128.o", "crypto/modes/libcrypto-shlib-ofb128.o", "crypto/modes/libcrypto-shlib-siv128.o", "crypto/modes/libcrypto-shlib-wrap128.o", "crypto/modes/libcrypto-shlib-xts128.o", "crypto/objects/libcrypto-shlib-o_names.o", "crypto/objects/libcrypto-shlib-obj_dat.o", "crypto/objects/libcrypto-shlib-obj_err.o", "crypto/objects/libcrypto-shlib-obj_lib.o", "crypto/objects/libcrypto-shlib-obj_xref.o", "crypto/ocsp/libcrypto-shlib-ocsp_asn.o", "crypto/ocsp/libcrypto-shlib-ocsp_cl.o", "crypto/ocsp/libcrypto-shlib-ocsp_err.o", "crypto/ocsp/libcrypto-shlib-ocsp_ext.o", "crypto/ocsp/libcrypto-shlib-ocsp_http.o", "crypto/ocsp/libcrypto-shlib-ocsp_lib.o", "crypto/ocsp/libcrypto-shlib-ocsp_prn.o", "crypto/ocsp/libcrypto-shlib-ocsp_srv.o", "crypto/ocsp/libcrypto-shlib-ocsp_vfy.o", "crypto/ocsp/libcrypto-shlib-v3_ocsp.o", "crypto/pem/libcrypto-shlib-pem_all.o", "crypto/pem/libcrypto-shlib-pem_err.o", "crypto/pem/libcrypto-shlib-pem_info.o", "crypto/pem/libcrypto-shlib-pem_lib.o", "crypto/pem/libcrypto-shlib-pem_oth.o", "crypto/pem/libcrypto-shlib-pem_pk8.o", "crypto/pem/libcrypto-shlib-pem_pkey.o", "crypto/pem/libcrypto-shlib-pem_sign.o", "crypto/pem/libcrypto-shlib-pem_x509.o", "crypto/pem/libcrypto-shlib-pem_xaux.o", "crypto/pem/libcrypto-shlib-pvkfmt.o", "crypto/pkcs12/libcrypto-shlib-p12_add.o", "crypto/pkcs12/libcrypto-shlib-p12_asn.o", "crypto/pkcs12/libcrypto-shlib-p12_attr.o", "crypto/pkcs12/libcrypto-shlib-p12_crpt.o", "crypto/pkcs12/libcrypto-shlib-p12_crt.o", "crypto/pkcs12/libcrypto-shlib-p12_decr.o", "crypto/pkcs12/libcrypto-shlib-p12_init.o", "crypto/pkcs12/libcrypto-shlib-p12_key.o", "crypto/pkcs12/libcrypto-shlib-p12_kiss.o", "crypto/pkcs12/libcrypto-shlib-p12_mutl.o", "crypto/pkcs12/libcrypto-shlib-p12_npas.o", "crypto/pkcs12/libcrypto-shlib-p12_p8d.o", "crypto/pkcs12/libcrypto-shlib-p12_p8e.o", "crypto/pkcs12/libcrypto-shlib-p12_sbag.o", "crypto/pkcs12/libcrypto-shlib-p12_utl.o", "crypto/pkcs12/libcrypto-shlib-pk12err.o", "crypto/pkcs7/libcrypto-shlib-bio_pk7.o", "crypto/pkcs7/libcrypto-shlib-pk7_asn1.o", "crypto/pkcs7/libcrypto-shlib-pk7_attr.o", "crypto/pkcs7/libcrypto-shlib-pk7_doit.o", "crypto/pkcs7/libcrypto-shlib-pk7_lib.o", "crypto/pkcs7/libcrypto-shlib-pk7_mime.o", "crypto/pkcs7/libcrypto-shlib-pk7_smime.o", "crypto/pkcs7/libcrypto-shlib-pkcs7err.o", "crypto/property/libcrypto-shlib-defn_cache.o", "crypto/property/libcrypto-shlib-property.o", "crypto/property/libcrypto-shlib-property_err.o", "crypto/property/libcrypto-shlib-property_parse.o", "crypto/property/libcrypto-shlib-property_query.o", "crypto/property/libcrypto-shlib-property_string.o", "crypto/rand/libcrypto-shlib-prov_seed.o", "crypto/rand/libcrypto-shlib-rand_deprecated.o", "crypto/rand/libcrypto-shlib-rand_err.o", "crypto/rand/libcrypto-shlib-rand_lib.o", "crypto/rand/libcrypto-shlib-rand_meth.o", "crypto/rand/libcrypto-shlib-rand_pool.o", "crypto/rand/libcrypto-shlib-randfile.o", "crypto/rc2/libcrypto-shlib-rc2_cbc.o", "crypto/rc2/libcrypto-shlib-rc2_ecb.o", "crypto/rc2/libcrypto-shlib-rc2_skey.o", "crypto/rc2/libcrypto-shlib-rc2cfb64.o", "crypto/rc2/libcrypto-shlib-rc2ofb64.o", "crypto/rc4/libcrypto-shlib-rc4_enc.o", "crypto/rc4/libcrypto-shlib-rc4_skey.o", "crypto/ripemd/libcrypto-shlib-rmd_dgst.o", "crypto/ripemd/libcrypto-shlib-rmd_one.o", "crypto/rsa/libcrypto-shlib-rsa_ameth.o", "crypto/rsa/libcrypto-shlib-rsa_asn1.o", "crypto/rsa/libcrypto-shlib-rsa_backend.o", "crypto/rsa/libcrypto-shlib-rsa_chk.o", "crypto/rsa/libcrypto-shlib-rsa_crpt.o", "crypto/rsa/libcrypto-shlib-rsa_depr.o", "crypto/rsa/libcrypto-shlib-rsa_err.o", "crypto/rsa/libcrypto-shlib-rsa_gen.o", "crypto/rsa/libcrypto-shlib-rsa_lib.o", "crypto/rsa/libcrypto-shlib-rsa_meth.o", "crypto/rsa/libcrypto-shlib-rsa_mp.o", "crypto/rsa/libcrypto-shlib-rsa_mp_names.o", "crypto/rsa/libcrypto-shlib-rsa_none.o", "crypto/rsa/libcrypto-shlib-rsa_oaep.o", "crypto/rsa/libcrypto-shlib-rsa_ossl.o", "crypto/rsa/libcrypto-shlib-rsa_pk1.o", "crypto/rsa/libcrypto-shlib-rsa_pmeth.o", "crypto/rsa/libcrypto-shlib-rsa_prn.o", "crypto/rsa/libcrypto-shlib-rsa_pss.o", "crypto/rsa/libcrypto-shlib-rsa_saos.o", "crypto/rsa/libcrypto-shlib-rsa_schemes.o", "crypto/rsa/libcrypto-shlib-rsa_sign.o", "crypto/rsa/libcrypto-shlib-rsa_sp800_56b_check.o", "crypto/rsa/libcrypto-shlib-rsa_sp800_56b_gen.o", "crypto/rsa/libcrypto-shlib-rsa_x931.o", "crypto/rsa/libcrypto-shlib-rsa_x931g.o", "crypto/sha/libcrypto-shlib-keccak1600.o", "crypto/sha/libcrypto-shlib-sha1_one.o", "crypto/sha/libcrypto-shlib-sha1dgst.o", "crypto/sha/libcrypto-shlib-sha256.o", "crypto/sha/libcrypto-shlib-sha3.o", "crypto/sha/libcrypto-shlib-sha512.o", "crypto/siphash/libcrypto-shlib-siphash.o", "crypto/stack/libcrypto-shlib-stack.o", "crypto/store/libcrypto-shlib-store_err.o", "crypto/store/libcrypto-shlib-store_init.o", "crypto/store/libcrypto-shlib-store_lib.o", "crypto/store/libcrypto-shlib-store_meth.o", "crypto/store/libcrypto-shlib-store_register.o", "crypto/store/libcrypto-shlib-store_result.o", "crypto/store/libcrypto-shlib-store_strings.o", "crypto/ts/libcrypto-shlib-ts_asn1.o", "crypto/ts/libcrypto-shlib-ts_conf.o", "crypto/ts/libcrypto-shlib-ts_err.o", "crypto/ts/libcrypto-shlib-ts_lib.o", "crypto/ts/libcrypto-shlib-ts_req_print.o", "crypto/ts/libcrypto-shlib-ts_req_utils.o", "crypto/ts/libcrypto-shlib-ts_rsp_print.o", "crypto/ts/libcrypto-shlib-ts_rsp_sign.o", "crypto/ts/libcrypto-shlib-ts_rsp_utils.o", "crypto/ts/libcrypto-shlib-ts_rsp_verify.o", "crypto/ts/libcrypto-shlib-ts_verify_ctx.o", "crypto/txt_db/libcrypto-shlib-txt_db.o", "crypto/ui/libcrypto-shlib-ui_err.o", "crypto/ui/libcrypto-shlib-ui_lib.o", "crypto/ui/libcrypto-shlib-ui_null.o", "crypto/ui/libcrypto-shlib-ui_openssl.o", "crypto/ui/libcrypto-shlib-ui_util.o", "crypto/x509/libcrypto-shlib-by_dir.o", "crypto/x509/libcrypto-shlib-by_file.o", "crypto/x509/libcrypto-shlib-by_store.o", "crypto/x509/libcrypto-shlib-pcy_cache.o", "crypto/x509/libcrypto-shlib-pcy_data.o", "crypto/x509/libcrypto-shlib-pcy_lib.o", "crypto/x509/libcrypto-shlib-pcy_map.o", "crypto/x509/libcrypto-shlib-pcy_node.o", "crypto/x509/libcrypto-shlib-pcy_tree.o", "crypto/x509/libcrypto-shlib-t_crl.o", "crypto/x509/libcrypto-shlib-t_req.o", "crypto/x509/libcrypto-shlib-t_x509.o", "crypto/x509/libcrypto-shlib-v3_addr.o", "crypto/x509/libcrypto-shlib-v3_admis.o", "crypto/x509/libcrypto-shlib-v3_akeya.o", "crypto/x509/libcrypto-shlib-v3_akid.o", "crypto/x509/libcrypto-shlib-v3_asid.o", "crypto/x509/libcrypto-shlib-v3_bcons.o", "crypto/x509/libcrypto-shlib-v3_bitst.o", "crypto/x509/libcrypto-shlib-v3_conf.o", "crypto/x509/libcrypto-shlib-v3_cpols.o", "crypto/x509/libcrypto-shlib-v3_crld.o", "crypto/x509/libcrypto-shlib-v3_enum.o", "crypto/x509/libcrypto-shlib-v3_extku.o", "crypto/x509/libcrypto-shlib-v3_genn.o", "crypto/x509/libcrypto-shlib-v3_ia5.o", "crypto/x509/libcrypto-shlib-v3_info.o", "crypto/x509/libcrypto-shlib-v3_int.o", "crypto/x509/libcrypto-shlib-v3_ist.o", "crypto/x509/libcrypto-shlib-v3_lib.o", "crypto/x509/libcrypto-shlib-v3_ncons.o", "crypto/x509/libcrypto-shlib-v3_pci.o", "crypto/x509/libcrypto-shlib-v3_pcia.o", "crypto/x509/libcrypto-shlib-v3_pcons.o", "crypto/x509/libcrypto-shlib-v3_pku.o", "crypto/x509/libcrypto-shlib-v3_pmaps.o", "crypto/x509/libcrypto-shlib-v3_prn.o", "crypto/x509/libcrypto-shlib-v3_purp.o", "crypto/x509/libcrypto-shlib-v3_san.o", "crypto/x509/libcrypto-shlib-v3_skid.o", "crypto/x509/libcrypto-shlib-v3_sxnet.o", "crypto/x509/libcrypto-shlib-v3_tlsf.o", "crypto/x509/libcrypto-shlib-v3_utf8.o", "crypto/x509/libcrypto-shlib-v3_utl.o", "crypto/x509/libcrypto-shlib-v3err.o", "crypto/x509/libcrypto-shlib-x509_att.o", "crypto/x509/libcrypto-shlib-x509_cmp.o", "crypto/x509/libcrypto-shlib-x509_d2.o", "crypto/x509/libcrypto-shlib-x509_def.o", "crypto/x509/libcrypto-shlib-x509_err.o", "crypto/x509/libcrypto-shlib-x509_ext.o", "crypto/x509/libcrypto-shlib-x509_lu.o", "crypto/x509/libcrypto-shlib-x509_meth.o", "crypto/x509/libcrypto-shlib-x509_obj.o", "crypto/x509/libcrypto-shlib-x509_r2x.o", "crypto/x509/libcrypto-shlib-x509_req.o", "crypto/x509/libcrypto-shlib-x509_set.o", "crypto/x509/libcrypto-shlib-x509_trust.o", "crypto/x509/libcrypto-shlib-x509_txt.o", "crypto/x509/libcrypto-shlib-x509_v3.o", "crypto/x509/libcrypto-shlib-x509_vfy.o", "crypto/x509/libcrypto-shlib-x509_vpm.o", "crypto/x509/libcrypto-shlib-x509cset.o", "crypto/x509/libcrypto-shlib-x509name.o", "crypto/x509/libcrypto-shlib-x509rset.o", "crypto/x509/libcrypto-shlib-x509spki.o", "crypto/x509/libcrypto-shlib-x509type.o", "crypto/x509/libcrypto-shlib-x_all.o", "crypto/x509/libcrypto-shlib-x_attrib.o", "crypto/x509/libcrypto-shlib-x_crl.o", "crypto/x509/libcrypto-shlib-x_exten.o", "crypto/x509/libcrypto-shlib-x_name.o", "crypto/x509/libcrypto-shlib-x_pubkey.o", "crypto/x509/libcrypto-shlib-x_req.o", "crypto/x509/libcrypto-shlib-x_x509.o", "crypto/x509/libcrypto-shlib-x_x509a.o", "libcrypto.ld", "providers/libcrypto-shlib-baseprov.o", "providers/libcrypto-shlib-defltprov.o", "providers/libcrypto-shlib-nullprov.o", "providers/libcrypto-shlib-prov_running.o" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/aes/libcrypto-shlib-aes_cbc.o", "product" => "libcrypto", "srcs" => [ "crypto/aes/aes_cbc.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/aes/libcrypto-shlib-aes_cfb.o", "product" => "libcrypto", "srcs" => [ "crypto/aes/aes_cfb.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/aes/libcrypto-shlib-aes_core.o", "product" => "libcrypto", "srcs" => [ "crypto/aes/aes_core.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/aes/libcrypto-shlib-aes_ecb.o", "product" => "libcrypto", "srcs" => [ "crypto/aes/aes_ecb.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/aes/libcrypto-shlib-aes_ige.o", "product" => "libcrypto", "srcs" => [ "crypto/aes/aes_ige.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/aes/libcrypto-shlib-aes_misc.o", "product" => "libcrypto", "srcs" => [ "crypto/aes/aes_misc.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/aes/libcrypto-shlib-aes_ofb.o", "product" => "libcrypto", "srcs" => [ "crypto/aes/aes_ofb.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/aes/libcrypto-shlib-aes_wrap.o", "product" => "libcrypto", "srcs" => [ "crypto/aes/aes_wrap.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/asn1/libcrypto-shlib-a_bitstr.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/a_bitstr.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/asn1/libcrypto-shlib-a_d2i_fp.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/a_d2i_fp.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/asn1/libcrypto-shlib-a_digest.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/a_digest.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/asn1/libcrypto-shlib-a_dup.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/a_dup.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/asn1/libcrypto-shlib-a_gentm.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/a_gentm.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/asn1/libcrypto-shlib-a_i2d_fp.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/a_i2d_fp.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/asn1/libcrypto-shlib-a_int.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/a_int.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/asn1/libcrypto-shlib-a_mbstr.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/a_mbstr.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/asn1/libcrypto-shlib-a_object.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/a_object.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/asn1/libcrypto-shlib-a_octet.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/a_octet.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/asn1/libcrypto-shlib-a_print.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/a_print.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/asn1/libcrypto-shlib-a_sign.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/a_sign.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/asn1/libcrypto-shlib-a_strex.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/a_strex.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/asn1/libcrypto-shlib-a_strnid.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/a_strnid.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/asn1/libcrypto-shlib-a_time.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/a_time.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/asn1/libcrypto-shlib-a_type.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/a_type.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/asn1/libcrypto-shlib-a_utctm.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/a_utctm.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/asn1/libcrypto-shlib-a_utf8.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/a_utf8.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/asn1/libcrypto-shlib-a_verify.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/a_verify.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/asn1/libcrypto-shlib-ameth_lib.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/ameth_lib.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/asn1/libcrypto-shlib-asn1_err.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/asn1_err.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/asn1/libcrypto-shlib-asn1_gen.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/asn1_gen.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/asn1/libcrypto-shlib-asn1_item_list.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/asn1_item_list.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/asn1/libcrypto-shlib-asn1_lib.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/asn1_lib.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/asn1/libcrypto-shlib-asn1_parse.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/asn1_parse.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/asn1/libcrypto-shlib-asn_mime.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/asn_mime.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/asn1/libcrypto-shlib-asn_moid.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/asn_moid.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/asn1/libcrypto-shlib-asn_mstbl.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/asn_mstbl.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/asn1/libcrypto-shlib-asn_pack.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/asn_pack.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/asn1/libcrypto-shlib-bio_asn1.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/bio_asn1.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/asn1/libcrypto-shlib-bio_ndef.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/bio_ndef.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/asn1/libcrypto-shlib-d2i_param.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/d2i_param.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/asn1/libcrypto-shlib-d2i_pr.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/d2i_pr.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/asn1/libcrypto-shlib-d2i_pu.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/d2i_pu.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/asn1/libcrypto-shlib-evp_asn1.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/evp_asn1.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/asn1/libcrypto-shlib-f_int.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/f_int.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/asn1/libcrypto-shlib-f_string.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/f_string.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/asn1/libcrypto-shlib-i2d_evp.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/i2d_evp.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/asn1/libcrypto-shlib-n_pkey.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/n_pkey.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/asn1/libcrypto-shlib-nsseq.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/nsseq.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/asn1/libcrypto-shlib-p5_pbe.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/p5_pbe.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/asn1/libcrypto-shlib-p5_pbev2.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/p5_pbev2.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/asn1/libcrypto-shlib-p5_scrypt.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/p5_scrypt.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/asn1/libcrypto-shlib-p8_pkey.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/p8_pkey.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/asn1/libcrypto-shlib-t_bitst.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/t_bitst.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/asn1/libcrypto-shlib-t_pkey.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/t_pkey.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/asn1/libcrypto-shlib-t_spki.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/t_spki.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/asn1/libcrypto-shlib-tasn_dec.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/tasn_dec.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/asn1/libcrypto-shlib-tasn_enc.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/tasn_enc.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/asn1/libcrypto-shlib-tasn_fre.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/tasn_fre.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/asn1/libcrypto-shlib-tasn_new.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/tasn_new.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/asn1/libcrypto-shlib-tasn_prn.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/tasn_prn.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/asn1/libcrypto-shlib-tasn_scn.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/tasn_scn.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/asn1/libcrypto-shlib-tasn_typ.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/tasn_typ.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/asn1/libcrypto-shlib-tasn_utl.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/tasn_utl.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/asn1/libcrypto-shlib-x_algor.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/x_algor.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/asn1/libcrypto-shlib-x_bignum.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/x_bignum.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/asn1/libcrypto-shlib-x_info.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/x_info.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/asn1/libcrypto-shlib-x_int64.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/x_int64.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/asn1/libcrypto-shlib-x_long.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/x_long.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/asn1/libcrypto-shlib-x_pkey.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/x_pkey.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/asn1/libcrypto-shlib-x_sig.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/x_sig.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/asn1/libcrypto-shlib-x_spki.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/x_spki.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/asn1/libcrypto-shlib-x_val.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/x_val.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/async/arch/libcrypto-shlib-async_null.o", "product" => "libcrypto", "srcs" => [ "crypto/async/arch/async_null.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/async/arch/libcrypto-shlib-async_posix.o", "product" => "libcrypto", "srcs" => [ "crypto/async/arch/async_posix.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/async/arch/libcrypto-shlib-async_win.o", "product" => "libcrypto", "srcs" => [ "crypto/async/arch/async_win.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/async/libcrypto-shlib-async.o", "product" => "libcrypto", "srcs" => [ "crypto/async/async.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/async/libcrypto-shlib-async_err.o", "product" => "libcrypto", "srcs" => [ "crypto/async/async_err.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/async/libcrypto-shlib-async_wait.o", "product" => "libcrypto", "srcs" => [ "crypto/async/async_wait.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/bf/libcrypto-shlib-bf_cfb64.o", "product" => "libcrypto", "srcs" => [ "crypto/bf/bf_cfb64.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/bf/libcrypto-shlib-bf_ecb.o", "product" => "libcrypto", "srcs" => [ "crypto/bf/bf_ecb.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/bf/libcrypto-shlib-bf_enc.o", "product" => "libcrypto", "srcs" => [ "crypto/bf/bf_enc.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/bf/libcrypto-shlib-bf_ofb64.o", "product" => "libcrypto", "srcs" => [ "crypto/bf/bf_ofb64.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/bf/libcrypto-shlib-bf_skey.o", "product" => "libcrypto", "srcs" => [ "crypto/bf/bf_skey.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/bio/libcrypto-shlib-bf_buff.o", "product" => "libcrypto", "srcs" => [ "crypto/bio/bf_buff.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/bio/libcrypto-shlib-bf_lbuf.o", "product" => "libcrypto", "srcs" => [ "crypto/bio/bf_lbuf.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/bio/libcrypto-shlib-bf_nbio.o", "product" => "libcrypto", "srcs" => [ "crypto/bio/bf_nbio.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/bio/libcrypto-shlib-bf_null.o", "product" => "libcrypto", "srcs" => [ "crypto/bio/bf_null.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/bio/libcrypto-shlib-bf_prefix.o", "product" => "libcrypto", "srcs" => [ "crypto/bio/bf_prefix.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/bio/libcrypto-shlib-bf_readbuff.o", "product" => "libcrypto", "srcs" => [ "crypto/bio/bf_readbuff.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/bio/libcrypto-shlib-bio_addr.o", "product" => "libcrypto", "srcs" => [ "crypto/bio/bio_addr.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/bio/libcrypto-shlib-bio_cb.o", "product" => "libcrypto", "srcs" => [ "crypto/bio/bio_cb.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/bio/libcrypto-shlib-bio_dump.o", "product" => "libcrypto", "srcs" => [ "crypto/bio/bio_dump.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/bio/libcrypto-shlib-bio_err.o", "product" => "libcrypto", "srcs" => [ "crypto/bio/bio_err.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/bio/libcrypto-shlib-bio_lib.o", "product" => "libcrypto", "srcs" => [ "crypto/bio/bio_lib.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/bio/libcrypto-shlib-bio_meth.o", "product" => "libcrypto", "srcs" => [ "crypto/bio/bio_meth.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/bio/libcrypto-shlib-bio_print.o", "product" => "libcrypto", "srcs" => [ "crypto/bio/bio_print.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/bio/libcrypto-shlib-bio_sock.o", "product" => "libcrypto", "srcs" => [ "crypto/bio/bio_sock.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/bio/libcrypto-shlib-bio_sock2.o", "product" => "libcrypto", "srcs" => [ "crypto/bio/bio_sock2.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/bio/libcrypto-shlib-bss_acpt.o", "product" => "libcrypto", "srcs" => [ "crypto/bio/bss_acpt.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/bio/libcrypto-shlib-bss_bio.o", "product" => "libcrypto", "srcs" => [ "crypto/bio/bss_bio.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/bio/libcrypto-shlib-bss_conn.o", "product" => "libcrypto", "srcs" => [ "crypto/bio/bss_conn.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/bio/libcrypto-shlib-bss_core.o", "product" => "libcrypto", "srcs" => [ "crypto/bio/bss_core.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/bio/libcrypto-shlib-bss_dgram.o", "product" => "libcrypto", "srcs" => [ "crypto/bio/bss_dgram.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/bio/libcrypto-shlib-bss_fd.o", "product" => "libcrypto", "srcs" => [ "crypto/bio/bss_fd.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/bio/libcrypto-shlib-bss_file.o", "product" => "libcrypto", "srcs" => [ "crypto/bio/bss_file.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/bio/libcrypto-shlib-bss_log.o", "product" => "libcrypto", "srcs" => [ "crypto/bio/bss_log.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/bio/libcrypto-shlib-bss_mem.o", "product" => "libcrypto", "srcs" => [ "crypto/bio/bss_mem.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/bio/libcrypto-shlib-bss_null.o", "product" => "libcrypto", "srcs" => [ "crypto/bio/bss_null.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/bio/libcrypto-shlib-bss_sock.o", "product" => "libcrypto", "srcs" => [ "crypto/bio/bss_sock.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/bio/libcrypto-shlib-ossl_core_bio.o", "product" => "libcrypto", "srcs" => [ "crypto/bio/ossl_core_bio.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/bn/libcrypto-shlib-bn_add.o", "product" => "libcrypto", "srcs" => [ "crypto/bn/bn_add.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/bn/libcrypto-shlib-bn_asm.o", "product" => "libcrypto", "srcs" => [ "crypto/bn/bn_asm.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/bn/libcrypto-shlib-bn_blind.o", "product" => "libcrypto", "srcs" => [ "crypto/bn/bn_blind.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/bn/libcrypto-shlib-bn_const.o", "product" => "libcrypto", "srcs" => [ "crypto/bn/bn_const.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/bn/libcrypto-shlib-bn_conv.o", "product" => "libcrypto", "srcs" => [ "crypto/bn/bn_conv.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/bn/libcrypto-shlib-bn_ctx.o", "product" => "libcrypto", "srcs" => [ "crypto/bn/bn_ctx.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/bn/libcrypto-shlib-bn_depr.o", "product" => "libcrypto", "srcs" => [ "crypto/bn/bn_depr.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/bn/libcrypto-shlib-bn_dh.o", "product" => "libcrypto", "srcs" => [ "crypto/bn/bn_dh.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/bn/libcrypto-shlib-bn_div.o", "product" => "libcrypto", "srcs" => [ "crypto/bn/bn_div.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/bn/libcrypto-shlib-bn_err.o", "product" => "libcrypto", "srcs" => [ "crypto/bn/bn_err.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ "crypto", ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/bn/libcrypto-shlib-bn_exp.o", "product" => "libcrypto", "srcs" => [ "crypto/bn/bn_exp.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/bn/libcrypto-shlib-bn_exp2.o", "product" => "libcrypto", "srcs" => [ "crypto/bn/bn_exp2.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/bn/libcrypto-shlib-bn_gcd.o", "product" => "libcrypto", "srcs" => [ "crypto/bn/bn_gcd.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/bn/libcrypto-shlib-bn_gf2m.o", "product" => "libcrypto", "srcs" => [ "crypto/bn/bn_gf2m.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/bn/libcrypto-shlib-bn_intern.o", "product" => "libcrypto", "srcs" => [ "crypto/bn/bn_intern.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/bn/libcrypto-shlib-bn_kron.o", "product" => "libcrypto", "srcs" => [ "crypto/bn/bn_kron.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/bn/libcrypto-shlib-bn_lib.o", "product" => "libcrypto", "srcs" => [ "crypto/bn/bn_lib.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/bn/libcrypto-shlib-bn_mod.o", "product" => "libcrypto", "srcs" => [ "crypto/bn/bn_mod.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/bn/libcrypto-shlib-bn_mont.o", "product" => "libcrypto", "srcs" => [ "crypto/bn/bn_mont.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/bn/libcrypto-shlib-bn_mpi.o", "product" => "libcrypto", "srcs" => [ "crypto/bn/bn_mpi.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/bn/libcrypto-shlib-bn_mul.o", "product" => "libcrypto", "srcs" => [ "crypto/bn/bn_mul.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/bn/libcrypto-shlib-bn_nist.o", "product" => "libcrypto", "srcs" => [ "crypto/bn/bn_nist.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/bn/libcrypto-shlib-bn_prime.o", "product" => "libcrypto", "srcs" => [ "crypto/bn/bn_prime.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/bn/libcrypto-shlib-bn_print.o", "product" => "libcrypto", "srcs" => [ "crypto/bn/bn_print.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/bn/libcrypto-shlib-bn_rand.o", "product" => "libcrypto", "srcs" => [ "crypto/bn/bn_rand.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/bn/libcrypto-shlib-bn_recp.o", "product" => "libcrypto", "srcs" => [ "crypto/bn/bn_recp.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/bn/libcrypto-shlib-bn_rsa_fips186_4.o", "product" => "libcrypto", "srcs" => [ "crypto/bn/bn_rsa_fips186_4.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/bn/libcrypto-shlib-bn_shift.o", "product" => "libcrypto", "srcs" => [ "crypto/bn/bn_shift.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/bn/libcrypto-shlib-bn_sqr.o", "product" => "libcrypto", "srcs" => [ "crypto/bn/bn_sqr.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/bn/libcrypto-shlib-bn_sqrt.o", "product" => "libcrypto", "srcs" => [ "crypto/bn/bn_sqrt.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/bn/libcrypto-shlib-bn_srp.o", "product" => "libcrypto", "srcs" => [ "crypto/bn/bn_srp.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/bn/libcrypto-shlib-bn_word.o", "product" => "libcrypto", "srcs" => [ "crypto/bn/bn_word.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/bn/libcrypto-shlib-bn_x931p.o", "product" => "libcrypto", "srcs" => [ "crypto/bn/bn_x931p.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/buffer/libcrypto-shlib-buf_err.o", "product" => "libcrypto", "srcs" => [ "crypto/buffer/buf_err.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/buffer/libcrypto-shlib-buffer.o", "product" => "libcrypto", "srcs" => [ "crypto/buffer/buffer.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/cast/libcrypto-shlib-c_cfb64.o", "product" => "libcrypto", "srcs" => [ "crypto/cast/c_cfb64.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/cast/libcrypto-shlib-c_ecb.o", "product" => "libcrypto", "srcs" => [ "crypto/cast/c_ecb.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/cast/libcrypto-shlib-c_enc.o", "product" => "libcrypto", "srcs" => [ "crypto/cast/c_enc.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/cast/libcrypto-shlib-c_ofb64.o", "product" => "libcrypto", "srcs" => [ "crypto/cast/c_ofb64.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/cast/libcrypto-shlib-c_skey.o", "product" => "libcrypto", "srcs" => [ "crypto/cast/c_skey.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/cmac/libcrypto-shlib-cmac.o", "product" => "libcrypto", "srcs" => [ "crypto/cmac/cmac.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/cmp/libcrypto-shlib-cmp_asn.o", "product" => "libcrypto", "srcs" => [ "crypto/cmp/cmp_asn.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/cmp/libcrypto-shlib-cmp_client.o", "product" => "libcrypto", "srcs" => [ "crypto/cmp/cmp_client.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/cmp/libcrypto-shlib-cmp_ctx.o", "product" => "libcrypto", "srcs" => [ "crypto/cmp/cmp_ctx.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/cmp/libcrypto-shlib-cmp_err.o", "product" => "libcrypto", "srcs" => [ "crypto/cmp/cmp_err.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/cmp/libcrypto-shlib-cmp_hdr.o", "product" => "libcrypto", "srcs" => [ "crypto/cmp/cmp_hdr.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/cmp/libcrypto-shlib-cmp_http.o", "product" => "libcrypto", "srcs" => [ "crypto/cmp/cmp_http.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/cmp/libcrypto-shlib-cmp_msg.o", "product" => "libcrypto", "srcs" => [ "crypto/cmp/cmp_msg.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/cmp/libcrypto-shlib-cmp_protect.o", "product" => "libcrypto", "srcs" => [ "crypto/cmp/cmp_protect.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/cmp/libcrypto-shlib-cmp_server.o", "product" => "libcrypto", "srcs" => [ "crypto/cmp/cmp_server.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/cmp/libcrypto-shlib-cmp_status.o", "product" => "libcrypto", "srcs" => [ "crypto/cmp/cmp_status.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/cmp/libcrypto-shlib-cmp_util.o", "product" => "libcrypto", "srcs" => [ "crypto/cmp/cmp_util.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/cmp/libcrypto-shlib-cmp_vfy.o", "product" => "libcrypto", "srcs" => [ "crypto/cmp/cmp_vfy.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/conf/libcrypto-shlib-conf_api.o", "product" => "libcrypto", "srcs" => [ "crypto/conf/conf_api.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/conf/libcrypto-shlib-conf_def.o", "product" => "libcrypto", "srcs" => [ "crypto/conf/conf_def.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/conf/libcrypto-shlib-conf_err.o", "product" => "libcrypto", "srcs" => [ "crypto/conf/conf_err.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/conf/libcrypto-shlib-conf_lib.o", "product" => "libcrypto", "srcs" => [ "crypto/conf/conf_lib.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/conf/libcrypto-shlib-conf_mall.o", "product" => "libcrypto", "srcs" => [ "crypto/conf/conf_mall.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/conf/libcrypto-shlib-conf_mod.o", "product" => "libcrypto", "srcs" => [ "crypto/conf/conf_mod.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/conf/libcrypto-shlib-conf_sap.o", "product" => "libcrypto", "srcs" => [ "crypto/conf/conf_sap.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/conf/libcrypto-shlib-conf_ssl.o", "product" => "libcrypto", "srcs" => [ "crypto/conf/conf_ssl.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/crmf/libcrypto-shlib-crmf_asn.o", "product" => "libcrypto", "srcs" => [ "crypto/crmf/crmf_asn.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/crmf/libcrypto-shlib-crmf_err.o", "product" => "libcrypto", "srcs" => [ "crypto/crmf/crmf_err.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/crmf/libcrypto-shlib-crmf_lib.o", "product" => "libcrypto", "srcs" => [ "crypto/crmf/crmf_lib.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/crmf/libcrypto-shlib-crmf_pbm.o", "product" => "libcrypto", "srcs" => [ "crypto/crmf/crmf_pbm.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/ct/libcrypto-shlib-ct_b64.o", "product" => "libcrypto", "srcs" => [ "crypto/ct/ct_b64.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/ct/libcrypto-shlib-ct_err.o", "product" => "libcrypto", "srcs" => [ "crypto/ct/ct_err.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/ct/libcrypto-shlib-ct_log.o", "product" => "libcrypto", "srcs" => [ "crypto/ct/ct_log.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/ct/libcrypto-shlib-ct_oct.o", "product" => "libcrypto", "srcs" => [ "crypto/ct/ct_oct.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/ct/libcrypto-shlib-ct_policy.o", "product" => "libcrypto", "srcs" => [ "crypto/ct/ct_policy.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/ct/libcrypto-shlib-ct_prn.o", "product" => "libcrypto", "srcs" => [ "crypto/ct/ct_prn.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/ct/libcrypto-shlib-ct_sct.o", "product" => "libcrypto", "srcs" => [ "crypto/ct/ct_sct.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/ct/libcrypto-shlib-ct_sct_ctx.o", "product" => "libcrypto", "srcs" => [ "crypto/ct/ct_sct_ctx.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/ct/libcrypto-shlib-ct_vfy.o", "product" => "libcrypto", "srcs" => [ "crypto/ct/ct_vfy.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/ct/libcrypto-shlib-ct_x509v3.o", "product" => "libcrypto", "srcs" => [ "crypto/ct/ct_x509v3.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/des/libcrypto-shlib-cbc_cksm.o", "product" => "libcrypto", "srcs" => [ "crypto/des/cbc_cksm.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/des/libcrypto-shlib-cbc_enc.o", "product" => "libcrypto", "srcs" => [ "crypto/des/cbc_enc.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/des/libcrypto-shlib-cfb64ede.o", "product" => "libcrypto", "srcs" => [ "crypto/des/cfb64ede.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/des/libcrypto-shlib-cfb64enc.o", "product" => "libcrypto", "srcs" => [ "crypto/des/cfb64enc.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/des/libcrypto-shlib-cfb_enc.o", "product" => "libcrypto", "srcs" => [ "crypto/des/cfb_enc.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/des/libcrypto-shlib-des_enc.o", "product" => "libcrypto", "srcs" => [ "crypto/des/des_enc.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/des/libcrypto-shlib-ecb3_enc.o", "product" => "libcrypto", "srcs" => [ "crypto/des/ecb3_enc.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/des/libcrypto-shlib-ecb_enc.o", "product" => "libcrypto", "srcs" => [ "crypto/des/ecb_enc.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/des/libcrypto-shlib-fcrypt.o", "product" => "libcrypto", "srcs" => [ "crypto/des/fcrypt.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/des/libcrypto-shlib-fcrypt_b.o", "product" => "libcrypto", "srcs" => [ "crypto/des/fcrypt_b.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/des/libcrypto-shlib-ofb64ede.o", "product" => "libcrypto", "srcs" => [ "crypto/des/ofb64ede.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/des/libcrypto-shlib-ofb64enc.o", "product" => "libcrypto", "srcs" => [ "crypto/des/ofb64enc.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/des/libcrypto-shlib-ofb_enc.o", "product" => "libcrypto", "srcs" => [ "crypto/des/ofb_enc.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/des/libcrypto-shlib-pcbc_enc.o", "product" => "libcrypto", "srcs" => [ "crypto/des/pcbc_enc.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/des/libcrypto-shlib-qud_cksm.o", "product" => "libcrypto", "srcs" => [ "crypto/des/qud_cksm.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/des/libcrypto-shlib-rand_key.o", "product" => "libcrypto", "srcs" => [ "crypto/des/rand_key.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/des/libcrypto-shlib-set_key.o", "product" => "libcrypto", "srcs" => [ "crypto/des/set_key.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/des/libcrypto-shlib-str2key.o", "product" => "libcrypto", "srcs" => [ "crypto/des/str2key.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/des/libcrypto-shlib-xcbc_enc.o", "product" => "libcrypto", "srcs" => [ "crypto/des/xcbc_enc.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/dh/libcrypto-shlib-dh_ameth.o", "product" => "libcrypto", "srcs" => [ "crypto/dh/dh_ameth.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/dh/libcrypto-shlib-dh_asn1.o", "product" => "libcrypto", "srcs" => [ "crypto/dh/dh_asn1.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/dh/libcrypto-shlib-dh_backend.o", "product" => "libcrypto", "srcs" => [ "crypto/dh/dh_backend.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/dh/libcrypto-shlib-dh_check.o", "product" => "libcrypto", "srcs" => [ "crypto/dh/dh_check.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/dh/libcrypto-shlib-dh_depr.o", "product" => "libcrypto", "srcs" => [ "crypto/dh/dh_depr.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/dh/libcrypto-shlib-dh_err.o", "product" => "libcrypto", "srcs" => [ "crypto/dh/dh_err.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/dh/libcrypto-shlib-dh_gen.o", "product" => "libcrypto", "srcs" => [ "crypto/dh/dh_gen.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/dh/libcrypto-shlib-dh_group_params.o", "product" => "libcrypto", "srcs" => [ "crypto/dh/dh_group_params.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/dh/libcrypto-shlib-dh_kdf.o", "product" => "libcrypto", "srcs" => [ "crypto/dh/dh_kdf.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/dh/libcrypto-shlib-dh_key.o", "product" => "libcrypto", "srcs" => [ "crypto/dh/dh_key.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/dh/libcrypto-shlib-dh_lib.o", "product" => "libcrypto", "srcs" => [ "crypto/dh/dh_lib.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/dh/libcrypto-shlib-dh_meth.o", "product" => "libcrypto", "srcs" => [ "crypto/dh/dh_meth.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/dh/libcrypto-shlib-dh_pmeth.o", "product" => "libcrypto", "srcs" => [ "crypto/dh/dh_pmeth.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/dh/libcrypto-shlib-dh_prn.o", "product" => "libcrypto", "srcs" => [ "crypto/dh/dh_prn.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/dh/libcrypto-shlib-dh_rfc5114.o", "product" => "libcrypto", "srcs" => [ "crypto/dh/dh_rfc5114.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/dsa/libcrypto-shlib-dsa_ameth.o", "product" => "libcrypto", "srcs" => [ "crypto/dsa/dsa_ameth.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/dsa/libcrypto-shlib-dsa_asn1.o", "product" => "libcrypto", "srcs" => [ "crypto/dsa/dsa_asn1.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/dsa/libcrypto-shlib-dsa_backend.o", "product" => "libcrypto", "srcs" => [ "crypto/dsa/dsa_backend.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/dsa/libcrypto-shlib-dsa_check.o", "product" => "libcrypto", "srcs" => [ "crypto/dsa/dsa_check.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/dsa/libcrypto-shlib-dsa_depr.o", "product" => "libcrypto", "srcs" => [ "crypto/dsa/dsa_depr.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/dsa/libcrypto-shlib-dsa_err.o", "product" => "libcrypto", "srcs" => [ "crypto/dsa/dsa_err.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/dsa/libcrypto-shlib-dsa_gen.o", "product" => "libcrypto", "srcs" => [ "crypto/dsa/dsa_gen.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/dsa/libcrypto-shlib-dsa_key.o", "product" => "libcrypto", "srcs" => [ "crypto/dsa/dsa_key.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/dsa/libcrypto-shlib-dsa_lib.o", "product" => "libcrypto", "srcs" => [ "crypto/dsa/dsa_lib.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/dsa/libcrypto-shlib-dsa_meth.o", "product" => "libcrypto", "srcs" => [ "crypto/dsa/dsa_meth.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/dsa/libcrypto-shlib-dsa_ossl.o", "product" => "libcrypto", "srcs" => [ "crypto/dsa/dsa_ossl.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/dsa/libcrypto-shlib-dsa_pmeth.o", "product" => "libcrypto", "srcs" => [ "crypto/dsa/dsa_pmeth.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/dsa/libcrypto-shlib-dsa_prn.o", "product" => "libcrypto", "srcs" => [ "crypto/dsa/dsa_prn.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/dsa/libcrypto-shlib-dsa_sign.o", "product" => "libcrypto", "srcs" => [ "crypto/dsa/dsa_sign.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/dsa/libcrypto-shlib-dsa_vrf.o", "product" => "libcrypto", "srcs" => [ "crypto/dsa/dsa_vrf.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/dso/libcrypto-shlib-dso_dl.o", "product" => "libcrypto", "srcs" => [ "crypto/dso/dso_dl.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/dso/libcrypto-shlib-dso_dlfcn.o", "product" => "libcrypto", "srcs" => [ "crypto/dso/dso_dlfcn.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/dso/libcrypto-shlib-dso_err.o", "product" => "libcrypto", "srcs" => [ "crypto/dso/dso_err.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/dso/libcrypto-shlib-dso_lib.o", "product" => "libcrypto", "srcs" => [ "crypto/dso/dso_lib.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/dso/libcrypto-shlib-dso_openssl.o", "product" => "libcrypto", "srcs" => [ "crypto/dso/dso_openssl.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/dso/libcrypto-shlib-dso_vms.o", "product" => "libcrypto", "srcs" => [ "crypto/dso/dso_vms.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/dso/libcrypto-shlib-dso_win32.o", "product" => "libcrypto", "srcs" => [ "crypto/dso/dso_win32.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/ec/curve448/arch_32/libcrypto-shlib-f_impl32.o", "product" => "libcrypto", "srcs" => [ "crypto/ec/curve448/arch_32/f_impl32.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/ec/curve448/arch_64/libcrypto-shlib-f_impl64.o", "product" => "libcrypto", "srcs" => [ "crypto/ec/curve448/arch_64/f_impl64.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/ec/curve448/libcrypto-shlib-curve448.o", "product" => "libcrypto", "srcs" => [ "crypto/ec/curve448/curve448.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/ec/curve448/libcrypto-shlib-curve448_tables.o", "product" => "libcrypto", "srcs" => [ "crypto/ec/curve448/curve448_tables.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/ec/curve448/libcrypto-shlib-eddsa.o", "product" => "libcrypto", "srcs" => [ "crypto/ec/curve448/eddsa.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/ec/curve448/libcrypto-shlib-f_generic.o", "product" => "libcrypto", "srcs" => [ "crypto/ec/curve448/f_generic.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/ec/curve448/libcrypto-shlib-scalar.o", "product" => "libcrypto", "srcs" => [ "crypto/ec/curve448/scalar.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/ec/libcrypto-shlib-curve25519.o", "product" => "libcrypto", "srcs" => [ "crypto/ec/curve25519.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/ec/libcrypto-shlib-ec2_oct.o", "product" => "libcrypto", "srcs" => [ "crypto/ec/ec2_oct.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/ec/libcrypto-shlib-ec2_smpl.o", "product" => "libcrypto", "srcs" => [ "crypto/ec/ec2_smpl.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/ec/libcrypto-shlib-ec_ameth.o", "product" => "libcrypto", "srcs" => [ "crypto/ec/ec_ameth.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/ec/libcrypto-shlib-ec_asn1.o", "product" => "libcrypto", "srcs" => [ "crypto/ec/ec_asn1.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/ec/libcrypto-shlib-ec_backend.o", "product" => "libcrypto", "srcs" => [ "crypto/ec/ec_backend.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/ec/libcrypto-shlib-ec_check.o", "product" => "libcrypto", "srcs" => [ "crypto/ec/ec_check.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/ec/libcrypto-shlib-ec_curve.o", "product" => "libcrypto", "srcs" => [ "crypto/ec/ec_curve.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/ec/libcrypto-shlib-ec_cvt.o", "product" => "libcrypto", "srcs" => [ "crypto/ec/ec_cvt.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/ec/libcrypto-shlib-ec_deprecated.o", "product" => "libcrypto", "srcs" => [ "crypto/ec/ec_deprecated.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/ec/libcrypto-shlib-ec_err.o", "product" => "libcrypto", "srcs" => [ "crypto/ec/ec_err.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/ec/libcrypto-shlib-ec_key.o", "product" => "libcrypto", "srcs" => [ "crypto/ec/ec_key.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/ec/libcrypto-shlib-ec_kmeth.o", "product" => "libcrypto", "srcs" => [ "crypto/ec/ec_kmeth.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/ec/libcrypto-shlib-ec_lib.o", "product" => "libcrypto", "srcs" => [ "crypto/ec/ec_lib.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/ec/libcrypto-shlib-ec_mult.o", "product" => "libcrypto", "srcs" => [ "crypto/ec/ec_mult.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/ec/libcrypto-shlib-ec_oct.o", "product" => "libcrypto", "srcs" => [ "crypto/ec/ec_oct.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/ec/libcrypto-shlib-ec_pmeth.o", "product" => "libcrypto", "srcs" => [ "crypto/ec/ec_pmeth.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/ec/libcrypto-shlib-ec_print.o", "product" => "libcrypto", "srcs" => [ "crypto/ec/ec_print.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/ec/libcrypto-shlib-ecdh_kdf.o", "product" => "libcrypto", "srcs" => [ "crypto/ec/ecdh_kdf.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/ec/libcrypto-shlib-ecdh_ossl.o", "product" => "libcrypto", "srcs" => [ "crypto/ec/ecdh_ossl.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/ec/libcrypto-shlib-ecdsa_ossl.o", "product" => "libcrypto", "srcs" => [ "crypto/ec/ecdsa_ossl.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/ec/libcrypto-shlib-ecdsa_sign.o", "product" => "libcrypto", "srcs" => [ "crypto/ec/ecdsa_sign.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/ec/libcrypto-shlib-ecdsa_vrf.o", "product" => "libcrypto", "srcs" => [ "crypto/ec/ecdsa_vrf.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/ec/libcrypto-shlib-eck_prn.o", "product" => "libcrypto", "srcs" => [ "crypto/ec/eck_prn.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/ec/libcrypto-shlib-ecp_mont.o", "product" => "libcrypto", "srcs" => [ "crypto/ec/ecp_mont.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/ec/libcrypto-shlib-ecp_nist.o", "product" => "libcrypto", "srcs" => [ "crypto/ec/ecp_nist.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/ec/libcrypto-shlib-ecp_oct.o", "product" => "libcrypto", "srcs" => [ "crypto/ec/ecp_oct.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/ec/libcrypto-shlib-ecp_smpl.o", "product" => "libcrypto", "srcs" => [ "crypto/ec/ecp_smpl.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/ec/libcrypto-shlib-ecx_backend.o", "product" => "libcrypto", "srcs" => [ "crypto/ec/ecx_backend.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/ec/libcrypto-shlib-ecx_key.o", "product" => "libcrypto", "srcs" => [ "crypto/ec/ecx_key.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ "crypto", ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/ec/libcrypto-shlib-ecx_meth.o", "product" => "libcrypto", "srcs" => [ "crypto/ec/ecx_meth.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/encode_decode/libcrypto-shlib-decoder_err.o", "product" => "libcrypto", "srcs" => [ "crypto/encode_decode/decoder_err.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/encode_decode/libcrypto-shlib-decoder_lib.o", "product" => "libcrypto", "srcs" => [ "crypto/encode_decode/decoder_lib.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/encode_decode/libcrypto-shlib-decoder_meth.o", "product" => "libcrypto", "srcs" => [ "crypto/encode_decode/decoder_meth.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/encode_decode/libcrypto-shlib-decoder_pkey.o", "product" => "libcrypto", "srcs" => [ "crypto/encode_decode/decoder_pkey.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/encode_decode/libcrypto-shlib-encoder_err.o", "product" => "libcrypto", "srcs" => [ "crypto/encode_decode/encoder_err.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/encode_decode/libcrypto-shlib-encoder_lib.o", "product" => "libcrypto", "srcs" => [ "crypto/encode_decode/encoder_lib.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/encode_decode/libcrypto-shlib-encoder_meth.o", "product" => "libcrypto", "srcs" => [ "crypto/encode_decode/encoder_meth.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/encode_decode/libcrypto-shlib-encoder_pkey.o", "product" => "libcrypto", "srcs" => [ "crypto/encode_decode/encoder_pkey.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/err/libcrypto-shlib-err.o", "product" => "libcrypto", "srcs" => [ "crypto/err/err.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/err/libcrypto-shlib-err_all.o", "product" => "libcrypto", "srcs" => [ "crypto/err/err_all.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/err/libcrypto-shlib-err_all_legacy.o", "product" => "libcrypto", "srcs" => [ "crypto/err/err_all_legacy.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/err/libcrypto-shlib-err_blocks.o", "product" => "libcrypto", "srcs" => [ "crypto/err/err_blocks.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/err/libcrypto-shlib-err_prn.o", "product" => "libcrypto", "srcs" => [ "crypto/err/err_prn.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/ess/libcrypto-shlib-ess_asn1.o", "product" => "libcrypto", "srcs" => [ "crypto/ess/ess_asn1.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/ess/libcrypto-shlib-ess_err.o", "product" => "libcrypto", "srcs" => [ "crypto/ess/ess_err.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/ess/libcrypto-shlib-ess_lib.o", "product" => "libcrypto", "srcs" => [ "crypto/ess/ess_lib.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/evp/libcrypto-shlib-asymcipher.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/asymcipher.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/evp/libcrypto-shlib-bio_b64.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/bio_b64.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/evp/libcrypto-shlib-bio_enc.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/bio_enc.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/evp/libcrypto-shlib-bio_md.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/bio_md.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/evp/libcrypto-shlib-bio_ok.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/bio_ok.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/evp/libcrypto-shlib-c_allc.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/c_allc.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/evp/libcrypto-shlib-c_alld.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/c_alld.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/evp/libcrypto-shlib-cmeth_lib.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/cmeth_lib.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/evp/libcrypto-shlib-ctrl_params_translate.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/ctrl_params_translate.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/evp/libcrypto-shlib-dh_ctrl.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/dh_ctrl.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/evp/libcrypto-shlib-dh_support.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/dh_support.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/evp/libcrypto-shlib-digest.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/digest.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/evp/libcrypto-shlib-dsa_ctrl.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/dsa_ctrl.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ "crypto", "crypto/modes", ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/evp/libcrypto-shlib-e_aes.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/e_aes.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ "crypto/modes", ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/evp/libcrypto-shlib-e_aes_cbc_hmac_sha1.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/e_aes_cbc_hmac_sha1.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ "crypto/modes", ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/evp/libcrypto-shlib-e_aes_cbc_hmac_sha256.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/e_aes_cbc_hmac_sha256.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ "crypto", "crypto/modes", ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/evp/libcrypto-shlib-e_aria.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/e_aria.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/evp/libcrypto-shlib-e_bf.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/e_bf.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/evp/libcrypto-shlib-e_cast.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/e_cast.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/evp/libcrypto-shlib-e_chacha20_poly1305.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/e_chacha20_poly1305.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ "crypto", ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/evp/libcrypto-shlib-e_des.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/e_des.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ "crypto", ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/evp/libcrypto-shlib-e_des3.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/e_des3.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/evp/libcrypto-shlib-e_idea.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/e_idea.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/evp/libcrypto-shlib-e_null.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/e_null.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/evp/libcrypto-shlib-e_old.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/e_old.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/evp/libcrypto-shlib-e_rc2.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/e_rc2.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/evp/libcrypto-shlib-e_rc4.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/e_rc4.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/evp/libcrypto-shlib-e_rc4_hmac_md5.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/e_rc4_hmac_md5.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/evp/libcrypto-shlib-e_rc5.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/e_rc5.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ "crypto", "crypto/modes", ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/evp/libcrypto-shlib-e_sm4.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/e_sm4.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/evp/libcrypto-shlib-e_xcbc_d.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/e_xcbc_d.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/evp/libcrypto-shlib-ec_ctrl.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/ec_ctrl.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/evp/libcrypto-shlib-ec_support.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/ec_support.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/evp/libcrypto-shlib-encode.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/encode.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/evp/libcrypto-shlib-evp_cnf.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/evp_cnf.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/evp/libcrypto-shlib-evp_enc.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/evp_enc.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/evp/libcrypto-shlib-evp_err.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/evp_err.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/evp/libcrypto-shlib-evp_fetch.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/evp_fetch.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/evp/libcrypto-shlib-evp_key.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/evp_key.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/evp/libcrypto-shlib-evp_lib.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/evp_lib.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/evp/libcrypto-shlib-evp_pbe.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/evp_pbe.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/evp/libcrypto-shlib-evp_pkey.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/evp_pkey.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/evp/libcrypto-shlib-evp_rand.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/evp_rand.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/evp/libcrypto-shlib-evp_utils.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/evp_utils.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/evp/libcrypto-shlib-exchange.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/exchange.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/evp/libcrypto-shlib-kdf_lib.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/kdf_lib.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/evp/libcrypto-shlib-kdf_meth.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/kdf_meth.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/evp/libcrypto-shlib-kem.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/kem.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/evp/libcrypto-shlib-keymgmt_lib.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/keymgmt_lib.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/evp/libcrypto-shlib-keymgmt_meth.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/keymgmt_meth.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/evp/libcrypto-shlib-legacy_md4.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/legacy_md4.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/evp/libcrypto-shlib-legacy_md5.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/legacy_md5.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/evp/libcrypto-shlib-legacy_md5_sha1.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/legacy_md5_sha1.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/evp/libcrypto-shlib-legacy_ripemd.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/legacy_ripemd.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/evp/libcrypto-shlib-legacy_sha.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/legacy_sha.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/evp/libcrypto-shlib-m_null.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/m_null.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/evp/libcrypto-shlib-m_sigver.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/m_sigver.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/evp/libcrypto-shlib-mac_lib.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/mac_lib.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/evp/libcrypto-shlib-mac_meth.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/mac_meth.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/evp/libcrypto-shlib-names.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/names.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/evp/libcrypto-shlib-p5_crpt.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/p5_crpt.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/evp/libcrypto-shlib-p5_crpt2.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/p5_crpt2.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/evp/libcrypto-shlib-p_dec.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/p_dec.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/evp/libcrypto-shlib-p_enc.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/p_enc.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/evp/libcrypto-shlib-p_legacy.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/p_legacy.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/evp/libcrypto-shlib-p_lib.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/p_lib.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/evp/libcrypto-shlib-p_open.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/p_open.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/evp/libcrypto-shlib-p_seal.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/p_seal.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/evp/libcrypto-shlib-p_sign.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/p_sign.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/evp/libcrypto-shlib-p_verify.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/p_verify.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/evp/libcrypto-shlib-pbe_scrypt.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/pbe_scrypt.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/evp/libcrypto-shlib-pmeth_check.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/pmeth_check.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/evp/libcrypto-shlib-pmeth_gn.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/pmeth_gn.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/evp/libcrypto-shlib-pmeth_lib.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/pmeth_lib.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/evp/libcrypto-shlib-signature.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/signature.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/ffc/libcrypto-shlib-ffc_backend.o", "product" => "libcrypto", "srcs" => [ "crypto/ffc/ffc_backend.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/ffc/libcrypto-shlib-ffc_dh.o", "product" => "libcrypto", "srcs" => [ "crypto/ffc/ffc_dh.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/ffc/libcrypto-shlib-ffc_key_generate.o", "product" => "libcrypto", "srcs" => [ "crypto/ffc/ffc_key_generate.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/ffc/libcrypto-shlib-ffc_key_validate.o", "product" => "libcrypto", "srcs" => [ "crypto/ffc/ffc_key_validate.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/ffc/libcrypto-shlib-ffc_params.o", "product" => "libcrypto", "srcs" => [ "crypto/ffc/ffc_params.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/ffc/libcrypto-shlib-ffc_params_generate.o", "product" => "libcrypto", "srcs" => [ "crypto/ffc/ffc_params_generate.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/ffc/libcrypto-shlib-ffc_params_validate.o", "product" => "libcrypto", "srcs" => [ "crypto/ffc/ffc_params_validate.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/hmac/libcrypto-shlib-hmac.o", "product" => "libcrypto", "srcs" => [ "crypto/hmac/hmac.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/http/libcrypto-shlib-http_client.o", "product" => "libcrypto", "srcs" => [ "crypto/http/http_client.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/http/libcrypto-shlib-http_err.o", "product" => "libcrypto", "srcs" => [ "crypto/http/http_err.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/http/libcrypto-shlib-http_lib.o", "product" => "libcrypto", "srcs" => [ "crypto/http/http_lib.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/kdf/libcrypto-shlib-kdf_err.o", "product" => "libcrypto", "srcs" => [ "crypto/kdf/kdf_err.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/lhash/libcrypto-shlib-lh_stats.o", "product" => "libcrypto", "srcs" => [ "crypto/lhash/lh_stats.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/lhash/libcrypto-shlib-lhash.o", "product" => "libcrypto", "srcs" => [ "crypto/lhash/lhash.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/libcrypto-shlib-asn1_dsa.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1_dsa.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/libcrypto-shlib-bsearch.o", "product" => "libcrypto", "srcs" => [ "crypto/bsearch.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/libcrypto-shlib-context.o", "product" => "libcrypto", "srcs" => [ "crypto/context.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/libcrypto-shlib-core_algorithm.o", "product" => "libcrypto", "srcs" => [ "crypto/core_algorithm.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/libcrypto-shlib-core_fetch.o", "product" => "libcrypto", "srcs" => [ "crypto/core_fetch.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/libcrypto-shlib-core_namemap.o", "product" => "libcrypto", "srcs" => [ "crypto/core_namemap.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/libcrypto-shlib-cpt_err.o", "product" => "libcrypto", "srcs" => [ "crypto/cpt_err.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/libcrypto-shlib-cpuid.o", "product" => "libcrypto", "srcs" => [ "crypto/cpuid.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/libcrypto-shlib-cryptlib.o", "product" => "libcrypto", "srcs" => [ "crypto/cryptlib.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/libcrypto-shlib-ctype.o", "product" => "libcrypto", "srcs" => [ "crypto/ctype.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [ "crypto/buildinf.h" ], "incs" => [ "crypto", ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/libcrypto-shlib-cversion.o", "product" => "libcrypto", "srcs" => [ "crypto/cversion.c" ] ); 
-}{-
 generatesrc( "attrs" => {}, "defs" => [], "deps" => [], "generator" => [ "util/mkbuildinf.pl", "\"\$(filter-out", "-I%", "-iremap%", "-fmacro-prefix-map%", "-ffile-prefix-map%,\$(CC)", "\$(LIB_CFLAGS)", "\$(CPPFLAGS_Q))\"", "\"\$(PLATFORM)\"" ], "generator_deps" => [], "generator_incs" => [], "incs" => [ "crypto", ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "product" => "libcrypto", "src" => "crypto/buildinf.h" ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/libcrypto-shlib-der_writer.o", "product" => "libcrypto", "srcs" => [ "crypto/der_writer.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/libcrypto-shlib-ebcdic.o", "product" => "libcrypto", "srcs" => [ "crypto/ebcdic.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/libcrypto-shlib-ex_data.o", "product" => "libcrypto", "srcs" => [ "crypto/ex_data.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/libcrypto-shlib-getenv.o", "product" => "libcrypto", "srcs" => [ "crypto/getenv.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [ "crypto/buildinf.h" ], "incs" => [ "crypto", ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/libcrypto-shlib-info.o", "product" => "libcrypto", "srcs" => [ "crypto/info.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/libcrypto-shlib-init.o", "product" => "libcrypto", "srcs" => [ "crypto/init.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/libcrypto-shlib-initthread.o", "product" => "libcrypto", "srcs" => [ "crypto/initthread.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/libcrypto-shlib-mem.o", "product" => "libcrypto", "srcs" => [ "crypto/mem.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/libcrypto-shlib-mem_clr.o", "product" => "libcrypto", "srcs" => [ "crypto/mem_clr.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/libcrypto-shlib-mem_sec.o", "product" => "libcrypto", "srcs" => [ "crypto/mem_sec.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/libcrypto-shlib-o_dir.o", "product" => "libcrypto", "srcs" => [ "crypto/o_dir.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/libcrypto-shlib-o_fopen.o", "product" => "libcrypto", "srcs" => [ "crypto/o_fopen.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/libcrypto-shlib-o_init.o", "product" => "libcrypto", "srcs" => [ "crypto/o_init.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/libcrypto-shlib-o_str.o", "product" => "libcrypto", "srcs" => [ "crypto/o_str.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/libcrypto-shlib-o_time.o", "product" => "libcrypto", "srcs" => [ "crypto/o_time.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/libcrypto-shlib-packet.o", "product" => "libcrypto", "srcs" => [ "crypto/packet.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/libcrypto-shlib-param_build.o", "product" => "libcrypto", "srcs" => [ "crypto/param_build.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/libcrypto-shlib-param_build_set.o", "product" => "libcrypto", "srcs" => [ "crypto/param_build_set.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/libcrypto-shlib-params.o", "product" => "libcrypto", "srcs" => [ "crypto/params.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/libcrypto-shlib-params_dup.o", "product" => "libcrypto", "srcs" => [ "crypto/params_dup.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/libcrypto-shlib-params_from_text.o", "product" => "libcrypto", "srcs" => [ "crypto/params_from_text.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/libcrypto-shlib-passphrase.o", "product" => "libcrypto", "srcs" => [ "crypto/passphrase.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/libcrypto-shlib-provider.o", "product" => "libcrypto", "srcs" => [ "crypto/provider.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/libcrypto-shlib-provider_child.o", "product" => "libcrypto", "srcs" => [ "crypto/provider_child.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/libcrypto-shlib-provider_conf.o", "product" => "libcrypto", "srcs" => [ "crypto/provider_conf.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/libcrypto-shlib-provider_core.o", "product" => "libcrypto", "srcs" => [ "crypto/provider_core.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/libcrypto-shlib-provider_predefined.o", "product" => "libcrypto", "srcs" => [ "crypto/provider_predefined.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/libcrypto-shlib-punycode.o", "product" => "libcrypto", "srcs" => [ "crypto/punycode.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/libcrypto-shlib-self_test_core.o", "product" => "libcrypto", "srcs" => [ "crypto/self_test_core.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/libcrypto-shlib-sparse_array.o", "product" => "libcrypto", "srcs" => [ "crypto/sparse_array.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/libcrypto-shlib-threads_lib.o", "product" => "libcrypto", "srcs" => [ "crypto/threads_lib.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/libcrypto-shlib-threads_none.o", "product" => "libcrypto", "srcs" => [ "crypto/threads_none.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/libcrypto-shlib-threads_pthread.o", "product" => "libcrypto", "srcs" => [ "crypto/threads_pthread.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/libcrypto-shlib-threads_win.o", "product" => "libcrypto", "srcs" => [ "crypto/threads_win.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/libcrypto-shlib-trace.o", "product" => "libcrypto", "srcs" => [ "crypto/trace.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/libcrypto-shlib-uid.o", "product" => "libcrypto", "srcs" => [ "crypto/uid.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/md4/libcrypto-shlib-md4_dgst.o", "product" => "libcrypto", "srcs" => [ "crypto/md4/md4_dgst.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/md4/libcrypto-shlib-md4_one.o", "product" => "libcrypto", "srcs" => [ "crypto/md4/md4_one.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/md5/libcrypto-shlib-md5_dgst.o", "product" => "libcrypto", "srcs" => [ "crypto/md5/md5_dgst.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/md5/libcrypto-shlib-md5_one.o", "product" => "libcrypto", "srcs" => [ "crypto/md5/md5_one.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/md5/libcrypto-shlib-md5_sha1.o", "product" => "libcrypto", "srcs" => [ "crypto/md5/md5_sha1.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/modes/libcrypto-shlib-cbc128.o", "product" => "libcrypto", "srcs" => [ "crypto/modes/cbc128.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/modes/libcrypto-shlib-ccm128.o", "product" => "libcrypto", "srcs" => [ "crypto/modes/ccm128.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/modes/libcrypto-shlib-cfb128.o", "product" => "libcrypto", "srcs" => [ "crypto/modes/cfb128.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/modes/libcrypto-shlib-ctr128.o", "product" => "libcrypto", "srcs" => [ "crypto/modes/ctr128.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/modes/libcrypto-shlib-cts128.o", "product" => "libcrypto", "srcs" => [ "crypto/modes/cts128.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ "crypto", ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/modes/libcrypto-shlib-gcm128.o", "product" => "libcrypto", "srcs" => [ "crypto/modes/gcm128.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/modes/libcrypto-shlib-ocb128.o", "product" => "libcrypto", "srcs" => [ "crypto/modes/ocb128.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/modes/libcrypto-shlib-ofb128.o", "product" => "libcrypto", "srcs" => [ "crypto/modes/ofb128.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/modes/libcrypto-shlib-siv128.o", "product" => "libcrypto", "srcs" => [ "crypto/modes/siv128.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/modes/libcrypto-shlib-wrap128.o", "product" => "libcrypto", "srcs" => [ "crypto/modes/wrap128.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/modes/libcrypto-shlib-xts128.o", "product" => "libcrypto", "srcs" => [ "crypto/modes/xts128.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/objects/libcrypto-shlib-o_names.o", "product" => "libcrypto", "srcs" => [ "crypto/objects/o_names.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/objects/libcrypto-shlib-obj_dat.o", "product" => "libcrypto", "srcs" => [ "crypto/objects/obj_dat.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/objects/libcrypto-shlib-obj_err.o", "product" => "libcrypto", "srcs" => [ "crypto/objects/obj_err.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/objects/libcrypto-shlib-obj_lib.o", "product" => "libcrypto", "srcs" => [ "crypto/objects/obj_lib.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/objects/libcrypto-shlib-obj_xref.o", "product" => "libcrypto", "srcs" => [ "crypto/objects/obj_xref.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/ocsp/libcrypto-shlib-ocsp_asn.o", "product" => "libcrypto", "srcs" => [ "crypto/ocsp/ocsp_asn.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/ocsp/libcrypto-shlib-ocsp_cl.o", "product" => "libcrypto", "srcs" => [ "crypto/ocsp/ocsp_cl.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/ocsp/libcrypto-shlib-ocsp_err.o", "product" => "libcrypto", "srcs" => [ "crypto/ocsp/ocsp_err.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/ocsp/libcrypto-shlib-ocsp_ext.o", "product" => "libcrypto", "srcs" => [ "crypto/ocsp/ocsp_ext.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/ocsp/libcrypto-shlib-ocsp_http.o", "product" => "libcrypto", "srcs" => [ "crypto/ocsp/ocsp_http.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/ocsp/libcrypto-shlib-ocsp_lib.o", "product" => "libcrypto", "srcs" => [ "crypto/ocsp/ocsp_lib.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/ocsp/libcrypto-shlib-ocsp_prn.o", "product" => "libcrypto", "srcs" => [ "crypto/ocsp/ocsp_prn.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/ocsp/libcrypto-shlib-ocsp_srv.o", "product" => "libcrypto", "srcs" => [ "crypto/ocsp/ocsp_srv.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/ocsp/libcrypto-shlib-ocsp_vfy.o", "product" => "libcrypto", "srcs" => [ "crypto/ocsp/ocsp_vfy.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/ocsp/libcrypto-shlib-v3_ocsp.o", "product" => "libcrypto", "srcs" => [ "crypto/ocsp/v3_ocsp.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/pem/libcrypto-shlib-pem_all.o", "product" => "libcrypto", "srcs" => [ "crypto/pem/pem_all.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/pem/libcrypto-shlib-pem_err.o", "product" => "libcrypto", "srcs" => [ "crypto/pem/pem_err.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/pem/libcrypto-shlib-pem_info.o", "product" => "libcrypto", "srcs" => [ "crypto/pem/pem_info.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/pem/libcrypto-shlib-pem_lib.o", "product" => "libcrypto", "srcs" => [ "crypto/pem/pem_lib.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/pem/libcrypto-shlib-pem_oth.o", "product" => "libcrypto", "srcs" => [ "crypto/pem/pem_oth.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/pem/libcrypto-shlib-pem_pk8.o", "product" => "libcrypto", "srcs" => [ "crypto/pem/pem_pk8.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/pem/libcrypto-shlib-pem_pkey.o", "product" => "libcrypto", "srcs" => [ "crypto/pem/pem_pkey.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/pem/libcrypto-shlib-pem_sign.o", "product" => "libcrypto", "srcs" => [ "crypto/pem/pem_sign.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/pem/libcrypto-shlib-pem_x509.o", "product" => "libcrypto", "srcs" => [ "crypto/pem/pem_x509.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/pem/libcrypto-shlib-pem_xaux.o", "product" => "libcrypto", "srcs" => [ "crypto/pem/pem_xaux.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/pem/libcrypto-shlib-pvkfmt.o", "product" => "libcrypto", "srcs" => [ "crypto/pem/pvkfmt.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/pkcs12/libcrypto-shlib-p12_add.o", "product" => "libcrypto", "srcs" => [ "crypto/pkcs12/p12_add.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/pkcs12/libcrypto-shlib-p12_asn.o", "product" => "libcrypto", "srcs" => [ "crypto/pkcs12/p12_asn.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/pkcs12/libcrypto-shlib-p12_attr.o", "product" => "libcrypto", "srcs" => [ "crypto/pkcs12/p12_attr.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/pkcs12/libcrypto-shlib-p12_crpt.o", "product" => "libcrypto", "srcs" => [ "crypto/pkcs12/p12_crpt.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/pkcs12/libcrypto-shlib-p12_crt.o", "product" => "libcrypto", "srcs" => [ "crypto/pkcs12/p12_crt.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/pkcs12/libcrypto-shlib-p12_decr.o", "product" => "libcrypto", "srcs" => [ "crypto/pkcs12/p12_decr.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/pkcs12/libcrypto-shlib-p12_init.o", "product" => "libcrypto", "srcs" => [ "crypto/pkcs12/p12_init.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/pkcs12/libcrypto-shlib-p12_key.o", "product" => "libcrypto", "srcs" => [ "crypto/pkcs12/p12_key.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/pkcs12/libcrypto-shlib-p12_kiss.o", "product" => "libcrypto", "srcs" => [ "crypto/pkcs12/p12_kiss.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/pkcs12/libcrypto-shlib-p12_mutl.o", "product" => "libcrypto", "srcs" => [ "crypto/pkcs12/p12_mutl.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/pkcs12/libcrypto-shlib-p12_npas.o", "product" => "libcrypto", "srcs" => [ "crypto/pkcs12/p12_npas.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/pkcs12/libcrypto-shlib-p12_p8d.o", "product" => "libcrypto", "srcs" => [ "crypto/pkcs12/p12_p8d.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/pkcs12/libcrypto-shlib-p12_p8e.o", "product" => "libcrypto", "srcs" => [ "crypto/pkcs12/p12_p8e.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/pkcs12/libcrypto-shlib-p12_sbag.o", "product" => "libcrypto", "srcs" => [ "crypto/pkcs12/p12_sbag.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/pkcs12/libcrypto-shlib-p12_utl.o", "product" => "libcrypto", "srcs" => [ "crypto/pkcs12/p12_utl.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/pkcs12/libcrypto-shlib-pk12err.o", "product" => "libcrypto", "srcs" => [ "crypto/pkcs12/pk12err.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/pkcs7/libcrypto-shlib-bio_pk7.o", "product" => "libcrypto", "srcs" => [ "crypto/pkcs7/bio_pk7.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/pkcs7/libcrypto-shlib-pk7_asn1.o", "product" => "libcrypto", "srcs" => [ "crypto/pkcs7/pk7_asn1.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/pkcs7/libcrypto-shlib-pk7_attr.o", "product" => "libcrypto", "srcs" => [ "crypto/pkcs7/pk7_attr.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/pkcs7/libcrypto-shlib-pk7_doit.o", "product" => "libcrypto", "srcs" => [ "crypto/pkcs7/pk7_doit.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/pkcs7/libcrypto-shlib-pk7_lib.o", "product" => "libcrypto", "srcs" => [ "crypto/pkcs7/pk7_lib.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/pkcs7/libcrypto-shlib-pk7_mime.o", "product" => "libcrypto", "srcs" => [ "crypto/pkcs7/pk7_mime.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/pkcs7/libcrypto-shlib-pk7_smime.o", "product" => "libcrypto", "srcs" => [ "crypto/pkcs7/pk7_smime.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/pkcs7/libcrypto-shlib-pkcs7err.o", "product" => "libcrypto", "srcs" => [ "crypto/pkcs7/pkcs7err.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/property/libcrypto-shlib-defn_cache.o", "product" => "libcrypto", "srcs" => [ "crypto/property/defn_cache.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/property/libcrypto-shlib-property.o", "product" => "libcrypto", "srcs" => [ "crypto/property/property.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/property/libcrypto-shlib-property_err.o", "product" => "libcrypto", "srcs" => [ "crypto/property/property_err.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/property/libcrypto-shlib-property_parse.o", "product" => "libcrypto", "srcs" => [ "crypto/property/property_parse.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/property/libcrypto-shlib-property_query.o", "product" => "libcrypto", "srcs" => [ "crypto/property/property_query.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/property/libcrypto-shlib-property_string.o", "product" => "libcrypto", "srcs" => [ "crypto/property/property_string.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/rand/libcrypto-shlib-prov_seed.o", "product" => "libcrypto", "srcs" => [ "crypto/rand/prov_seed.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/rand/libcrypto-shlib-rand_deprecated.o", "product" => "libcrypto", "srcs" => [ "crypto/rand/rand_deprecated.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/rand/libcrypto-shlib-rand_err.o", "product" => "libcrypto", "srcs" => [ "crypto/rand/rand_err.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/rand/libcrypto-shlib-rand_lib.o", "product" => "libcrypto", "srcs" => [ "crypto/rand/rand_lib.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/rand/libcrypto-shlib-rand_meth.o", "product" => "libcrypto", "srcs" => [ "crypto/rand/rand_meth.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/rand/libcrypto-shlib-rand_pool.o", "product" => "libcrypto", "srcs" => [ "crypto/rand/rand_pool.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/rand/libcrypto-shlib-randfile.o", "product" => "libcrypto", "srcs" => [ "crypto/rand/randfile.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/rc2/libcrypto-shlib-rc2_cbc.o", "product" => "libcrypto", "srcs" => [ "crypto/rc2/rc2_cbc.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/rc2/libcrypto-shlib-rc2_ecb.o", "product" => "libcrypto", "srcs" => [ "crypto/rc2/rc2_ecb.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/rc2/libcrypto-shlib-rc2_skey.o", "product" => "libcrypto", "srcs" => [ "crypto/rc2/rc2_skey.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/rc2/libcrypto-shlib-rc2cfb64.o", "product" => "libcrypto", "srcs" => [ "crypto/rc2/rc2cfb64.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/rc2/libcrypto-shlib-rc2ofb64.o", "product" => "libcrypto", "srcs" => [ "crypto/rc2/rc2ofb64.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/rc4/libcrypto-shlib-rc4_enc.o", "product" => "libcrypto", "srcs" => [ "crypto/rc4/rc4_enc.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/rc4/libcrypto-shlib-rc4_skey.o", "product" => "libcrypto", "srcs" => [ "crypto/rc4/rc4_skey.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/ripemd/libcrypto-shlib-rmd_dgst.o", "product" => "libcrypto", "srcs" => [ "crypto/ripemd/rmd_dgst.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/ripemd/libcrypto-shlib-rmd_one.o", "product" => "libcrypto", "srcs" => [ "crypto/ripemd/rmd_one.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/rsa/libcrypto-shlib-rsa_ameth.o", "product" => "libcrypto", "srcs" => [ "crypto/rsa/rsa_ameth.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/rsa/libcrypto-shlib-rsa_asn1.o", "product" => "libcrypto", "srcs" => [ "crypto/rsa/rsa_asn1.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/rsa/libcrypto-shlib-rsa_backend.o", "product" => "libcrypto", "srcs" => [ "crypto/rsa/rsa_backend.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/rsa/libcrypto-shlib-rsa_chk.o", "product" => "libcrypto", "srcs" => [ "crypto/rsa/rsa_chk.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/rsa/libcrypto-shlib-rsa_crpt.o", "product" => "libcrypto", "srcs" => [ "crypto/rsa/rsa_crpt.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/rsa/libcrypto-shlib-rsa_depr.o", "product" => "libcrypto", "srcs" => [ "crypto/rsa/rsa_depr.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/rsa/libcrypto-shlib-rsa_err.o", "product" => "libcrypto", "srcs" => [ "crypto/rsa/rsa_err.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/rsa/libcrypto-shlib-rsa_gen.o", "product" => "libcrypto", "srcs" => [ "crypto/rsa/rsa_gen.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/rsa/libcrypto-shlib-rsa_lib.o", "product" => "libcrypto", "srcs" => [ "crypto/rsa/rsa_lib.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/rsa/libcrypto-shlib-rsa_meth.o", "product" => "libcrypto", "srcs" => [ "crypto/rsa/rsa_meth.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/rsa/libcrypto-shlib-rsa_mp.o", "product" => "libcrypto", "srcs" => [ "crypto/rsa/rsa_mp.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/rsa/libcrypto-shlib-rsa_mp_names.o", "product" => "libcrypto", "srcs" => [ "crypto/rsa/rsa_mp_names.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/rsa/libcrypto-shlib-rsa_none.o", "product" => "libcrypto", "srcs" => [ "crypto/rsa/rsa_none.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/rsa/libcrypto-shlib-rsa_oaep.o", "product" => "libcrypto", "srcs" => [ "crypto/rsa/rsa_oaep.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/rsa/libcrypto-shlib-rsa_ossl.o", "product" => "libcrypto", "srcs" => [ "crypto/rsa/rsa_ossl.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/rsa/libcrypto-shlib-rsa_pk1.o", "product" => "libcrypto", "srcs" => [ "crypto/rsa/rsa_pk1.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/rsa/libcrypto-shlib-rsa_pmeth.o", "product" => "libcrypto", "srcs" => [ "crypto/rsa/rsa_pmeth.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/rsa/libcrypto-shlib-rsa_prn.o", "product" => "libcrypto", "srcs" => [ "crypto/rsa/rsa_prn.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/rsa/libcrypto-shlib-rsa_pss.o", "product" => "libcrypto", "srcs" => [ "crypto/rsa/rsa_pss.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/rsa/libcrypto-shlib-rsa_saos.o", "product" => "libcrypto", "srcs" => [ "crypto/rsa/rsa_saos.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/rsa/libcrypto-shlib-rsa_schemes.o", "product" => "libcrypto", "srcs" => [ "crypto/rsa/rsa_schemes.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/rsa/libcrypto-shlib-rsa_sign.o", "product" => "libcrypto", "srcs" => [ "crypto/rsa/rsa_sign.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/rsa/libcrypto-shlib-rsa_sp800_56b_check.o", "product" => "libcrypto", "srcs" => [ "crypto/rsa/rsa_sp800_56b_check.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/rsa/libcrypto-shlib-rsa_sp800_56b_gen.o", "product" => "libcrypto", "srcs" => [ "crypto/rsa/rsa_sp800_56b_gen.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/rsa/libcrypto-shlib-rsa_x931.o", "product" => "libcrypto", "srcs" => [ "crypto/rsa/rsa_x931.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/rsa/libcrypto-shlib-rsa_x931g.o", "product" => "libcrypto", "srcs" => [ "crypto/rsa/rsa_x931g.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/sha/libcrypto-shlib-keccak1600.o", "product" => "libcrypto", "srcs" => [ "crypto/sha/keccak1600.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/sha/libcrypto-shlib-sha1_one.o", "product" => "libcrypto", "srcs" => [ "crypto/sha/sha1_one.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/sha/libcrypto-shlib-sha1dgst.o", "product" => "libcrypto", "srcs" => [ "crypto/sha/sha1dgst.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/sha/libcrypto-shlib-sha256.o", "product" => "libcrypto", "srcs" => [ "crypto/sha/sha256.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/sha/libcrypto-shlib-sha3.o", "product" => "libcrypto", "srcs" => [ "crypto/sha/sha3.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/sha/libcrypto-shlib-sha512.o", "product" => "libcrypto", "srcs" => [ "crypto/sha/sha512.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/siphash/libcrypto-shlib-siphash.o", "product" => "libcrypto", "srcs" => [ "crypto/siphash/siphash.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/stack/libcrypto-shlib-stack.o", "product" => "libcrypto", "srcs" => [ "crypto/stack/stack.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/store/libcrypto-shlib-store_err.o", "product" => "libcrypto", "srcs" => [ "crypto/store/store_err.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/store/libcrypto-shlib-store_init.o", "product" => "libcrypto", "srcs" => [ "crypto/store/store_init.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/store/libcrypto-shlib-store_lib.o", "product" => "libcrypto", "srcs" => [ "crypto/store/store_lib.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/store/libcrypto-shlib-store_meth.o", "product" => "libcrypto", "srcs" => [ "crypto/store/store_meth.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/store/libcrypto-shlib-store_register.o", "product" => "libcrypto", "srcs" => [ "crypto/store/store_register.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/store/libcrypto-shlib-store_result.o", "product" => "libcrypto", "srcs" => [ "crypto/store/store_result.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/store/libcrypto-shlib-store_strings.o", "product" => "libcrypto", "srcs" => [ "crypto/store/store_strings.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/ts/libcrypto-shlib-ts_asn1.o", "product" => "libcrypto", "srcs" => [ "crypto/ts/ts_asn1.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/ts/libcrypto-shlib-ts_conf.o", "product" => "libcrypto", "srcs" => [ "crypto/ts/ts_conf.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/ts/libcrypto-shlib-ts_err.o", "product" => "libcrypto", "srcs" => [ "crypto/ts/ts_err.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/ts/libcrypto-shlib-ts_lib.o", "product" => "libcrypto", "srcs" => [ "crypto/ts/ts_lib.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/ts/libcrypto-shlib-ts_req_print.o", "product" => "libcrypto", "srcs" => [ "crypto/ts/ts_req_print.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/ts/libcrypto-shlib-ts_req_utils.o", "product" => "libcrypto", "srcs" => [ "crypto/ts/ts_req_utils.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/ts/libcrypto-shlib-ts_rsp_print.o", "product" => "libcrypto", "srcs" => [ "crypto/ts/ts_rsp_print.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/ts/libcrypto-shlib-ts_rsp_sign.o", "product" => "libcrypto", "srcs" => [ "crypto/ts/ts_rsp_sign.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/ts/libcrypto-shlib-ts_rsp_utils.o", "product" => "libcrypto", "srcs" => [ "crypto/ts/ts_rsp_utils.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/ts/libcrypto-shlib-ts_rsp_verify.o", "product" => "libcrypto", "srcs" => [ "crypto/ts/ts_rsp_verify.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/ts/libcrypto-shlib-ts_verify_ctx.o", "product" => "libcrypto", "srcs" => [ "crypto/ts/ts_verify_ctx.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/txt_db/libcrypto-shlib-txt_db.o", "product" => "libcrypto", "srcs" => [ "crypto/txt_db/txt_db.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/ui/libcrypto-shlib-ui_err.o", "product" => "libcrypto", "srcs" => [ "crypto/ui/ui_err.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/ui/libcrypto-shlib-ui_lib.o", "product" => "libcrypto", "srcs" => [ "crypto/ui/ui_lib.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/ui/libcrypto-shlib-ui_null.o", "product" => "libcrypto", "srcs" => [ "crypto/ui/ui_null.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/ui/libcrypto-shlib-ui_openssl.o", "product" => "libcrypto", "srcs" => [ "crypto/ui/ui_openssl.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/ui/libcrypto-shlib-ui_util.o", "product" => "libcrypto", "srcs" => [ "crypto/ui/ui_util.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/x509/libcrypto-shlib-by_dir.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/by_dir.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/x509/libcrypto-shlib-by_file.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/by_file.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/x509/libcrypto-shlib-by_store.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/by_store.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/x509/libcrypto-shlib-pcy_cache.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/pcy_cache.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/x509/libcrypto-shlib-pcy_data.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/pcy_data.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/x509/libcrypto-shlib-pcy_lib.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/pcy_lib.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/x509/libcrypto-shlib-pcy_map.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/pcy_map.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/x509/libcrypto-shlib-pcy_node.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/pcy_node.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/x509/libcrypto-shlib-pcy_tree.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/pcy_tree.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/x509/libcrypto-shlib-t_crl.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/t_crl.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/x509/libcrypto-shlib-t_req.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/t_req.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/x509/libcrypto-shlib-t_x509.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/t_x509.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/x509/libcrypto-shlib-v3_addr.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/v3_addr.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/x509/libcrypto-shlib-v3_admis.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/v3_admis.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/x509/libcrypto-shlib-v3_akeya.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/v3_akeya.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/x509/libcrypto-shlib-v3_akid.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/v3_akid.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/x509/libcrypto-shlib-v3_asid.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/v3_asid.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/x509/libcrypto-shlib-v3_bcons.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/v3_bcons.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/x509/libcrypto-shlib-v3_bitst.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/v3_bitst.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/x509/libcrypto-shlib-v3_conf.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/v3_conf.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/x509/libcrypto-shlib-v3_cpols.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/v3_cpols.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/x509/libcrypto-shlib-v3_crld.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/v3_crld.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/x509/libcrypto-shlib-v3_enum.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/v3_enum.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/x509/libcrypto-shlib-v3_extku.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/v3_extku.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/x509/libcrypto-shlib-v3_genn.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/v3_genn.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/x509/libcrypto-shlib-v3_ia5.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/v3_ia5.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/x509/libcrypto-shlib-v3_info.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/v3_info.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/x509/libcrypto-shlib-v3_int.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/v3_int.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/x509/libcrypto-shlib-v3_ist.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/v3_ist.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/x509/libcrypto-shlib-v3_lib.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/v3_lib.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/x509/libcrypto-shlib-v3_ncons.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/v3_ncons.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/x509/libcrypto-shlib-v3_pci.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/v3_pci.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/x509/libcrypto-shlib-v3_pcia.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/v3_pcia.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/x509/libcrypto-shlib-v3_pcons.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/v3_pcons.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/x509/libcrypto-shlib-v3_pku.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/v3_pku.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/x509/libcrypto-shlib-v3_pmaps.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/v3_pmaps.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/x509/libcrypto-shlib-v3_prn.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/v3_prn.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/x509/libcrypto-shlib-v3_purp.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/v3_purp.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/x509/libcrypto-shlib-v3_san.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/v3_san.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/x509/libcrypto-shlib-v3_skid.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/v3_skid.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/x509/libcrypto-shlib-v3_sxnet.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/v3_sxnet.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/x509/libcrypto-shlib-v3_tlsf.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/v3_tlsf.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/x509/libcrypto-shlib-v3_utf8.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/v3_utf8.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/x509/libcrypto-shlib-v3_utl.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/v3_utl.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/x509/libcrypto-shlib-v3err.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/v3err.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/x509/libcrypto-shlib-x509_att.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/x509_att.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/x509/libcrypto-shlib-x509_cmp.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/x509_cmp.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/x509/libcrypto-shlib-x509_d2.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/x509_d2.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/x509/libcrypto-shlib-x509_def.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/x509_def.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/x509/libcrypto-shlib-x509_err.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/x509_err.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/x509/libcrypto-shlib-x509_ext.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/x509_ext.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/x509/libcrypto-shlib-x509_lu.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/x509_lu.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/x509/libcrypto-shlib-x509_meth.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/x509_meth.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/x509/libcrypto-shlib-x509_obj.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/x509_obj.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/x509/libcrypto-shlib-x509_r2x.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/x509_r2x.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/x509/libcrypto-shlib-x509_req.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/x509_req.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/x509/libcrypto-shlib-x509_set.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/x509_set.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/x509/libcrypto-shlib-x509_trust.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/x509_trust.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/x509/libcrypto-shlib-x509_txt.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/x509_txt.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/x509/libcrypto-shlib-x509_v3.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/x509_v3.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/x509/libcrypto-shlib-x509_vfy.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/x509_vfy.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/x509/libcrypto-shlib-x509_vpm.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/x509_vpm.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/x509/libcrypto-shlib-x509cset.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/x509cset.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/x509/libcrypto-shlib-x509name.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/x509name.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/x509/libcrypto-shlib-x509rset.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/x509rset.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/x509/libcrypto-shlib-x509spki.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/x509spki.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/x509/libcrypto-shlib-x509type.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/x509type.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/x509/libcrypto-shlib-x_all.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/x_all.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/x509/libcrypto-shlib-x_attrib.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/x_attrib.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/x509/libcrypto-shlib-x_crl.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/x_crl.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/x509/libcrypto-shlib-x_exten.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/x_exten.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/x509/libcrypto-shlib-x_name.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/x_name.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/x509/libcrypto-shlib-x_pubkey.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/x_pubkey.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/x509/libcrypto-shlib-x_req.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/x_req.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/x509/libcrypto-shlib-x_x509.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/x_x509.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "crypto/x509/libcrypto-shlib-x_x509a.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/x_x509a.c" ] ); 
-}{-
 generatesrc( "attrs" => {}, "defs" => [], "deps" => [ "configdata.pm", "util/perl/OpenSSL/Ordinals.pm" ], "generator" => [ "util/libcrypto.num", "libcrypto" ], "generator_deps" => [], "generator_incs" => [], "incs" => [], "intent" => "lib", "product" => undef, "src" => "libcrypto.ld" ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "providers/libcrypto-shlib-baseprov.o", "product" => "libcrypto", "srcs" => [ "providers/baseprov.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "providers/libcrypto-shlib-defltprov.o", "product" => "libcrypto", "srcs" => [ "providers/defltprov.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "providers/libcrypto-shlib-nullprov.o", "product" => "libcrypto", "srcs" => [ "providers/nullprov.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "shlib", "obj" => "providers/libcrypto-shlib-prov_running.o", "product" => "libcrypto", "srcs" => [ "providers/prov_running.c" ] ); 
-}{-
 obj2lib( "attrs" => {}, "lib" => "libcrypto", "objs" => [ "crypto/aes/libcrypto-lib-aes_cbc.o", "crypto/aes/libcrypto-lib-aes_cfb.o", "crypto/aes/libcrypto-lib-aes_core.o", "crypto/aes/libcrypto-lib-aes_ecb.o", "crypto/aes/libcrypto-lib-aes_ige.o", "crypto/aes/libcrypto-lib-aes_misc.o", "crypto/aes/libcrypto-lib-aes_ofb.o", "crypto/aes/libcrypto-lib-aes_wrap.o", "crypto/asn1/libcrypto-lib-a_bitstr.o", "crypto/asn1/libcrypto-lib-a_d2i_fp.o", "crypto/asn1/libcrypto-lib-a_digest.o", "crypto/asn1/libcrypto-lib-a_dup.o", "crypto/asn1/libcrypto-lib-a_gentm.o", "crypto/asn1/libcrypto-lib-a_i2d_fp.o", "crypto/asn1/libcrypto-lib-a_int.o", "crypto/asn1/libcrypto-lib-a_mbstr.o", "crypto/asn1/libcrypto-lib-a_object.o", "crypto/asn1/libcrypto-lib-a_octet.o", "crypto/asn1/libcrypto-lib-a_print.o", "crypto/asn1/libcrypto-lib-a_sign.o", "crypto/asn1/libcrypto-lib-a_strex.o", "crypto/asn1/libcrypto-lib-a_strnid.o", "crypto/asn1/libcrypto-lib-a_time.o", "crypto/asn1/libcrypto-lib-a_type.o", "crypto/asn1/libcrypto-lib-a_utctm.o", "crypto/asn1/libcrypto-lib-a_utf8.o", "crypto/asn1/libcrypto-lib-a_verify.o", "crypto/asn1/libcrypto-lib-ameth_lib.o", "crypto/asn1/libcrypto-lib-asn1_err.o", "crypto/asn1/libcrypto-lib-asn1_gen.o", "crypto/asn1/libcrypto-lib-asn1_item_list.o", "crypto/asn1/libcrypto-lib-asn1_lib.o", "crypto/asn1/libcrypto-lib-asn1_parse.o", "crypto/asn1/libcrypto-lib-asn_mime.o", "crypto/asn1/libcrypto-lib-asn_moid.o", "crypto/asn1/libcrypto-lib-asn_mstbl.o", "crypto/asn1/libcrypto-lib-asn_pack.o", "crypto/asn1/libcrypto-lib-bio_asn1.o", "crypto/asn1/libcrypto-lib-bio_ndef.o", "crypto/asn1/libcrypto-lib-d2i_param.o", "crypto/asn1/libcrypto-lib-d2i_pr.o", "crypto/asn1/libcrypto-lib-d2i_pu.o", "crypto/asn1/libcrypto-lib-evp_asn1.o", "crypto/asn1/libcrypto-lib-f_int.o", "crypto/asn1/libcrypto-lib-f_string.o", "crypto/asn1/libcrypto-lib-i2d_evp.o", "crypto/asn1/libcrypto-lib-n_pkey.o", "crypto/asn1/libcrypto-lib-nsseq.o", "crypto/asn1/libcrypto-lib-p5_pbe.o", "crypto/asn1/libcrypto-lib-p5_pbev2.o", "crypto/asn1/libcrypto-lib-p5_scrypt.o", "crypto/asn1/libcrypto-lib-p8_pkey.o", "crypto/asn1/libcrypto-lib-t_bitst.o", "crypto/asn1/libcrypto-lib-t_pkey.o", "crypto/asn1/libcrypto-lib-t_spki.o", "crypto/asn1/libcrypto-lib-tasn_dec.o", "crypto/asn1/libcrypto-lib-tasn_enc.o", "crypto/asn1/libcrypto-lib-tasn_fre.o", "crypto/asn1/libcrypto-lib-tasn_new.o", "crypto/asn1/libcrypto-lib-tasn_prn.o", "crypto/asn1/libcrypto-lib-tasn_scn.o", "crypto/asn1/libcrypto-lib-tasn_typ.o", "crypto/asn1/libcrypto-lib-tasn_utl.o", "crypto/asn1/libcrypto-lib-x_algor.o", "crypto/asn1/libcrypto-lib-x_bignum.o", "crypto/asn1/libcrypto-lib-x_info.o", "crypto/asn1/libcrypto-lib-x_int64.o", "crypto/asn1/libcrypto-lib-x_long.o", "crypto/asn1/libcrypto-lib-x_pkey.o", "crypto/asn1/libcrypto-lib-x_sig.o", "crypto/asn1/libcrypto-lib-x_spki.o", "crypto/asn1/libcrypto-lib-x_val.o", "crypto/async/arch/libcrypto-lib-async_null.o", "crypto/async/arch/libcrypto-lib-async_posix.o", "crypto/async/arch/libcrypto-lib-async_win.o", "crypto/async/libcrypto-lib-async.o", "crypto/async/libcrypto-lib-async_err.o", "crypto/async/libcrypto-lib-async_wait.o", "crypto/bf/libcrypto-lib-bf_cfb64.o", "crypto/bf/libcrypto-lib-bf_ecb.o", "crypto/bf/libcrypto-lib-bf_enc.o", "crypto/bf/libcrypto-lib-bf_ofb64.o", "crypto/bf/libcrypto-lib-bf_skey.o", "crypto/bio/libcrypto-lib-bf_buff.o", "crypto/bio/libcrypto-lib-bf_lbuf.o", "crypto/bio/libcrypto-lib-bf_nbio.o", "crypto/bio/libcrypto-lib-bf_null.o", "crypto/bio/libcrypto-lib-bf_prefix.o", "crypto/bio/libcrypto-lib-bf_readbuff.o", "crypto/bio/libcrypto-lib-bio_addr.o", "crypto/bio/libcrypto-lib-bio_cb.o", "crypto/bio/libcrypto-lib-bio_dump.o", "crypto/bio/libcrypto-lib-bio_err.o", "crypto/bio/libcrypto-lib-bio_lib.o", "crypto/bio/libcrypto-lib-bio_meth.o", "crypto/bio/libcrypto-lib-bio_print.o", "crypto/bio/libcrypto-lib-bio_sock.o", "crypto/bio/libcrypto-lib-bio_sock2.o", "crypto/bio/libcrypto-lib-bss_acpt.o", "crypto/bio/libcrypto-lib-bss_bio.o", "crypto/bio/libcrypto-lib-bss_conn.o", "crypto/bio/libcrypto-lib-bss_core.o", "crypto/bio/libcrypto-lib-bss_dgram.o", "crypto/bio/libcrypto-lib-bss_fd.o", "crypto/bio/libcrypto-lib-bss_file.o", "crypto/bio/libcrypto-lib-bss_log.o", "crypto/bio/libcrypto-lib-bss_mem.o", "crypto/bio/libcrypto-lib-bss_null.o", "crypto/bio/libcrypto-lib-bss_sock.o", "crypto/bio/libcrypto-lib-ossl_core_bio.o", "crypto/bn/libcrypto-lib-bn_add.o", "crypto/bn/libcrypto-lib-bn_asm.o", "crypto/bn/libcrypto-lib-bn_blind.o", "crypto/bn/libcrypto-lib-bn_const.o", "crypto/bn/libcrypto-lib-bn_conv.o", "crypto/bn/libcrypto-lib-bn_ctx.o", "crypto/bn/libcrypto-lib-bn_depr.o", "crypto/bn/libcrypto-lib-bn_dh.o", "crypto/bn/libcrypto-lib-bn_div.o", "crypto/bn/libcrypto-lib-bn_err.o", "crypto/bn/libcrypto-lib-bn_exp.o", "crypto/bn/libcrypto-lib-bn_exp2.o", "crypto/bn/libcrypto-lib-bn_gcd.o", "crypto/bn/libcrypto-lib-bn_gf2m.o", "crypto/bn/libcrypto-lib-bn_intern.o", "crypto/bn/libcrypto-lib-bn_kron.o", "crypto/bn/libcrypto-lib-bn_lib.o", "crypto/bn/libcrypto-lib-bn_mod.o", "crypto/bn/libcrypto-lib-bn_mont.o", "crypto/bn/libcrypto-lib-bn_mpi.o", "crypto/bn/libcrypto-lib-bn_mul.o", "crypto/bn/libcrypto-lib-bn_nist.o", "crypto/bn/libcrypto-lib-bn_prime.o", "crypto/bn/libcrypto-lib-bn_print.o", "crypto/bn/libcrypto-lib-bn_rand.o", "crypto/bn/libcrypto-lib-bn_recp.o", "crypto/bn/libcrypto-lib-bn_rsa_fips186_4.o", "crypto/bn/libcrypto-lib-bn_shift.o", "crypto/bn/libcrypto-lib-bn_sqr.o", "crypto/bn/libcrypto-lib-bn_sqrt.o", "crypto/bn/libcrypto-lib-bn_srp.o", "crypto/bn/libcrypto-lib-bn_word.o", "crypto/bn/libcrypto-lib-bn_x931p.o", "crypto/buffer/libcrypto-lib-buf_err.o", "crypto/buffer/libcrypto-lib-buffer.o", "crypto/cast/libcrypto-lib-c_cfb64.o", "crypto/cast/libcrypto-lib-c_ecb.o", "crypto/cast/libcrypto-lib-c_enc.o", "crypto/cast/libcrypto-lib-c_ofb64.o", "crypto/cast/libcrypto-lib-c_skey.o", "crypto/cmac/libcrypto-lib-cmac.o", "crypto/cmp/libcrypto-lib-cmp_asn.o", "crypto/cmp/libcrypto-lib-cmp_client.o", "crypto/cmp/libcrypto-lib-cmp_ctx.o", "crypto/cmp/libcrypto-lib-cmp_err.o", "crypto/cmp/libcrypto-lib-cmp_hdr.o", "crypto/cmp/libcrypto-lib-cmp_http.o", "crypto/cmp/libcrypto-lib-cmp_msg.o", "crypto/cmp/libcrypto-lib-cmp_protect.o", "crypto/cmp/libcrypto-lib-cmp_server.o", "crypto/cmp/libcrypto-lib-cmp_status.o", "crypto/cmp/libcrypto-lib-cmp_util.o", "crypto/cmp/libcrypto-lib-cmp_vfy.o", "crypto/conf/libcrypto-lib-conf_api.o", "crypto/conf/libcrypto-lib-conf_def.o", "crypto/conf/libcrypto-lib-conf_err.o", "crypto/conf/libcrypto-lib-conf_lib.o", "crypto/conf/libcrypto-lib-conf_mall.o", "crypto/conf/libcrypto-lib-conf_mod.o", "crypto/conf/libcrypto-lib-conf_sap.o", "crypto/conf/libcrypto-lib-conf_ssl.o", "crypto/crmf/libcrypto-lib-crmf_asn.o", "crypto/crmf/libcrypto-lib-crmf_err.o", "crypto/crmf/libcrypto-lib-crmf_lib.o", "crypto/crmf/libcrypto-lib-crmf_pbm.o", "crypto/ct/libcrypto-lib-ct_b64.o", "crypto/ct/libcrypto-lib-ct_err.o", "crypto/ct/libcrypto-lib-ct_log.o", "crypto/ct/libcrypto-lib-ct_oct.o", "crypto/ct/libcrypto-lib-ct_policy.o", "crypto/ct/libcrypto-lib-ct_prn.o", "crypto/ct/libcrypto-lib-ct_sct.o", "crypto/ct/libcrypto-lib-ct_sct_ctx.o", "crypto/ct/libcrypto-lib-ct_vfy.o", "crypto/ct/libcrypto-lib-ct_x509v3.o", "crypto/des/libcrypto-lib-cbc_cksm.o", "crypto/des/libcrypto-lib-cbc_enc.o", "crypto/des/libcrypto-lib-cfb64ede.o", "crypto/des/libcrypto-lib-cfb64enc.o", "crypto/des/libcrypto-lib-cfb_enc.o", "crypto/des/libcrypto-lib-des_enc.o", "crypto/des/libcrypto-lib-ecb3_enc.o", "crypto/des/libcrypto-lib-ecb_enc.o", "crypto/des/libcrypto-lib-fcrypt.o", "crypto/des/libcrypto-lib-fcrypt_b.o", "crypto/des/libcrypto-lib-ofb64ede.o", "crypto/des/libcrypto-lib-ofb64enc.o", "crypto/des/libcrypto-lib-ofb_enc.o", "crypto/des/libcrypto-lib-pcbc_enc.o", "crypto/des/libcrypto-lib-qud_cksm.o", "crypto/des/libcrypto-lib-rand_key.o", "crypto/des/libcrypto-lib-set_key.o", "crypto/des/libcrypto-lib-str2key.o", "crypto/des/libcrypto-lib-xcbc_enc.o", "crypto/dh/libcrypto-lib-dh_ameth.o", "crypto/dh/libcrypto-lib-dh_asn1.o", "crypto/dh/libcrypto-lib-dh_backend.o", "crypto/dh/libcrypto-lib-dh_check.o", "crypto/dh/libcrypto-lib-dh_depr.o", "crypto/dh/libcrypto-lib-dh_err.o", "crypto/dh/libcrypto-lib-dh_gen.o", "crypto/dh/libcrypto-lib-dh_group_params.o", "crypto/dh/libcrypto-lib-dh_kdf.o", "crypto/dh/libcrypto-lib-dh_key.o", "crypto/dh/libcrypto-lib-dh_lib.o", "crypto/dh/libcrypto-lib-dh_meth.o", "crypto/dh/libcrypto-lib-dh_pmeth.o", "crypto/dh/libcrypto-lib-dh_prn.o", "crypto/dh/libcrypto-lib-dh_rfc5114.o", "crypto/dsa/libcrypto-lib-dsa_ameth.o", "crypto/dsa/libcrypto-lib-dsa_asn1.o", "crypto/dsa/libcrypto-lib-dsa_backend.o", "crypto/dsa/libcrypto-lib-dsa_check.o", "crypto/dsa/libcrypto-lib-dsa_depr.o", "crypto/dsa/libcrypto-lib-dsa_err.o", "crypto/dsa/libcrypto-lib-dsa_gen.o", "crypto/dsa/libcrypto-lib-dsa_key.o", "crypto/dsa/libcrypto-lib-dsa_lib.o", "crypto/dsa/libcrypto-lib-dsa_meth.o", "crypto/dsa/libcrypto-lib-dsa_ossl.o", "crypto/dsa/libcrypto-lib-dsa_pmeth.o", "crypto/dsa/libcrypto-lib-dsa_prn.o", "crypto/dsa/libcrypto-lib-dsa_sign.o", "crypto/dsa/libcrypto-lib-dsa_vrf.o", "crypto/dso/libcrypto-lib-dso_dl.o", "crypto/dso/libcrypto-lib-dso_dlfcn.o", "crypto/dso/libcrypto-lib-dso_err.o", "crypto/dso/libcrypto-lib-dso_lib.o", "crypto/dso/libcrypto-lib-dso_openssl.o", "crypto/dso/libcrypto-lib-dso_vms.o", "crypto/dso/libcrypto-lib-dso_win32.o", "crypto/ec/curve448/arch_32/libcrypto-lib-f_impl32.o", "crypto/ec/curve448/arch_64/libcrypto-lib-f_impl64.o", "crypto/ec/curve448/libcrypto-lib-curve448.o", "crypto/ec/curve448/libcrypto-lib-curve448_tables.o", "crypto/ec/curve448/libcrypto-lib-eddsa.o", "crypto/ec/curve448/libcrypto-lib-f_generic.o", "crypto/ec/curve448/libcrypto-lib-scalar.o", "crypto/ec/libcrypto-lib-curve25519.o", "crypto/ec/libcrypto-lib-ec2_oct.o", "crypto/ec/libcrypto-lib-ec2_smpl.o", "crypto/ec/libcrypto-lib-ec_ameth.o", "crypto/ec/libcrypto-lib-ec_asn1.o", "crypto/ec/libcrypto-lib-ec_backend.o", "crypto/ec/libcrypto-lib-ec_check.o", "crypto/ec/libcrypto-lib-ec_curve.o", "crypto/ec/libcrypto-lib-ec_cvt.o", "crypto/ec/libcrypto-lib-ec_deprecated.o", "crypto/ec/libcrypto-lib-ec_err.o", "crypto/ec/libcrypto-lib-ec_key.o", "crypto/ec/libcrypto-lib-ec_kmeth.o", "crypto/ec/libcrypto-lib-ec_lib.o", "crypto/ec/libcrypto-lib-ec_mult.o", "crypto/ec/libcrypto-lib-ec_oct.o", "crypto/ec/libcrypto-lib-ec_pmeth.o", "crypto/ec/libcrypto-lib-ec_print.o", "crypto/ec/libcrypto-lib-ecdh_kdf.o", "crypto/ec/libcrypto-lib-ecdh_ossl.o", "crypto/ec/libcrypto-lib-ecdsa_ossl.o", "crypto/ec/libcrypto-lib-ecdsa_sign.o", "crypto/ec/libcrypto-lib-ecdsa_vrf.o", "crypto/ec/libcrypto-lib-eck_prn.o", "crypto/ec/libcrypto-lib-ecp_mont.o", "crypto/ec/libcrypto-lib-ecp_nist.o", "crypto/ec/libcrypto-lib-ecp_oct.o", "crypto/ec/libcrypto-lib-ecp_smpl.o", "crypto/ec/libcrypto-lib-ecx_backend.o", "crypto/ec/libcrypto-lib-ecx_key.o", "crypto/ec/libcrypto-lib-ecx_meth.o", "crypto/encode_decode/libcrypto-lib-decoder_err.o", "crypto/encode_decode/libcrypto-lib-decoder_lib.o", "crypto/encode_decode/libcrypto-lib-decoder_meth.o", "crypto/encode_decode/libcrypto-lib-decoder_pkey.o", "crypto/encode_decode/libcrypto-lib-encoder_err.o", "crypto/encode_decode/libcrypto-lib-encoder_lib.o", "crypto/encode_decode/libcrypto-lib-encoder_meth.o", "crypto/encode_decode/libcrypto-lib-encoder_pkey.o", "crypto/err/libcrypto-lib-err.o", "crypto/err/libcrypto-lib-err_all.o", "crypto/err/libcrypto-lib-err_all_legacy.o", "crypto/err/libcrypto-lib-err_blocks.o", "crypto/err/libcrypto-lib-err_prn.o", "crypto/ess/libcrypto-lib-ess_asn1.o", "crypto/ess/libcrypto-lib-ess_err.o", "crypto/ess/libcrypto-lib-ess_lib.o", "crypto/evp/libcrypto-lib-asymcipher.o", "crypto/evp/libcrypto-lib-bio_b64.o", "crypto/evp/libcrypto-lib-bio_enc.o", "crypto/evp/libcrypto-lib-bio_md.o", "crypto/evp/libcrypto-lib-bio_ok.o", "crypto/evp/libcrypto-lib-c_allc.o", "crypto/evp/libcrypto-lib-c_alld.o", "crypto/evp/libcrypto-lib-cmeth_lib.o", "crypto/evp/libcrypto-lib-ctrl_params_translate.o", "crypto/evp/libcrypto-lib-dh_ctrl.o", "crypto/evp/libcrypto-lib-dh_support.o", "crypto/evp/libcrypto-lib-digest.o", "crypto/evp/libcrypto-lib-dsa_ctrl.o", "crypto/evp/libcrypto-lib-e_aes.o", "crypto/evp/libcrypto-lib-e_aes_cbc_hmac_sha1.o", "crypto/evp/libcrypto-lib-e_aes_cbc_hmac_sha256.o", "crypto/evp/libcrypto-lib-e_aria.o", "crypto/evp/libcrypto-lib-e_bf.o", "crypto/evp/libcrypto-lib-e_cast.o", "crypto/evp/libcrypto-lib-e_chacha20_poly1305.o", "crypto/evp/libcrypto-lib-e_des.o", "crypto/evp/libcrypto-lib-e_des3.o", "crypto/evp/libcrypto-lib-e_idea.o", "crypto/evp/libcrypto-lib-e_null.o", "crypto/evp/libcrypto-lib-e_old.o", "crypto/evp/libcrypto-lib-e_rc2.o", "crypto/evp/libcrypto-lib-e_rc4.o", "crypto/evp/libcrypto-lib-e_rc4_hmac_md5.o", "crypto/evp/libcrypto-lib-e_rc5.o", "crypto/evp/libcrypto-lib-e_sm4.o", "crypto/evp/libcrypto-lib-e_xcbc_d.o", "crypto/evp/libcrypto-lib-ec_ctrl.o", "crypto/evp/libcrypto-lib-ec_support.o", "crypto/evp/libcrypto-lib-encode.o", "crypto/evp/libcrypto-lib-evp_cnf.o", "crypto/evp/libcrypto-lib-evp_enc.o", "crypto/evp/libcrypto-lib-evp_err.o", "crypto/evp/libcrypto-lib-evp_fetch.o", "crypto/evp/libcrypto-lib-evp_key.o", "crypto/evp/libcrypto-lib-evp_lib.o", "crypto/evp/libcrypto-lib-evp_pbe.o", "crypto/evp/libcrypto-lib-evp_pkey.o", "crypto/evp/libcrypto-lib-evp_rand.o", "crypto/evp/libcrypto-lib-evp_utils.o", "crypto/evp/libcrypto-lib-exchange.o", "crypto/evp/libcrypto-lib-kdf_lib.o", "crypto/evp/libcrypto-lib-kdf_meth.o", "crypto/evp/libcrypto-lib-kem.o", "crypto/evp/libcrypto-lib-keymgmt_lib.o", "crypto/evp/libcrypto-lib-keymgmt_meth.o", "crypto/evp/libcrypto-lib-legacy_md4.o", "crypto/evp/libcrypto-lib-legacy_md5.o", "crypto/evp/libcrypto-lib-legacy_md5_sha1.o", "crypto/evp/libcrypto-lib-legacy_ripemd.o", "crypto/evp/libcrypto-lib-legacy_sha.o", "crypto/evp/libcrypto-lib-m_null.o", "crypto/evp/libcrypto-lib-m_sigver.o", "crypto/evp/libcrypto-lib-mac_lib.o", "crypto/evp/libcrypto-lib-mac_meth.o", "crypto/evp/libcrypto-lib-names.o", "crypto/evp/libcrypto-lib-p5_crpt.o", "crypto/evp/libcrypto-lib-p5_crpt2.o", "crypto/evp/libcrypto-lib-p_dec.o", "crypto/evp/libcrypto-lib-p_enc.o", "crypto/evp/libcrypto-lib-p_legacy.o", "crypto/evp/libcrypto-lib-p_lib.o", "crypto/evp/libcrypto-lib-p_open.o", "crypto/evp/libcrypto-lib-p_seal.o", "crypto/evp/libcrypto-lib-p_sign.o", "crypto/evp/libcrypto-lib-p_verify.o", "crypto/evp/libcrypto-lib-pbe_scrypt.o", "crypto/evp/libcrypto-lib-pmeth_check.o", "crypto/evp/libcrypto-lib-pmeth_gn.o", "crypto/evp/libcrypto-lib-pmeth_lib.o", "crypto/evp/libcrypto-lib-signature.o", "crypto/ffc/libcrypto-lib-ffc_backend.o", "crypto/ffc/libcrypto-lib-ffc_dh.o", "crypto/ffc/libcrypto-lib-ffc_key_generate.o", "crypto/ffc/libcrypto-lib-ffc_key_validate.o", "crypto/ffc/libcrypto-lib-ffc_params.o", "crypto/ffc/libcrypto-lib-ffc_params_generate.o", "crypto/ffc/libcrypto-lib-ffc_params_validate.o", "crypto/hmac/libcrypto-lib-hmac.o", "crypto/http/libcrypto-lib-http_client.o", "crypto/http/libcrypto-lib-http_err.o", "crypto/http/libcrypto-lib-http_lib.o", "crypto/kdf/libcrypto-lib-kdf_err.o", "crypto/lhash/libcrypto-lib-lh_stats.o", "crypto/lhash/libcrypto-lib-lhash.o", "crypto/libcrypto-lib-asn1_dsa.o", "crypto/libcrypto-lib-bsearch.o", "crypto/libcrypto-lib-context.o", "crypto/libcrypto-lib-core_algorithm.o", "crypto/libcrypto-lib-core_fetch.o", "crypto/libcrypto-lib-core_namemap.o", "crypto/libcrypto-lib-cpt_err.o", "crypto/libcrypto-lib-cpuid.o", "crypto/libcrypto-lib-cryptlib.o", "crypto/libcrypto-lib-ctype.o", "crypto/libcrypto-lib-cversion.o", "crypto/libcrypto-lib-der_writer.o", "crypto/libcrypto-lib-ebcdic.o", "crypto/libcrypto-lib-ex_data.o", "crypto/libcrypto-lib-getenv.o", "crypto/libcrypto-lib-info.o", "crypto/libcrypto-lib-init.o", "crypto/libcrypto-lib-initthread.o", "crypto/libcrypto-lib-mem.o", "crypto/libcrypto-lib-mem_clr.o", "crypto/libcrypto-lib-mem_sec.o", "crypto/libcrypto-lib-o_dir.o", "crypto/libcrypto-lib-o_fopen.o", "crypto/libcrypto-lib-o_init.o", "crypto/libcrypto-lib-o_str.o", "crypto/libcrypto-lib-o_time.o", "crypto/libcrypto-lib-packet.o", "crypto/libcrypto-lib-param_build.o", "crypto/libcrypto-lib-param_build_set.o", "crypto/libcrypto-lib-params.o", "crypto/libcrypto-lib-params_dup.o", "crypto/libcrypto-lib-params_from_text.o", "crypto/libcrypto-lib-passphrase.o", "crypto/libcrypto-lib-provider.o", "crypto/libcrypto-lib-provider_child.o", "crypto/libcrypto-lib-provider_conf.o", "crypto/libcrypto-lib-provider_core.o", "crypto/libcrypto-lib-provider_predefined.o", "crypto/libcrypto-lib-punycode.o", "crypto/libcrypto-lib-self_test_core.o", "crypto/libcrypto-lib-sparse_array.o", "crypto/libcrypto-lib-threads_lib.o", "crypto/libcrypto-lib-threads_none.o", "crypto/libcrypto-lib-threads_pthread.o", "crypto/libcrypto-lib-threads_win.o", "crypto/libcrypto-lib-trace.o", "crypto/libcrypto-lib-uid.o", "crypto/md4/libcrypto-lib-md4_dgst.o", "crypto/md4/libcrypto-lib-md4_one.o", "crypto/md5/libcrypto-lib-md5_dgst.o", "crypto/md5/libcrypto-lib-md5_one.o", "crypto/md5/libcrypto-lib-md5_sha1.o", "crypto/modes/libcrypto-lib-cbc128.o", "crypto/modes/libcrypto-lib-ccm128.o", "crypto/modes/libcrypto-lib-cfb128.o", "crypto/modes/libcrypto-lib-ctr128.o", "crypto/modes/libcrypto-lib-cts128.o", "crypto/modes/libcrypto-lib-gcm128.o", "crypto/modes/libcrypto-lib-ocb128.o", "crypto/modes/libcrypto-lib-ofb128.o", "crypto/modes/libcrypto-lib-siv128.o", "crypto/modes/libcrypto-lib-wrap128.o", "crypto/modes/libcrypto-lib-xts128.o", "crypto/objects/libcrypto-lib-o_names.o", "crypto/objects/libcrypto-lib-obj_dat.o", "crypto/objects/libcrypto-lib-obj_err.o", "crypto/objects/libcrypto-lib-obj_lib.o", "crypto/objects/libcrypto-lib-obj_xref.o", "crypto/ocsp/libcrypto-lib-ocsp_asn.o", "crypto/ocsp/libcrypto-lib-ocsp_cl.o", "crypto/ocsp/libcrypto-lib-ocsp_err.o", "crypto/ocsp/libcrypto-lib-ocsp_ext.o", "crypto/ocsp/libcrypto-lib-ocsp_http.o", "crypto/ocsp/libcrypto-lib-ocsp_lib.o", "crypto/ocsp/libcrypto-lib-ocsp_prn.o", "crypto/ocsp/libcrypto-lib-ocsp_srv.o", "crypto/ocsp/libcrypto-lib-ocsp_vfy.o", "crypto/ocsp/libcrypto-lib-v3_ocsp.o", "crypto/pem/libcrypto-lib-pem_all.o", "crypto/pem/libcrypto-lib-pem_err.o", "crypto/pem/libcrypto-lib-pem_info.o", "crypto/pem/libcrypto-lib-pem_lib.o", "crypto/pem/libcrypto-lib-pem_oth.o", "crypto/pem/libcrypto-lib-pem_pk8.o", "crypto/pem/libcrypto-lib-pem_pkey.o", "crypto/pem/libcrypto-lib-pem_sign.o", "crypto/pem/libcrypto-lib-pem_x509.o", "crypto/pem/libcrypto-lib-pem_xaux.o", "crypto/pem/libcrypto-lib-pvkfmt.o", "crypto/pkcs12/libcrypto-lib-p12_add.o", "crypto/pkcs12/libcrypto-lib-p12_asn.o", "crypto/pkcs12/libcrypto-lib-p12_attr.o", "crypto/pkcs12/libcrypto-lib-p12_crpt.o", "crypto/pkcs12/libcrypto-lib-p12_crt.o", "crypto/pkcs12/libcrypto-lib-p12_decr.o", "crypto/pkcs12/libcrypto-lib-p12_init.o", "crypto/pkcs12/libcrypto-lib-p12_key.o", "crypto/pkcs12/libcrypto-lib-p12_kiss.o", "crypto/pkcs12/libcrypto-lib-p12_mutl.o", "crypto/pkcs12/libcrypto-lib-p12_npas.o", "crypto/pkcs12/libcrypto-lib-p12_p8d.o", "crypto/pkcs12/libcrypto-lib-p12_p8e.o", "crypto/pkcs12/libcrypto-lib-p12_sbag.o", "crypto/pkcs12/libcrypto-lib-p12_utl.o", "crypto/pkcs12/libcrypto-lib-pk12err.o", "crypto/pkcs7/libcrypto-lib-bio_pk7.o", "crypto/pkcs7/libcrypto-lib-pk7_asn1.o", "crypto/pkcs7/libcrypto-lib-pk7_attr.o", "crypto/pkcs7/libcrypto-lib-pk7_doit.o", "crypto/pkcs7/libcrypto-lib-pk7_lib.o", "crypto/pkcs7/libcrypto-lib-pk7_mime.o", "crypto/pkcs7/libcrypto-lib-pk7_smime.o", "crypto/pkcs7/libcrypto-lib-pkcs7err.o", "crypto/property/libcrypto-lib-defn_cache.o", "crypto/property/libcrypto-lib-property.o", "crypto/property/libcrypto-lib-property_err.o", "crypto/property/libcrypto-lib-property_parse.o", "crypto/property/libcrypto-lib-property_query.o", "crypto/property/libcrypto-lib-property_string.o", "crypto/rand/libcrypto-lib-prov_seed.o", "crypto/rand/libcrypto-lib-rand_deprecated.o", "crypto/rand/libcrypto-lib-rand_err.o", "crypto/rand/libcrypto-lib-rand_lib.o", "crypto/rand/libcrypto-lib-rand_meth.o", "crypto/rand/libcrypto-lib-rand_pool.o", "crypto/rand/libcrypto-lib-randfile.o", "crypto/rc2/libcrypto-lib-rc2_cbc.o", "crypto/rc2/libcrypto-lib-rc2_ecb.o", "crypto/rc2/libcrypto-lib-rc2_skey.o", "crypto/rc2/libcrypto-lib-rc2cfb64.o", "crypto/rc2/libcrypto-lib-rc2ofb64.o", "crypto/rc4/libcrypto-lib-rc4_enc.o", "crypto/rc4/libcrypto-lib-rc4_skey.o", "crypto/ripemd/libcrypto-lib-rmd_dgst.o", "crypto/ripemd/libcrypto-lib-rmd_one.o", "crypto/rsa/libcrypto-lib-rsa_ameth.o", "crypto/rsa/libcrypto-lib-rsa_asn1.o", "crypto/rsa/libcrypto-lib-rsa_backend.o", "crypto/rsa/libcrypto-lib-rsa_chk.o", "crypto/rsa/libcrypto-lib-rsa_crpt.o", "crypto/rsa/libcrypto-lib-rsa_depr.o", "crypto/rsa/libcrypto-lib-rsa_err.o", "crypto/rsa/libcrypto-lib-rsa_gen.o", "crypto/rsa/libcrypto-lib-rsa_lib.o", "crypto/rsa/libcrypto-lib-rsa_meth.o", "crypto/rsa/libcrypto-lib-rsa_mp.o", "crypto/rsa/libcrypto-lib-rsa_mp_names.o", "crypto/rsa/libcrypto-lib-rsa_none.o", "crypto/rsa/libcrypto-lib-rsa_oaep.o", "crypto/rsa/libcrypto-lib-rsa_ossl.o", "crypto/rsa/libcrypto-lib-rsa_pk1.o", "crypto/rsa/libcrypto-lib-rsa_pmeth.o", "crypto/rsa/libcrypto-lib-rsa_prn.o", "crypto/rsa/libcrypto-lib-rsa_pss.o", "crypto/rsa/libcrypto-lib-rsa_saos.o", "crypto/rsa/libcrypto-lib-rsa_schemes.o", "crypto/rsa/libcrypto-lib-rsa_sign.o", "crypto/rsa/libcrypto-lib-rsa_sp800_56b_check.o", "crypto/rsa/libcrypto-lib-rsa_sp800_56b_gen.o", "crypto/rsa/libcrypto-lib-rsa_x931.o", "crypto/rsa/libcrypto-lib-rsa_x931g.o", "crypto/sha/libcrypto-lib-keccak1600.o", "crypto/sha/libcrypto-lib-sha1_one.o", "crypto/sha/libcrypto-lib-sha1dgst.o", "crypto/sha/libcrypto-lib-sha256.o", "crypto/sha/libcrypto-lib-sha3.o", "crypto/sha/libcrypto-lib-sha512.o", "crypto/siphash/libcrypto-lib-siphash.o", "crypto/stack/libcrypto-lib-stack.o", "crypto/store/libcrypto-lib-store_err.o", "crypto/store/libcrypto-lib-store_init.o", "crypto/store/libcrypto-lib-store_lib.o", "crypto/store/libcrypto-lib-store_meth.o", "crypto/store/libcrypto-lib-store_register.o", "crypto/store/libcrypto-lib-store_result.o", "crypto/store/libcrypto-lib-store_strings.o", "crypto/ts/libcrypto-lib-ts_asn1.o", "crypto/ts/libcrypto-lib-ts_conf.o", "crypto/ts/libcrypto-lib-ts_err.o", "crypto/ts/libcrypto-lib-ts_lib.o", "crypto/ts/libcrypto-lib-ts_req_print.o", "crypto/ts/libcrypto-lib-ts_req_utils.o", "crypto/ts/libcrypto-lib-ts_rsp_print.o", "crypto/ts/libcrypto-lib-ts_rsp_sign.o", "crypto/ts/libcrypto-lib-ts_rsp_utils.o", "crypto/ts/libcrypto-lib-ts_rsp_verify.o", "crypto/ts/libcrypto-lib-ts_verify_ctx.o", "crypto/txt_db/libcrypto-lib-txt_db.o", "crypto/ui/libcrypto-lib-ui_err.o", "crypto/ui/libcrypto-lib-ui_lib.o", "crypto/ui/libcrypto-lib-ui_null.o", "crypto/ui/libcrypto-lib-ui_openssl.o", "crypto/ui/libcrypto-lib-ui_util.o", "crypto/x509/libcrypto-lib-by_dir.o", "crypto/x509/libcrypto-lib-by_file.o", "crypto/x509/libcrypto-lib-by_store.o", "crypto/x509/libcrypto-lib-pcy_cache.o", "crypto/x509/libcrypto-lib-pcy_data.o", "crypto/x509/libcrypto-lib-pcy_lib.o", "crypto/x509/libcrypto-lib-pcy_map.o", "crypto/x509/libcrypto-lib-pcy_node.o", "crypto/x509/libcrypto-lib-pcy_tree.o", "crypto/x509/libcrypto-lib-t_crl.o", "crypto/x509/libcrypto-lib-t_req.o", "crypto/x509/libcrypto-lib-t_x509.o", "crypto/x509/libcrypto-lib-v3_addr.o", "crypto/x509/libcrypto-lib-v3_admis.o", "crypto/x509/libcrypto-lib-v3_akeya.o", "crypto/x509/libcrypto-lib-v3_akid.o", "crypto/x509/libcrypto-lib-v3_asid.o", "crypto/x509/libcrypto-lib-v3_bcons.o", "crypto/x509/libcrypto-lib-v3_bitst.o", "crypto/x509/libcrypto-lib-v3_conf.o", "crypto/x509/libcrypto-lib-v3_cpols.o", "crypto/x509/libcrypto-lib-v3_crld.o", "crypto/x509/libcrypto-lib-v3_enum.o", "crypto/x509/libcrypto-lib-v3_extku.o", "crypto/x509/libcrypto-lib-v3_genn.o", "crypto/x509/libcrypto-lib-v3_ia5.o", "crypto/x509/libcrypto-lib-v3_info.o", "crypto/x509/libcrypto-lib-v3_int.o", "crypto/x509/libcrypto-lib-v3_ist.o", "crypto/x509/libcrypto-lib-v3_lib.o", "crypto/x509/libcrypto-lib-v3_ncons.o", "crypto/x509/libcrypto-lib-v3_pci.o", "crypto/x509/libcrypto-lib-v3_pcia.o", "crypto/x509/libcrypto-lib-v3_pcons.o", "crypto/x509/libcrypto-lib-v3_pku.o", "crypto/x509/libcrypto-lib-v3_pmaps.o", "crypto/x509/libcrypto-lib-v3_prn.o", "crypto/x509/libcrypto-lib-v3_purp.o", "crypto/x509/libcrypto-lib-v3_san.o", "crypto/x509/libcrypto-lib-v3_skid.o", "crypto/x509/libcrypto-lib-v3_sxnet.o", "crypto/x509/libcrypto-lib-v3_tlsf.o", "crypto/x509/libcrypto-lib-v3_utf8.o", "crypto/x509/libcrypto-lib-v3_utl.o", "crypto/x509/libcrypto-lib-v3err.o", "crypto/x509/libcrypto-lib-x509_att.o", "crypto/x509/libcrypto-lib-x509_cmp.o", "crypto/x509/libcrypto-lib-x509_d2.o", "crypto/x509/libcrypto-lib-x509_def.o", "crypto/x509/libcrypto-lib-x509_err.o", "crypto/x509/libcrypto-lib-x509_ext.o", "crypto/x509/libcrypto-lib-x509_lu.o", "crypto/x509/libcrypto-lib-x509_meth.o", "crypto/x509/libcrypto-lib-x509_obj.o", "crypto/x509/libcrypto-lib-x509_r2x.o", "crypto/x509/libcrypto-lib-x509_req.o", "crypto/x509/libcrypto-lib-x509_set.o", "crypto/x509/libcrypto-lib-x509_trust.o", "crypto/x509/libcrypto-lib-x509_txt.o", "crypto/x509/libcrypto-lib-x509_v3.o", "crypto/x509/libcrypto-lib-x509_vfy.o", "crypto/x509/libcrypto-lib-x509_vpm.o", "crypto/x509/libcrypto-lib-x509cset.o", "crypto/x509/libcrypto-lib-x509name.o", "crypto/x509/libcrypto-lib-x509rset.o", "crypto/x509/libcrypto-lib-x509spki.o", "crypto/x509/libcrypto-lib-x509type.o", "crypto/x509/libcrypto-lib-x_all.o", "crypto/x509/libcrypto-lib-x_attrib.o", "crypto/x509/libcrypto-lib-x_crl.o", "crypto/x509/libcrypto-lib-x_exten.o", "crypto/x509/libcrypto-lib-x_name.o", "crypto/x509/libcrypto-lib-x_pubkey.o", "crypto/x509/libcrypto-lib-x_req.o", "crypto/x509/libcrypto-lib-x_x509.o", "crypto/x509/libcrypto-lib-x_x509a.o", "providers/libcrypto-lib-baseprov.o", "providers/libcrypto-lib-defltprov.o", "providers/libcrypto-lib-nullprov.o", "providers/libcrypto-lib-prov_running.o", "providers/common/der/libdefault-lib-der_rsa_sig.o", "providers/common/libdefault-lib-bio_prov.o", "providers/common/libdefault-lib-capabilities.o", "providers/common/libdefault-lib-digest_to_nid.o", "providers/common/libdefault-lib-provider_seeding.o", "providers/common/libdefault-lib-provider_util.o", "providers/common/libdefault-lib-securitycheck.o", "providers/common/libdefault-lib-securitycheck_default.o", "providers/implementations/asymciphers/libdefault-lib-rsa_enc.o", "providers/implementations/ciphers/libdefault-lib-cipher_aes.o", "providers/implementations/ciphers/libdefault-lib-cipher_aes_cbc_hmac_sha.o", "providers/implementations/ciphers/libdefault-lib-cipher_aes_cbc_hmac_sha1_hw.o", "providers/implementations/ciphers/libdefault-lib-cipher_aes_cbc_hmac_sha256_hw.o", "providers/implementations/ciphers/libdefault-lib-cipher_aes_ccm.o", "providers/implementations/ciphers/libdefault-lib-cipher_aes_ccm_hw.o", "providers/implementations/ciphers/libdefault-lib-cipher_aes_gcm.o", "providers/implementations/ciphers/libdefault-lib-cipher_aes_gcm_hw.o", "providers/implementations/ciphers/libdefault-lib-cipher_aes_hw.o", "providers/implementations/ciphers/libdefault-lib-cipher_aes_ocb.o", "providers/implementations/ciphers/libdefault-lib-cipher_aes_ocb_hw.o", "providers/implementations/ciphers/libdefault-lib-cipher_aes_siv.o", "providers/implementations/ciphers/libdefault-lib-cipher_aes_siv_hw.o", "providers/implementations/ciphers/libdefault-lib-cipher_aes_wrp.o", "providers/implementations/ciphers/libdefault-lib-cipher_aes_xts.o", "providers/implementations/ciphers/libdefault-lib-cipher_aes_xts_fips.o", "providers/implementations/ciphers/libdefault-lib-cipher_aes_xts_hw.o", "providers/implementations/ciphers/libdefault-lib-cipher_cts.o", "providers/implementations/ciphers/libdefault-lib-cipher_null.o", "providers/implementations/ciphers/libdefault-lib-cipher_tdes.o", "providers/implementations/ciphers/libdefault-lib-cipher_tdes_common.o", "providers/implementations/ciphers/libdefault-lib-cipher_tdes_default.o", "providers/implementations/ciphers/libdefault-lib-cipher_tdes_default_hw.o", "providers/implementations/ciphers/libdefault-lib-cipher_tdes_hw.o", "providers/implementations/ciphers/libdefault-lib-cipher_tdes_wrap.o", "providers/implementations/ciphers/libdefault-lib-cipher_tdes_wrap_hw.o", "providers/implementations/digests/libdefault-lib-md5_prov.o", "providers/implementations/digests/libdefault-lib-md5_sha1_prov.o", "providers/implementations/digests/libdefault-lib-null_prov.o", "providers/implementations/digests/libdefault-lib-ripemd_prov.o", "providers/implementations/digests/libdefault-lib-sha2_prov.o", "providers/implementations/digests/libdefault-lib-sha3_prov.o", "providers/implementations/encode_decode/libdefault-lib-decode_der2key.o", "providers/implementations/encode_decode/libdefault-lib-decode_epki2pki.o", "providers/implementations/encode_decode/libdefault-lib-decode_msblob2key.o", "providers/implementations/encode_decode/libdefault-lib-decode_pem2der.o", "providers/implementations/encode_decode/libdefault-lib-decode_pvk2key.o", "providers/implementations/encode_decode/libdefault-lib-decode_spki2typespki.o", "providers/implementations/encode_decode/libdefault-lib-encode_key2any.o", "providers/implementations/encode_decode/libdefault-lib-encode_key2blob.o", "providers/implementations/encode_decode/libdefault-lib-encode_key2ms.o", "providers/implementations/encode_decode/libdefault-lib-encode_key2text.o", "providers/implementations/encode_decode/libdefault-lib-endecoder_common.o", "providers/implementations/exchange/libdefault-lib-dh_exch.o", "providers/implementations/exchange/libdefault-lib-ecdh_exch.o", "providers/implementations/exchange/libdefault-lib-ecx_exch.o", "providers/implementations/exchange/libdefault-lib-kdf_exch.o", "providers/implementations/kdfs/libdefault-lib-hkdf.o", "providers/implementations/kdfs/libdefault-lib-kbkdf.o", "providers/implementations/kdfs/libdefault-lib-krb5kdf.o", "providers/implementations/kdfs/libdefault-lib-pbkdf2.o", "providers/implementations/kdfs/libdefault-lib-pbkdf2_fips.o", "providers/implementations/kdfs/libdefault-lib-pkcs12kdf.o", "providers/implementations/kdfs/libdefault-lib-scrypt.o", "providers/implementations/kdfs/libdefault-lib-sshkdf.o", "providers/implementations/kdfs/libdefault-lib-sskdf.o", "providers/implementations/kdfs/libdefault-lib-tls1_prf.o", "providers/implementations/kdfs/libdefault-lib-x942kdf.o", "providers/implementations/kem/libdefault-lib-rsa_kem.o", "providers/implementations/keymgmt/libdefault-lib-dh_kmgmt.o", "providers/implementations/keymgmt/libdefault-lib-dsa_kmgmt.o", "providers/implementations/keymgmt/libdefault-lib-ec_kmgmt.o", "providers/implementations/keymgmt/libdefault-lib-ecx_kmgmt.o", "providers/implementations/keymgmt/libdefault-lib-kdf_legacy_kmgmt.o", "providers/implementations/keymgmt/libdefault-lib-mac_legacy_kmgmt.o", "providers/implementations/keymgmt/libdefault-lib-rsa_kmgmt.o", "providers/implementations/macs/libdefault-lib-cmac_prov.o", "providers/implementations/macs/libdefault-lib-gmac_prov.o", "providers/implementations/macs/libdefault-lib-hmac_prov.o", "providers/implementations/macs/libdefault-lib-kmac_prov.o", "providers/implementations/macs/libdefault-lib-siphash_prov.o", "providers/implementations/rands/libdefault-lib-crngt.o", "providers/implementations/rands/libdefault-lib-drbg.o", "providers/implementations/rands/libdefault-lib-drbg_ctr.o", "providers/implementations/rands/libdefault-lib-drbg_hash.o", "providers/implementations/rands/libdefault-lib-drbg_hmac.o", "providers/implementations/rands/libdefault-lib-seed_src.o", "providers/implementations/rands/libdefault-lib-test_rng.o", "providers/implementations/rands/seeding/libdefault-lib-rand_cpu_x86.o", "providers/implementations/rands/seeding/libdefault-lib-rand_tsc.o", "providers/implementations/rands/seeding/libdefault-lib-rand_unix.o", "providers/implementations/rands/seeding/libdefault-lib-rand_win.o", "providers/implementations/signature/libdefault-lib-dsa_sig.o", "providers/implementations/signature/libdefault-lib-ecdsa_sig.o", "providers/implementations/signature/libdefault-lib-eddsa_sig.o", "providers/implementations/signature/libdefault-lib-mac_legacy_sig.o", "providers/implementations/signature/libdefault-lib-rsa_sig.o", "providers/implementations/storemgmt/libdefault-lib-file_store.o", "providers/implementations/storemgmt/libdefault-lib-file_store_any2obj.o", "ssl/libdefault-lib-s3_cbc.o", "providers/common/der/libcommon-lib-der_digests_gen.o", "providers/common/der/libcommon-lib-der_dsa_gen.o", "providers/common/der/libcommon-lib-der_dsa_key.o", "providers/common/der/libcommon-lib-der_dsa_sig.o", "providers/common/der/libcommon-lib-der_ec_gen.o", "providers/common/der/libcommon-lib-der_ec_key.o", "providers/common/der/libcommon-lib-der_ec_sig.o", "providers/common/der/libcommon-lib-der_ecx_gen.o", "providers/common/der/libcommon-lib-der_ecx_key.o", "providers/common/der/libcommon-lib-der_rsa_gen.o", "providers/common/der/libcommon-lib-der_rsa_key.o", "providers/common/der/libcommon-lib-der_wrap_gen.o", "providers/common/libcommon-lib-provider_ctx.o", "providers/common/libcommon-lib-provider_err.o", "providers/implementations/ciphers/libcommon-lib-ciphercommon.o", "providers/implementations/ciphers/libcommon-lib-ciphercommon_block.o", "providers/implementations/ciphers/libcommon-lib-ciphercommon_ccm.o", "providers/implementations/ciphers/libcommon-lib-ciphercommon_ccm_hw.o", "providers/implementations/ciphers/libcommon-lib-ciphercommon_gcm.o", "providers/implementations/ciphers/libcommon-lib-ciphercommon_gcm_hw.o", "providers/implementations/ciphers/libcommon-lib-ciphercommon_hw.o", "providers/implementations/digests/libcommon-lib-digestcommon.o", "ssl/record/libcommon-lib-tls_pad.o" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/aes/libcrypto-lib-aes_cbc.o", "product" => "libcrypto", "srcs" => [ "crypto/aes/aes_cbc.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/aes/libcrypto-lib-aes_cfb.o", "product" => "libcrypto", "srcs" => [ "crypto/aes/aes_cfb.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/aes/libcrypto-lib-aes_core.o", "product" => "libcrypto", "srcs" => [ "crypto/aes/aes_core.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/aes/libcrypto-lib-aes_ecb.o", "product" => "libcrypto", "srcs" => [ "crypto/aes/aes_ecb.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/aes/libcrypto-lib-aes_ige.o", "product" => "libcrypto", "srcs" => [ "crypto/aes/aes_ige.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/aes/libcrypto-lib-aes_misc.o", "product" => "libcrypto", "srcs" => [ "crypto/aes/aes_misc.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/aes/libcrypto-lib-aes_ofb.o", "product" => "libcrypto", "srcs" => [ "crypto/aes/aes_ofb.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/aes/libcrypto-lib-aes_wrap.o", "product" => "libcrypto", "srcs" => [ "crypto/aes/aes_wrap.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/asn1/libcrypto-lib-a_bitstr.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/a_bitstr.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/asn1/libcrypto-lib-a_d2i_fp.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/a_d2i_fp.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/asn1/libcrypto-lib-a_digest.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/a_digest.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/asn1/libcrypto-lib-a_dup.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/a_dup.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/asn1/libcrypto-lib-a_gentm.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/a_gentm.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/asn1/libcrypto-lib-a_i2d_fp.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/a_i2d_fp.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/asn1/libcrypto-lib-a_int.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/a_int.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/asn1/libcrypto-lib-a_mbstr.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/a_mbstr.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/asn1/libcrypto-lib-a_object.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/a_object.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/asn1/libcrypto-lib-a_octet.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/a_octet.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/asn1/libcrypto-lib-a_print.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/a_print.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/asn1/libcrypto-lib-a_sign.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/a_sign.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/asn1/libcrypto-lib-a_strex.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/a_strex.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/asn1/libcrypto-lib-a_strnid.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/a_strnid.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/asn1/libcrypto-lib-a_time.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/a_time.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/asn1/libcrypto-lib-a_type.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/a_type.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/asn1/libcrypto-lib-a_utctm.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/a_utctm.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/asn1/libcrypto-lib-a_utf8.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/a_utf8.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/asn1/libcrypto-lib-a_verify.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/a_verify.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/asn1/libcrypto-lib-ameth_lib.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/ameth_lib.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/asn1/libcrypto-lib-asn1_err.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/asn1_err.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/asn1/libcrypto-lib-asn1_gen.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/asn1_gen.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/asn1/libcrypto-lib-asn1_item_list.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/asn1_item_list.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/asn1/libcrypto-lib-asn1_lib.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/asn1_lib.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/asn1/libcrypto-lib-asn1_parse.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/asn1_parse.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/asn1/libcrypto-lib-asn_mime.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/asn_mime.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/asn1/libcrypto-lib-asn_moid.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/asn_moid.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/asn1/libcrypto-lib-asn_mstbl.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/asn_mstbl.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/asn1/libcrypto-lib-asn_pack.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/asn_pack.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/asn1/libcrypto-lib-bio_asn1.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/bio_asn1.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/asn1/libcrypto-lib-bio_ndef.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/bio_ndef.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/asn1/libcrypto-lib-d2i_param.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/d2i_param.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/asn1/libcrypto-lib-d2i_pr.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/d2i_pr.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/asn1/libcrypto-lib-d2i_pu.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/d2i_pu.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/asn1/libcrypto-lib-evp_asn1.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/evp_asn1.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/asn1/libcrypto-lib-f_int.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/f_int.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/asn1/libcrypto-lib-f_string.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/f_string.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/asn1/libcrypto-lib-i2d_evp.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/i2d_evp.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/asn1/libcrypto-lib-n_pkey.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/n_pkey.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/asn1/libcrypto-lib-nsseq.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/nsseq.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/asn1/libcrypto-lib-p5_pbe.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/p5_pbe.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/asn1/libcrypto-lib-p5_pbev2.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/p5_pbev2.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/asn1/libcrypto-lib-p5_scrypt.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/p5_scrypt.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/asn1/libcrypto-lib-p8_pkey.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/p8_pkey.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/asn1/libcrypto-lib-t_bitst.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/t_bitst.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/asn1/libcrypto-lib-t_pkey.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/t_pkey.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/asn1/libcrypto-lib-t_spki.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/t_spki.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/asn1/libcrypto-lib-tasn_dec.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/tasn_dec.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/asn1/libcrypto-lib-tasn_enc.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/tasn_enc.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/asn1/libcrypto-lib-tasn_fre.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/tasn_fre.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/asn1/libcrypto-lib-tasn_new.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/tasn_new.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/asn1/libcrypto-lib-tasn_prn.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/tasn_prn.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/asn1/libcrypto-lib-tasn_scn.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/tasn_scn.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/asn1/libcrypto-lib-tasn_typ.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/tasn_typ.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/asn1/libcrypto-lib-tasn_utl.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/tasn_utl.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/asn1/libcrypto-lib-x_algor.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/x_algor.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/asn1/libcrypto-lib-x_bignum.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/x_bignum.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/asn1/libcrypto-lib-x_info.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/x_info.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/asn1/libcrypto-lib-x_int64.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/x_int64.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/asn1/libcrypto-lib-x_long.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/x_long.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/asn1/libcrypto-lib-x_pkey.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/x_pkey.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/asn1/libcrypto-lib-x_sig.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/x_sig.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/asn1/libcrypto-lib-x_spki.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/x_spki.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/asn1/libcrypto-lib-x_val.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1/x_val.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/async/arch/libcrypto-lib-async_null.o", "product" => "libcrypto", "srcs" => [ "crypto/async/arch/async_null.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/async/arch/libcrypto-lib-async_posix.o", "product" => "libcrypto", "srcs" => [ "crypto/async/arch/async_posix.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/async/arch/libcrypto-lib-async_win.o", "product" => "libcrypto", "srcs" => [ "crypto/async/arch/async_win.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/async/libcrypto-lib-async.o", "product" => "libcrypto", "srcs" => [ "crypto/async/async.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/async/libcrypto-lib-async_err.o", "product" => "libcrypto", "srcs" => [ "crypto/async/async_err.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/async/libcrypto-lib-async_wait.o", "product" => "libcrypto", "srcs" => [ "crypto/async/async_wait.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/bf/libcrypto-lib-bf_cfb64.o", "product" => "libcrypto", "srcs" => [ "crypto/bf/bf_cfb64.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/bf/libcrypto-lib-bf_ecb.o", "product" => "libcrypto", "srcs" => [ "crypto/bf/bf_ecb.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/bf/libcrypto-lib-bf_enc.o", "product" => "libcrypto", "srcs" => [ "crypto/bf/bf_enc.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/bf/libcrypto-lib-bf_ofb64.o", "product" => "libcrypto", "srcs" => [ "crypto/bf/bf_ofb64.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/bf/libcrypto-lib-bf_skey.o", "product" => "libcrypto", "srcs" => [ "crypto/bf/bf_skey.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/bio/libcrypto-lib-bf_buff.o", "product" => "libcrypto", "srcs" => [ "crypto/bio/bf_buff.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/bio/libcrypto-lib-bf_lbuf.o", "product" => "libcrypto", "srcs" => [ "crypto/bio/bf_lbuf.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/bio/libcrypto-lib-bf_nbio.o", "product" => "libcrypto", "srcs" => [ "crypto/bio/bf_nbio.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/bio/libcrypto-lib-bf_null.o", "product" => "libcrypto", "srcs" => [ "crypto/bio/bf_null.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/bio/libcrypto-lib-bf_prefix.o", "product" => "libcrypto", "srcs" => [ "crypto/bio/bf_prefix.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/bio/libcrypto-lib-bf_readbuff.o", "product" => "libcrypto", "srcs" => [ "crypto/bio/bf_readbuff.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/bio/libcrypto-lib-bio_addr.o", "product" => "libcrypto", "srcs" => [ "crypto/bio/bio_addr.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/bio/libcrypto-lib-bio_cb.o", "product" => "libcrypto", "srcs" => [ "crypto/bio/bio_cb.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/bio/libcrypto-lib-bio_dump.o", "product" => "libcrypto", "srcs" => [ "crypto/bio/bio_dump.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/bio/libcrypto-lib-bio_err.o", "product" => "libcrypto", "srcs" => [ "crypto/bio/bio_err.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/bio/libcrypto-lib-bio_lib.o", "product" => "libcrypto", "srcs" => [ "crypto/bio/bio_lib.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/bio/libcrypto-lib-bio_meth.o", "product" => "libcrypto", "srcs" => [ "crypto/bio/bio_meth.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/bio/libcrypto-lib-bio_print.o", "product" => "libcrypto", "srcs" => [ "crypto/bio/bio_print.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/bio/libcrypto-lib-bio_sock.o", "product" => "libcrypto", "srcs" => [ "crypto/bio/bio_sock.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/bio/libcrypto-lib-bio_sock2.o", "product" => "libcrypto", "srcs" => [ "crypto/bio/bio_sock2.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/bio/libcrypto-lib-bss_acpt.o", "product" => "libcrypto", "srcs" => [ "crypto/bio/bss_acpt.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/bio/libcrypto-lib-bss_bio.o", "product" => "libcrypto", "srcs" => [ "crypto/bio/bss_bio.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/bio/libcrypto-lib-bss_conn.o", "product" => "libcrypto", "srcs" => [ "crypto/bio/bss_conn.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/bio/libcrypto-lib-bss_core.o", "product" => "libcrypto", "srcs" => [ "crypto/bio/bss_core.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/bio/libcrypto-lib-bss_dgram.o", "product" => "libcrypto", "srcs" => [ "crypto/bio/bss_dgram.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/bio/libcrypto-lib-bss_fd.o", "product" => "libcrypto", "srcs" => [ "crypto/bio/bss_fd.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/bio/libcrypto-lib-bss_file.o", "product" => "libcrypto", "srcs" => [ "crypto/bio/bss_file.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/bio/libcrypto-lib-bss_log.o", "product" => "libcrypto", "srcs" => [ "crypto/bio/bss_log.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/bio/libcrypto-lib-bss_mem.o", "product" => "libcrypto", "srcs" => [ "crypto/bio/bss_mem.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/bio/libcrypto-lib-bss_null.o", "product" => "libcrypto", "srcs" => [ "crypto/bio/bss_null.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/bio/libcrypto-lib-bss_sock.o", "product" => "libcrypto", "srcs" => [ "crypto/bio/bss_sock.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/bio/libcrypto-lib-ossl_core_bio.o", "product" => "libcrypto", "srcs" => [ "crypto/bio/ossl_core_bio.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/bn/libcrypto-lib-bn_add.o", "product" => "libcrypto", "srcs" => [ "crypto/bn/bn_add.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/bn/libcrypto-lib-bn_asm.o", "product" => "libcrypto", "srcs" => [ "crypto/bn/bn_asm.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/bn/libcrypto-lib-bn_blind.o", "product" => "libcrypto", "srcs" => [ "crypto/bn/bn_blind.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/bn/libcrypto-lib-bn_const.o", "product" => "libcrypto", "srcs" => [ "crypto/bn/bn_const.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/bn/libcrypto-lib-bn_conv.o", "product" => "libcrypto", "srcs" => [ "crypto/bn/bn_conv.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/bn/libcrypto-lib-bn_ctx.o", "product" => "libcrypto", "srcs" => [ "crypto/bn/bn_ctx.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/bn/libcrypto-lib-bn_depr.o", "product" => "libcrypto", "srcs" => [ "crypto/bn/bn_depr.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/bn/libcrypto-lib-bn_dh.o", "product" => "libcrypto", "srcs" => [ "crypto/bn/bn_dh.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/bn/libcrypto-lib-bn_div.o", "product" => "libcrypto", "srcs" => [ "crypto/bn/bn_div.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/bn/libcrypto-lib-bn_err.o", "product" => "libcrypto", "srcs" => [ "crypto/bn/bn_err.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ "crypto", ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/bn/libcrypto-lib-bn_exp.o", "product" => "libcrypto", "srcs" => [ "crypto/bn/bn_exp.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/bn/libcrypto-lib-bn_exp2.o", "product" => "libcrypto", "srcs" => [ "crypto/bn/bn_exp2.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/bn/libcrypto-lib-bn_gcd.o", "product" => "libcrypto", "srcs" => [ "crypto/bn/bn_gcd.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/bn/libcrypto-lib-bn_gf2m.o", "product" => "libcrypto", "srcs" => [ "crypto/bn/bn_gf2m.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/bn/libcrypto-lib-bn_intern.o", "product" => "libcrypto", "srcs" => [ "crypto/bn/bn_intern.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/bn/libcrypto-lib-bn_kron.o", "product" => "libcrypto", "srcs" => [ "crypto/bn/bn_kron.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/bn/libcrypto-lib-bn_lib.o", "product" => "libcrypto", "srcs" => [ "crypto/bn/bn_lib.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/bn/libcrypto-lib-bn_mod.o", "product" => "libcrypto", "srcs" => [ "crypto/bn/bn_mod.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/bn/libcrypto-lib-bn_mont.o", "product" => "libcrypto", "srcs" => [ "crypto/bn/bn_mont.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/bn/libcrypto-lib-bn_mpi.o", "product" => "libcrypto", "srcs" => [ "crypto/bn/bn_mpi.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/bn/libcrypto-lib-bn_mul.o", "product" => "libcrypto", "srcs" => [ "crypto/bn/bn_mul.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/bn/libcrypto-lib-bn_nist.o", "product" => "libcrypto", "srcs" => [ "crypto/bn/bn_nist.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/bn/libcrypto-lib-bn_prime.o", "product" => "libcrypto", "srcs" => [ "crypto/bn/bn_prime.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/bn/libcrypto-lib-bn_print.o", "product" => "libcrypto", "srcs" => [ "crypto/bn/bn_print.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/bn/libcrypto-lib-bn_rand.o", "product" => "libcrypto", "srcs" => [ "crypto/bn/bn_rand.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/bn/libcrypto-lib-bn_recp.o", "product" => "libcrypto", "srcs" => [ "crypto/bn/bn_recp.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/bn/libcrypto-lib-bn_rsa_fips186_4.o", "product" => "libcrypto", "srcs" => [ "crypto/bn/bn_rsa_fips186_4.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/bn/libcrypto-lib-bn_shift.o", "product" => "libcrypto", "srcs" => [ "crypto/bn/bn_shift.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/bn/libcrypto-lib-bn_sqr.o", "product" => "libcrypto", "srcs" => [ "crypto/bn/bn_sqr.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/bn/libcrypto-lib-bn_sqrt.o", "product" => "libcrypto", "srcs" => [ "crypto/bn/bn_sqrt.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/bn/libcrypto-lib-bn_srp.o", "product" => "libcrypto", "srcs" => [ "crypto/bn/bn_srp.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/bn/libcrypto-lib-bn_word.o", "product" => "libcrypto", "srcs" => [ "crypto/bn/bn_word.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/bn/libcrypto-lib-bn_x931p.o", "product" => "libcrypto", "srcs" => [ "crypto/bn/bn_x931p.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/buffer/libcrypto-lib-buf_err.o", "product" => "libcrypto", "srcs" => [ "crypto/buffer/buf_err.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/buffer/libcrypto-lib-buffer.o", "product" => "libcrypto", "srcs" => [ "crypto/buffer/buffer.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/cast/libcrypto-lib-c_cfb64.o", "product" => "libcrypto", "srcs" => [ "crypto/cast/c_cfb64.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/cast/libcrypto-lib-c_ecb.o", "product" => "libcrypto", "srcs" => [ "crypto/cast/c_ecb.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/cast/libcrypto-lib-c_enc.o", "product" => "libcrypto", "srcs" => [ "crypto/cast/c_enc.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/cast/libcrypto-lib-c_ofb64.o", "product" => "libcrypto", "srcs" => [ "crypto/cast/c_ofb64.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/cast/libcrypto-lib-c_skey.o", "product" => "libcrypto", "srcs" => [ "crypto/cast/c_skey.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/cmac/libcrypto-lib-cmac.o", "product" => "libcrypto", "srcs" => [ "crypto/cmac/cmac.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/cmp/libcrypto-lib-cmp_asn.o", "product" => "libcrypto", "srcs" => [ "crypto/cmp/cmp_asn.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/cmp/libcrypto-lib-cmp_client.o", "product" => "libcrypto", "srcs" => [ "crypto/cmp/cmp_client.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/cmp/libcrypto-lib-cmp_ctx.o", "product" => "libcrypto", "srcs" => [ "crypto/cmp/cmp_ctx.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/cmp/libcrypto-lib-cmp_err.o", "product" => "libcrypto", "srcs" => [ "crypto/cmp/cmp_err.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/cmp/libcrypto-lib-cmp_hdr.o", "product" => "libcrypto", "srcs" => [ "crypto/cmp/cmp_hdr.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/cmp/libcrypto-lib-cmp_http.o", "product" => "libcrypto", "srcs" => [ "crypto/cmp/cmp_http.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/cmp/libcrypto-lib-cmp_msg.o", "product" => "libcrypto", "srcs" => [ "crypto/cmp/cmp_msg.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/cmp/libcrypto-lib-cmp_protect.o", "product" => "libcrypto", "srcs" => [ "crypto/cmp/cmp_protect.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/cmp/libcrypto-lib-cmp_server.o", "product" => "libcrypto", "srcs" => [ "crypto/cmp/cmp_server.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/cmp/libcrypto-lib-cmp_status.o", "product" => "libcrypto", "srcs" => [ "crypto/cmp/cmp_status.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/cmp/libcrypto-lib-cmp_util.o", "product" => "libcrypto", "srcs" => [ "crypto/cmp/cmp_util.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/cmp/libcrypto-lib-cmp_vfy.o", "product" => "libcrypto", "srcs" => [ "crypto/cmp/cmp_vfy.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/conf/libcrypto-lib-conf_api.o", "product" => "libcrypto", "srcs" => [ "crypto/conf/conf_api.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/conf/libcrypto-lib-conf_def.o", "product" => "libcrypto", "srcs" => [ "crypto/conf/conf_def.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/conf/libcrypto-lib-conf_err.o", "product" => "libcrypto", "srcs" => [ "crypto/conf/conf_err.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/conf/libcrypto-lib-conf_lib.o", "product" => "libcrypto", "srcs" => [ "crypto/conf/conf_lib.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/conf/libcrypto-lib-conf_mall.o", "product" => "libcrypto", "srcs" => [ "crypto/conf/conf_mall.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/conf/libcrypto-lib-conf_mod.o", "product" => "libcrypto", "srcs" => [ "crypto/conf/conf_mod.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/conf/libcrypto-lib-conf_sap.o", "product" => "libcrypto", "srcs" => [ "crypto/conf/conf_sap.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/conf/libcrypto-lib-conf_ssl.o", "product" => "libcrypto", "srcs" => [ "crypto/conf/conf_ssl.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/crmf/libcrypto-lib-crmf_asn.o", "product" => "libcrypto", "srcs" => [ "crypto/crmf/crmf_asn.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/crmf/libcrypto-lib-crmf_err.o", "product" => "libcrypto", "srcs" => [ "crypto/crmf/crmf_err.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/crmf/libcrypto-lib-crmf_lib.o", "product" => "libcrypto", "srcs" => [ "crypto/crmf/crmf_lib.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/crmf/libcrypto-lib-crmf_pbm.o", "product" => "libcrypto", "srcs" => [ "crypto/crmf/crmf_pbm.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/ct/libcrypto-lib-ct_b64.o", "product" => "libcrypto", "srcs" => [ "crypto/ct/ct_b64.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/ct/libcrypto-lib-ct_err.o", "product" => "libcrypto", "srcs" => [ "crypto/ct/ct_err.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/ct/libcrypto-lib-ct_log.o", "product" => "libcrypto", "srcs" => [ "crypto/ct/ct_log.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/ct/libcrypto-lib-ct_oct.o", "product" => "libcrypto", "srcs" => [ "crypto/ct/ct_oct.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/ct/libcrypto-lib-ct_policy.o", "product" => "libcrypto", "srcs" => [ "crypto/ct/ct_policy.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/ct/libcrypto-lib-ct_prn.o", "product" => "libcrypto", "srcs" => [ "crypto/ct/ct_prn.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/ct/libcrypto-lib-ct_sct.o", "product" => "libcrypto", "srcs" => [ "crypto/ct/ct_sct.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/ct/libcrypto-lib-ct_sct_ctx.o", "product" => "libcrypto", "srcs" => [ "crypto/ct/ct_sct_ctx.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/ct/libcrypto-lib-ct_vfy.o", "product" => "libcrypto", "srcs" => [ "crypto/ct/ct_vfy.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/ct/libcrypto-lib-ct_x509v3.o", "product" => "libcrypto", "srcs" => [ "crypto/ct/ct_x509v3.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/des/libcrypto-lib-cbc_cksm.o", "product" => "libcrypto", "srcs" => [ "crypto/des/cbc_cksm.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/des/libcrypto-lib-cbc_enc.o", "product" => "libcrypto", "srcs" => [ "crypto/des/cbc_enc.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/des/libcrypto-lib-cfb64ede.o", "product" => "libcrypto", "srcs" => [ "crypto/des/cfb64ede.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/des/libcrypto-lib-cfb64enc.o", "product" => "libcrypto", "srcs" => [ "crypto/des/cfb64enc.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/des/libcrypto-lib-cfb_enc.o", "product" => "libcrypto", "srcs" => [ "crypto/des/cfb_enc.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/des/libcrypto-lib-des_enc.o", "product" => "libcrypto", "srcs" => [ "crypto/des/des_enc.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/des/libcrypto-lib-ecb3_enc.o", "product" => "libcrypto", "srcs" => [ "crypto/des/ecb3_enc.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/des/libcrypto-lib-ecb_enc.o", "product" => "libcrypto", "srcs" => [ "crypto/des/ecb_enc.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/des/libcrypto-lib-fcrypt.o", "product" => "libcrypto", "srcs" => [ "crypto/des/fcrypt.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/des/libcrypto-lib-fcrypt_b.o", "product" => "libcrypto", "srcs" => [ "crypto/des/fcrypt_b.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/des/libcrypto-lib-ofb64ede.o", "product" => "libcrypto", "srcs" => [ "crypto/des/ofb64ede.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/des/libcrypto-lib-ofb64enc.o", "product" => "libcrypto", "srcs" => [ "crypto/des/ofb64enc.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/des/libcrypto-lib-ofb_enc.o", "product" => "libcrypto", "srcs" => [ "crypto/des/ofb_enc.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/des/libcrypto-lib-pcbc_enc.o", "product" => "libcrypto", "srcs" => [ "crypto/des/pcbc_enc.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/des/libcrypto-lib-qud_cksm.o", "product" => "libcrypto", "srcs" => [ "crypto/des/qud_cksm.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/des/libcrypto-lib-rand_key.o", "product" => "libcrypto", "srcs" => [ "crypto/des/rand_key.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/des/libcrypto-lib-set_key.o", "product" => "libcrypto", "srcs" => [ "crypto/des/set_key.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/des/libcrypto-lib-str2key.o", "product" => "libcrypto", "srcs" => [ "crypto/des/str2key.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/des/libcrypto-lib-xcbc_enc.o", "product" => "libcrypto", "srcs" => [ "crypto/des/xcbc_enc.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/dh/libcrypto-lib-dh_ameth.o", "product" => "libcrypto", "srcs" => [ "crypto/dh/dh_ameth.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/dh/libcrypto-lib-dh_asn1.o", "product" => "libcrypto", "srcs" => [ "crypto/dh/dh_asn1.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/dh/libcrypto-lib-dh_backend.o", "product" => "libcrypto", "srcs" => [ "crypto/dh/dh_backend.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/dh/libcrypto-lib-dh_check.o", "product" => "libcrypto", "srcs" => [ "crypto/dh/dh_check.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/dh/libcrypto-lib-dh_depr.o", "product" => "libcrypto", "srcs" => [ "crypto/dh/dh_depr.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/dh/libcrypto-lib-dh_err.o", "product" => "libcrypto", "srcs" => [ "crypto/dh/dh_err.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/dh/libcrypto-lib-dh_gen.o", "product" => "libcrypto", "srcs" => [ "crypto/dh/dh_gen.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/dh/libcrypto-lib-dh_group_params.o", "product" => "libcrypto", "srcs" => [ "crypto/dh/dh_group_params.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/dh/libcrypto-lib-dh_kdf.o", "product" => "libcrypto", "srcs" => [ "crypto/dh/dh_kdf.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/dh/libcrypto-lib-dh_key.o", "product" => "libcrypto", "srcs" => [ "crypto/dh/dh_key.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/dh/libcrypto-lib-dh_lib.o", "product" => "libcrypto", "srcs" => [ "crypto/dh/dh_lib.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/dh/libcrypto-lib-dh_meth.o", "product" => "libcrypto", "srcs" => [ "crypto/dh/dh_meth.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/dh/libcrypto-lib-dh_pmeth.o", "product" => "libcrypto", "srcs" => [ "crypto/dh/dh_pmeth.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/dh/libcrypto-lib-dh_prn.o", "product" => "libcrypto", "srcs" => [ "crypto/dh/dh_prn.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/dh/libcrypto-lib-dh_rfc5114.o", "product" => "libcrypto", "srcs" => [ "crypto/dh/dh_rfc5114.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/dsa/libcrypto-lib-dsa_ameth.o", "product" => "libcrypto", "srcs" => [ "crypto/dsa/dsa_ameth.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/dsa/libcrypto-lib-dsa_asn1.o", "product" => "libcrypto", "srcs" => [ "crypto/dsa/dsa_asn1.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/dsa/libcrypto-lib-dsa_backend.o", "product" => "libcrypto", "srcs" => [ "crypto/dsa/dsa_backend.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/dsa/libcrypto-lib-dsa_check.o", "product" => "libcrypto", "srcs" => [ "crypto/dsa/dsa_check.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/dsa/libcrypto-lib-dsa_depr.o", "product" => "libcrypto", "srcs" => [ "crypto/dsa/dsa_depr.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/dsa/libcrypto-lib-dsa_err.o", "product" => "libcrypto", "srcs" => [ "crypto/dsa/dsa_err.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/dsa/libcrypto-lib-dsa_gen.o", "product" => "libcrypto", "srcs" => [ "crypto/dsa/dsa_gen.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/dsa/libcrypto-lib-dsa_key.o", "product" => "libcrypto", "srcs" => [ "crypto/dsa/dsa_key.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/dsa/libcrypto-lib-dsa_lib.o", "product" => "libcrypto", "srcs" => [ "crypto/dsa/dsa_lib.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/dsa/libcrypto-lib-dsa_meth.o", "product" => "libcrypto", "srcs" => [ "crypto/dsa/dsa_meth.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/dsa/libcrypto-lib-dsa_ossl.o", "product" => "libcrypto", "srcs" => [ "crypto/dsa/dsa_ossl.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/dsa/libcrypto-lib-dsa_pmeth.o", "product" => "libcrypto", "srcs" => [ "crypto/dsa/dsa_pmeth.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/dsa/libcrypto-lib-dsa_prn.o", "product" => "libcrypto", "srcs" => [ "crypto/dsa/dsa_prn.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/dsa/libcrypto-lib-dsa_sign.o", "product" => "libcrypto", "srcs" => [ "crypto/dsa/dsa_sign.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/dsa/libcrypto-lib-dsa_vrf.o", "product" => "libcrypto", "srcs" => [ "crypto/dsa/dsa_vrf.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/dso/libcrypto-lib-dso_dl.o", "product" => "libcrypto", "srcs" => [ "crypto/dso/dso_dl.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/dso/libcrypto-lib-dso_dlfcn.o", "product" => "libcrypto", "srcs" => [ "crypto/dso/dso_dlfcn.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/dso/libcrypto-lib-dso_err.o", "product" => "libcrypto", "srcs" => [ "crypto/dso/dso_err.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/dso/libcrypto-lib-dso_lib.o", "product" => "libcrypto", "srcs" => [ "crypto/dso/dso_lib.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/dso/libcrypto-lib-dso_openssl.o", "product" => "libcrypto", "srcs" => [ "crypto/dso/dso_openssl.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/dso/libcrypto-lib-dso_vms.o", "product" => "libcrypto", "srcs" => [ "crypto/dso/dso_vms.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/dso/libcrypto-lib-dso_win32.o", "product" => "libcrypto", "srcs" => [ "crypto/dso/dso_win32.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/ec/curve448/arch_32/libcrypto-lib-f_impl32.o", "product" => "libcrypto", "srcs" => [ "crypto/ec/curve448/arch_32/f_impl32.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/ec/curve448/arch_64/libcrypto-lib-f_impl64.o", "product" => "libcrypto", "srcs" => [ "crypto/ec/curve448/arch_64/f_impl64.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/ec/curve448/libcrypto-lib-curve448.o", "product" => "libcrypto", "srcs" => [ "crypto/ec/curve448/curve448.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/ec/curve448/libcrypto-lib-curve448_tables.o", "product" => "libcrypto", "srcs" => [ "crypto/ec/curve448/curve448_tables.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/ec/curve448/libcrypto-lib-eddsa.o", "product" => "libcrypto", "srcs" => [ "crypto/ec/curve448/eddsa.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/ec/curve448/libcrypto-lib-f_generic.o", "product" => "libcrypto", "srcs" => [ "crypto/ec/curve448/f_generic.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/ec/curve448/libcrypto-lib-scalar.o", "product" => "libcrypto", "srcs" => [ "crypto/ec/curve448/scalar.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/ec/libcrypto-lib-curve25519.o", "product" => "libcrypto", "srcs" => [ "crypto/ec/curve25519.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/ec/libcrypto-lib-ec2_oct.o", "product" => "libcrypto", "srcs" => [ "crypto/ec/ec2_oct.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/ec/libcrypto-lib-ec2_smpl.o", "product" => "libcrypto", "srcs" => [ "crypto/ec/ec2_smpl.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/ec/libcrypto-lib-ec_ameth.o", "product" => "libcrypto", "srcs" => [ "crypto/ec/ec_ameth.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/ec/libcrypto-lib-ec_asn1.o", "product" => "libcrypto", "srcs" => [ "crypto/ec/ec_asn1.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/ec/libcrypto-lib-ec_backend.o", "product" => "libcrypto", "srcs" => [ "crypto/ec/ec_backend.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/ec/libcrypto-lib-ec_check.o", "product" => "libcrypto", "srcs" => [ "crypto/ec/ec_check.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/ec/libcrypto-lib-ec_curve.o", "product" => "libcrypto", "srcs" => [ "crypto/ec/ec_curve.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/ec/libcrypto-lib-ec_cvt.o", "product" => "libcrypto", "srcs" => [ "crypto/ec/ec_cvt.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/ec/libcrypto-lib-ec_deprecated.o", "product" => "libcrypto", "srcs" => [ "crypto/ec/ec_deprecated.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/ec/libcrypto-lib-ec_err.o", "product" => "libcrypto", "srcs" => [ "crypto/ec/ec_err.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/ec/libcrypto-lib-ec_key.o", "product" => "libcrypto", "srcs" => [ "crypto/ec/ec_key.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/ec/libcrypto-lib-ec_kmeth.o", "product" => "libcrypto", "srcs" => [ "crypto/ec/ec_kmeth.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/ec/libcrypto-lib-ec_lib.o", "product" => "libcrypto", "srcs" => [ "crypto/ec/ec_lib.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/ec/libcrypto-lib-ec_mult.o", "product" => "libcrypto", "srcs" => [ "crypto/ec/ec_mult.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/ec/libcrypto-lib-ec_oct.o", "product" => "libcrypto", "srcs" => [ "crypto/ec/ec_oct.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/ec/libcrypto-lib-ec_pmeth.o", "product" => "libcrypto", "srcs" => [ "crypto/ec/ec_pmeth.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/ec/libcrypto-lib-ec_print.o", "product" => "libcrypto", "srcs" => [ "crypto/ec/ec_print.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/ec/libcrypto-lib-ecdh_kdf.o", "product" => "libcrypto", "srcs" => [ "crypto/ec/ecdh_kdf.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/ec/libcrypto-lib-ecdh_ossl.o", "product" => "libcrypto", "srcs" => [ "crypto/ec/ecdh_ossl.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/ec/libcrypto-lib-ecdsa_ossl.o", "product" => "libcrypto", "srcs" => [ "crypto/ec/ecdsa_ossl.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/ec/libcrypto-lib-ecdsa_sign.o", "product" => "libcrypto", "srcs" => [ "crypto/ec/ecdsa_sign.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/ec/libcrypto-lib-ecdsa_vrf.o", "product" => "libcrypto", "srcs" => [ "crypto/ec/ecdsa_vrf.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/ec/libcrypto-lib-eck_prn.o", "product" => "libcrypto", "srcs" => [ "crypto/ec/eck_prn.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/ec/libcrypto-lib-ecp_mont.o", "product" => "libcrypto", "srcs" => [ "crypto/ec/ecp_mont.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/ec/libcrypto-lib-ecp_nist.o", "product" => "libcrypto", "srcs" => [ "crypto/ec/ecp_nist.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/ec/libcrypto-lib-ecp_oct.o", "product" => "libcrypto", "srcs" => [ "crypto/ec/ecp_oct.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/ec/libcrypto-lib-ecp_smpl.o", "product" => "libcrypto", "srcs" => [ "crypto/ec/ecp_smpl.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/ec/libcrypto-lib-ecx_backend.o", "product" => "libcrypto", "srcs" => [ "crypto/ec/ecx_backend.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/ec/libcrypto-lib-ecx_key.o", "product" => "libcrypto", "srcs" => [ "crypto/ec/ecx_key.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ "crypto", ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/ec/libcrypto-lib-ecx_meth.o", "product" => "libcrypto", "srcs" => [ "crypto/ec/ecx_meth.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/encode_decode/libcrypto-lib-decoder_err.o", "product" => "libcrypto", "srcs" => [ "crypto/encode_decode/decoder_err.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/encode_decode/libcrypto-lib-decoder_lib.o", "product" => "libcrypto", "srcs" => [ "crypto/encode_decode/decoder_lib.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/encode_decode/libcrypto-lib-decoder_meth.o", "product" => "libcrypto", "srcs" => [ "crypto/encode_decode/decoder_meth.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/encode_decode/libcrypto-lib-decoder_pkey.o", "product" => "libcrypto", "srcs" => [ "crypto/encode_decode/decoder_pkey.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/encode_decode/libcrypto-lib-encoder_err.o", "product" => "libcrypto", "srcs" => [ "crypto/encode_decode/encoder_err.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/encode_decode/libcrypto-lib-encoder_lib.o", "product" => "libcrypto", "srcs" => [ "crypto/encode_decode/encoder_lib.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/encode_decode/libcrypto-lib-encoder_meth.o", "product" => "libcrypto", "srcs" => [ "crypto/encode_decode/encoder_meth.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/encode_decode/libcrypto-lib-encoder_pkey.o", "product" => "libcrypto", "srcs" => [ "crypto/encode_decode/encoder_pkey.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/err/libcrypto-lib-err.o", "product" => "libcrypto", "srcs" => [ "crypto/err/err.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/err/libcrypto-lib-err_all.o", "product" => "libcrypto", "srcs" => [ "crypto/err/err_all.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/err/libcrypto-lib-err_all_legacy.o", "product" => "libcrypto", "srcs" => [ "crypto/err/err_all_legacy.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/err/libcrypto-lib-err_blocks.o", "product" => "libcrypto", "srcs" => [ "crypto/err/err_blocks.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/err/libcrypto-lib-err_prn.o", "product" => "libcrypto", "srcs" => [ "crypto/err/err_prn.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/ess/libcrypto-lib-ess_asn1.o", "product" => "libcrypto", "srcs" => [ "crypto/ess/ess_asn1.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/ess/libcrypto-lib-ess_err.o", "product" => "libcrypto", "srcs" => [ "crypto/ess/ess_err.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/ess/libcrypto-lib-ess_lib.o", "product" => "libcrypto", "srcs" => [ "crypto/ess/ess_lib.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/evp/libcrypto-lib-asymcipher.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/asymcipher.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/evp/libcrypto-lib-bio_b64.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/bio_b64.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/evp/libcrypto-lib-bio_enc.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/bio_enc.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/evp/libcrypto-lib-bio_md.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/bio_md.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/evp/libcrypto-lib-bio_ok.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/bio_ok.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/evp/libcrypto-lib-c_allc.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/c_allc.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/evp/libcrypto-lib-c_alld.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/c_alld.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/evp/libcrypto-lib-cmeth_lib.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/cmeth_lib.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/evp/libcrypto-lib-ctrl_params_translate.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/ctrl_params_translate.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/evp/libcrypto-lib-dh_ctrl.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/dh_ctrl.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/evp/libcrypto-lib-dh_support.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/dh_support.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/evp/libcrypto-lib-digest.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/digest.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/evp/libcrypto-lib-dsa_ctrl.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/dsa_ctrl.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ "crypto", "crypto/modes", ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/evp/libcrypto-lib-e_aes.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/e_aes.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ "crypto/modes", ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/evp/libcrypto-lib-e_aes_cbc_hmac_sha1.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/e_aes_cbc_hmac_sha1.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ "crypto/modes", ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/evp/libcrypto-lib-e_aes_cbc_hmac_sha256.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/e_aes_cbc_hmac_sha256.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ "crypto", "crypto/modes", ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/evp/libcrypto-lib-e_aria.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/e_aria.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/evp/libcrypto-lib-e_bf.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/e_bf.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/evp/libcrypto-lib-e_cast.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/e_cast.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/evp/libcrypto-lib-e_chacha20_poly1305.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/e_chacha20_poly1305.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ "crypto", ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/evp/libcrypto-lib-e_des.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/e_des.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ "crypto", ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/evp/libcrypto-lib-e_des3.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/e_des3.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/evp/libcrypto-lib-e_idea.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/e_idea.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/evp/libcrypto-lib-e_null.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/e_null.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/evp/libcrypto-lib-e_old.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/e_old.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/evp/libcrypto-lib-e_rc2.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/e_rc2.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/evp/libcrypto-lib-e_rc4.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/e_rc4.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/evp/libcrypto-lib-e_rc4_hmac_md5.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/e_rc4_hmac_md5.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/evp/libcrypto-lib-e_rc5.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/e_rc5.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ "crypto", "crypto/modes", ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/evp/libcrypto-lib-e_sm4.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/e_sm4.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/evp/libcrypto-lib-e_xcbc_d.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/e_xcbc_d.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/evp/libcrypto-lib-ec_ctrl.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/ec_ctrl.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/evp/libcrypto-lib-ec_support.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/ec_support.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/evp/libcrypto-lib-encode.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/encode.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/evp/libcrypto-lib-evp_cnf.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/evp_cnf.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/evp/libcrypto-lib-evp_enc.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/evp_enc.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/evp/libcrypto-lib-evp_err.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/evp_err.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/evp/libcrypto-lib-evp_fetch.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/evp_fetch.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/evp/libcrypto-lib-evp_key.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/evp_key.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/evp/libcrypto-lib-evp_lib.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/evp_lib.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/evp/libcrypto-lib-evp_pbe.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/evp_pbe.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/evp/libcrypto-lib-evp_pkey.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/evp_pkey.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/evp/libcrypto-lib-evp_rand.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/evp_rand.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/evp/libcrypto-lib-evp_utils.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/evp_utils.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/evp/libcrypto-lib-exchange.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/exchange.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/evp/libcrypto-lib-kdf_lib.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/kdf_lib.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/evp/libcrypto-lib-kdf_meth.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/kdf_meth.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/evp/libcrypto-lib-kem.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/kem.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/evp/libcrypto-lib-keymgmt_lib.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/keymgmt_lib.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/evp/libcrypto-lib-keymgmt_meth.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/keymgmt_meth.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/evp/libcrypto-lib-legacy_md4.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/legacy_md4.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/evp/libcrypto-lib-legacy_md5.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/legacy_md5.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/evp/libcrypto-lib-legacy_md5_sha1.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/legacy_md5_sha1.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/evp/libcrypto-lib-legacy_ripemd.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/legacy_ripemd.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/evp/libcrypto-lib-legacy_sha.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/legacy_sha.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/evp/libcrypto-lib-m_null.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/m_null.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/evp/libcrypto-lib-m_sigver.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/m_sigver.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/evp/libcrypto-lib-mac_lib.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/mac_lib.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/evp/libcrypto-lib-mac_meth.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/mac_meth.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/evp/libcrypto-lib-names.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/names.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/evp/libcrypto-lib-p5_crpt.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/p5_crpt.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/evp/libcrypto-lib-p5_crpt2.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/p5_crpt2.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/evp/libcrypto-lib-p_dec.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/p_dec.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/evp/libcrypto-lib-p_enc.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/p_enc.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/evp/libcrypto-lib-p_legacy.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/p_legacy.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/evp/libcrypto-lib-p_lib.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/p_lib.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/evp/libcrypto-lib-p_open.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/p_open.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/evp/libcrypto-lib-p_seal.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/p_seal.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/evp/libcrypto-lib-p_sign.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/p_sign.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/evp/libcrypto-lib-p_verify.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/p_verify.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/evp/libcrypto-lib-pbe_scrypt.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/pbe_scrypt.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/evp/libcrypto-lib-pmeth_check.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/pmeth_check.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/evp/libcrypto-lib-pmeth_gn.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/pmeth_gn.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/evp/libcrypto-lib-pmeth_lib.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/pmeth_lib.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/evp/libcrypto-lib-signature.o", "product" => "libcrypto", "srcs" => [ "crypto/evp/signature.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/ffc/libcrypto-lib-ffc_backend.o", "product" => "libcrypto", "srcs" => [ "crypto/ffc/ffc_backend.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/ffc/libcrypto-lib-ffc_dh.o", "product" => "libcrypto", "srcs" => [ "crypto/ffc/ffc_dh.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/ffc/libcrypto-lib-ffc_key_generate.o", "product" => "libcrypto", "srcs" => [ "crypto/ffc/ffc_key_generate.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/ffc/libcrypto-lib-ffc_key_validate.o", "product" => "libcrypto", "srcs" => [ "crypto/ffc/ffc_key_validate.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/ffc/libcrypto-lib-ffc_params.o", "product" => "libcrypto", "srcs" => [ "crypto/ffc/ffc_params.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/ffc/libcrypto-lib-ffc_params_generate.o", "product" => "libcrypto", "srcs" => [ "crypto/ffc/ffc_params_generate.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/ffc/libcrypto-lib-ffc_params_validate.o", "product" => "libcrypto", "srcs" => [ "crypto/ffc/ffc_params_validate.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/hmac/libcrypto-lib-hmac.o", "product" => "libcrypto", "srcs" => [ "crypto/hmac/hmac.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/http/libcrypto-lib-http_client.o", "product" => "libcrypto", "srcs" => [ "crypto/http/http_client.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/http/libcrypto-lib-http_err.o", "product" => "libcrypto", "srcs" => [ "crypto/http/http_err.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/http/libcrypto-lib-http_lib.o", "product" => "libcrypto", "srcs" => [ "crypto/http/http_lib.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/kdf/libcrypto-lib-kdf_err.o", "product" => "libcrypto", "srcs" => [ "crypto/kdf/kdf_err.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/lhash/libcrypto-lib-lh_stats.o", "product" => "libcrypto", "srcs" => [ "crypto/lhash/lh_stats.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/lhash/libcrypto-lib-lhash.o", "product" => "libcrypto", "srcs" => [ "crypto/lhash/lhash.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/libcrypto-lib-asn1_dsa.o", "product" => "libcrypto", "srcs" => [ "crypto/asn1_dsa.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/libcrypto-lib-bsearch.o", "product" => "libcrypto", "srcs" => [ "crypto/bsearch.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/libcrypto-lib-context.o", "product" => "libcrypto", "srcs" => [ "crypto/context.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/libcrypto-lib-core_algorithm.o", "product" => "libcrypto", "srcs" => [ "crypto/core_algorithm.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/libcrypto-lib-core_fetch.o", "product" => "libcrypto", "srcs" => [ "crypto/core_fetch.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/libcrypto-lib-core_namemap.o", "product" => "libcrypto", "srcs" => [ "crypto/core_namemap.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/libcrypto-lib-cpt_err.o", "product" => "libcrypto", "srcs" => [ "crypto/cpt_err.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/libcrypto-lib-cpuid.o", "product" => "libcrypto", "srcs" => [ "crypto/cpuid.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/libcrypto-lib-cryptlib.o", "product" => "libcrypto", "srcs" => [ "crypto/cryptlib.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/libcrypto-lib-ctype.o", "product" => "libcrypto", "srcs" => [ "crypto/ctype.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [ "crypto/buildinf.h" ], "incs" => [ "crypto", ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/libcrypto-lib-cversion.o", "product" => "libcrypto", "srcs" => [ "crypto/cversion.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/libcrypto-lib-der_writer.o", "product" => "libcrypto", "srcs" => [ "crypto/der_writer.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/libcrypto-lib-ebcdic.o", "product" => "libcrypto", "srcs" => [ "crypto/ebcdic.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/libcrypto-lib-ex_data.o", "product" => "libcrypto", "srcs" => [ "crypto/ex_data.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/libcrypto-lib-getenv.o", "product" => "libcrypto", "srcs" => [ "crypto/getenv.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [ "crypto/buildinf.h" ], "incs" => [ "crypto", ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/libcrypto-lib-info.o", "product" => "libcrypto", "srcs" => [ "crypto/info.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/libcrypto-lib-init.o", "product" => "libcrypto", "srcs" => [ "crypto/init.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/libcrypto-lib-initthread.o", "product" => "libcrypto", "srcs" => [ "crypto/initthread.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/libcrypto-lib-mem.o", "product" => "libcrypto", "srcs" => [ "crypto/mem.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/libcrypto-lib-mem_clr.o", "product" => "libcrypto", "srcs" => [ "crypto/mem_clr.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/libcrypto-lib-mem_sec.o", "product" => "libcrypto", "srcs" => [ "crypto/mem_sec.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/libcrypto-lib-o_dir.o", "product" => "libcrypto", "srcs" => [ "crypto/o_dir.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/libcrypto-lib-o_fopen.o", "product" => "libcrypto", "srcs" => [ "crypto/o_fopen.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/libcrypto-lib-o_init.o", "product" => "libcrypto", "srcs" => [ "crypto/o_init.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/libcrypto-lib-o_str.o", "product" => "libcrypto", "srcs" => [ "crypto/o_str.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/libcrypto-lib-o_time.o", "product" => "libcrypto", "srcs" => [ "crypto/o_time.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/libcrypto-lib-packet.o", "product" => "libcrypto", "srcs" => [ "crypto/packet.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/libcrypto-lib-param_build.o", "product" => "libcrypto", "srcs" => [ "crypto/param_build.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/libcrypto-lib-param_build_set.o", "product" => "libcrypto", "srcs" => [ "crypto/param_build_set.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/libcrypto-lib-params.o", "product" => "libcrypto", "srcs" => [ "crypto/params.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/libcrypto-lib-params_dup.o", "product" => "libcrypto", "srcs" => [ "crypto/params_dup.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/libcrypto-lib-params_from_text.o", "product" => "libcrypto", "srcs" => [ "crypto/params_from_text.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/libcrypto-lib-passphrase.o", "product" => "libcrypto", "srcs" => [ "crypto/passphrase.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/libcrypto-lib-provider.o", "product" => "libcrypto", "srcs" => [ "crypto/provider.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/libcrypto-lib-provider_child.o", "product" => "libcrypto", "srcs" => [ "crypto/provider_child.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/libcrypto-lib-provider_conf.o", "product" => "libcrypto", "srcs" => [ "crypto/provider_conf.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/libcrypto-lib-provider_core.o", "product" => "libcrypto", "srcs" => [ "crypto/provider_core.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/libcrypto-lib-provider_predefined.o", "product" => "libcrypto", "srcs" => [ "crypto/provider_predefined.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/libcrypto-lib-punycode.o", "product" => "libcrypto", "srcs" => [ "crypto/punycode.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/libcrypto-lib-self_test_core.o", "product" => "libcrypto", "srcs" => [ "crypto/self_test_core.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/libcrypto-lib-sparse_array.o", "product" => "libcrypto", "srcs" => [ "crypto/sparse_array.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/libcrypto-lib-threads_lib.o", "product" => "libcrypto", "srcs" => [ "crypto/threads_lib.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/libcrypto-lib-threads_none.o", "product" => "libcrypto", "srcs" => [ "crypto/threads_none.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/libcrypto-lib-threads_pthread.o", "product" => "libcrypto", "srcs" => [ "crypto/threads_pthread.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/libcrypto-lib-threads_win.o", "product" => "libcrypto", "srcs" => [ "crypto/threads_win.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/libcrypto-lib-trace.o", "product" => "libcrypto", "srcs" => [ "crypto/trace.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/libcrypto-lib-uid.o", "product" => "libcrypto", "srcs" => [ "crypto/uid.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/md4/libcrypto-lib-md4_dgst.o", "product" => "libcrypto", "srcs" => [ "crypto/md4/md4_dgst.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/md4/libcrypto-lib-md4_one.o", "product" => "libcrypto", "srcs" => [ "crypto/md4/md4_one.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/md5/libcrypto-lib-md5_dgst.o", "product" => "libcrypto", "srcs" => [ "crypto/md5/md5_dgst.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/md5/libcrypto-lib-md5_one.o", "product" => "libcrypto", "srcs" => [ "crypto/md5/md5_one.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/md5/libcrypto-lib-md5_sha1.o", "product" => "libcrypto", "srcs" => [ "crypto/md5/md5_sha1.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/modes/libcrypto-lib-cbc128.o", "product" => "libcrypto", "srcs" => [ "crypto/modes/cbc128.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/modes/libcrypto-lib-ccm128.o", "product" => "libcrypto", "srcs" => [ "crypto/modes/ccm128.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/modes/libcrypto-lib-cfb128.o", "product" => "libcrypto", "srcs" => [ "crypto/modes/cfb128.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/modes/libcrypto-lib-ctr128.o", "product" => "libcrypto", "srcs" => [ "crypto/modes/ctr128.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/modes/libcrypto-lib-cts128.o", "product" => "libcrypto", "srcs" => [ "crypto/modes/cts128.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ "crypto", ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/modes/libcrypto-lib-gcm128.o", "product" => "libcrypto", "srcs" => [ "crypto/modes/gcm128.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/modes/libcrypto-lib-ocb128.o", "product" => "libcrypto", "srcs" => [ "crypto/modes/ocb128.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/modes/libcrypto-lib-ofb128.o", "product" => "libcrypto", "srcs" => [ "crypto/modes/ofb128.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/modes/libcrypto-lib-siv128.o", "product" => "libcrypto", "srcs" => [ "crypto/modes/siv128.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/modes/libcrypto-lib-wrap128.o", "product" => "libcrypto", "srcs" => [ "crypto/modes/wrap128.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/modes/libcrypto-lib-xts128.o", "product" => "libcrypto", "srcs" => [ "crypto/modes/xts128.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/objects/libcrypto-lib-o_names.o", "product" => "libcrypto", "srcs" => [ "crypto/objects/o_names.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/objects/libcrypto-lib-obj_dat.o", "product" => "libcrypto", "srcs" => [ "crypto/objects/obj_dat.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/objects/libcrypto-lib-obj_err.o", "product" => "libcrypto", "srcs" => [ "crypto/objects/obj_err.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/objects/libcrypto-lib-obj_lib.o", "product" => "libcrypto", "srcs" => [ "crypto/objects/obj_lib.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/objects/libcrypto-lib-obj_xref.o", "product" => "libcrypto", "srcs" => [ "crypto/objects/obj_xref.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/ocsp/libcrypto-lib-ocsp_asn.o", "product" => "libcrypto", "srcs" => [ "crypto/ocsp/ocsp_asn.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/ocsp/libcrypto-lib-ocsp_cl.o", "product" => "libcrypto", "srcs" => [ "crypto/ocsp/ocsp_cl.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/ocsp/libcrypto-lib-ocsp_err.o", "product" => "libcrypto", "srcs" => [ "crypto/ocsp/ocsp_err.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/ocsp/libcrypto-lib-ocsp_ext.o", "product" => "libcrypto", "srcs" => [ "crypto/ocsp/ocsp_ext.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/ocsp/libcrypto-lib-ocsp_http.o", "product" => "libcrypto", "srcs" => [ "crypto/ocsp/ocsp_http.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/ocsp/libcrypto-lib-ocsp_lib.o", "product" => "libcrypto", "srcs" => [ "crypto/ocsp/ocsp_lib.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/ocsp/libcrypto-lib-ocsp_prn.o", "product" => "libcrypto", "srcs" => [ "crypto/ocsp/ocsp_prn.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/ocsp/libcrypto-lib-ocsp_srv.o", "product" => "libcrypto", "srcs" => [ "crypto/ocsp/ocsp_srv.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/ocsp/libcrypto-lib-ocsp_vfy.o", "product" => "libcrypto", "srcs" => [ "crypto/ocsp/ocsp_vfy.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/ocsp/libcrypto-lib-v3_ocsp.o", "product" => "libcrypto", "srcs" => [ "crypto/ocsp/v3_ocsp.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/pem/libcrypto-lib-pem_all.o", "product" => "libcrypto", "srcs" => [ "crypto/pem/pem_all.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/pem/libcrypto-lib-pem_err.o", "product" => "libcrypto", "srcs" => [ "crypto/pem/pem_err.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/pem/libcrypto-lib-pem_info.o", "product" => "libcrypto", "srcs" => [ "crypto/pem/pem_info.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/pem/libcrypto-lib-pem_lib.o", "product" => "libcrypto", "srcs" => [ "crypto/pem/pem_lib.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/pem/libcrypto-lib-pem_oth.o", "product" => "libcrypto", "srcs" => [ "crypto/pem/pem_oth.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/pem/libcrypto-lib-pem_pk8.o", "product" => "libcrypto", "srcs" => [ "crypto/pem/pem_pk8.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/pem/libcrypto-lib-pem_pkey.o", "product" => "libcrypto", "srcs" => [ "crypto/pem/pem_pkey.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/pem/libcrypto-lib-pem_sign.o", "product" => "libcrypto", "srcs" => [ "crypto/pem/pem_sign.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/pem/libcrypto-lib-pem_x509.o", "product" => "libcrypto", "srcs" => [ "crypto/pem/pem_x509.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/pem/libcrypto-lib-pem_xaux.o", "product" => "libcrypto", "srcs" => [ "crypto/pem/pem_xaux.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/pem/libcrypto-lib-pvkfmt.o", "product" => "libcrypto", "srcs" => [ "crypto/pem/pvkfmt.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/pkcs12/libcrypto-lib-p12_add.o", "product" => "libcrypto", "srcs" => [ "crypto/pkcs12/p12_add.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/pkcs12/libcrypto-lib-p12_asn.o", "product" => "libcrypto", "srcs" => [ "crypto/pkcs12/p12_asn.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/pkcs12/libcrypto-lib-p12_attr.o", "product" => "libcrypto", "srcs" => [ "crypto/pkcs12/p12_attr.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/pkcs12/libcrypto-lib-p12_crpt.o", "product" => "libcrypto", "srcs" => [ "crypto/pkcs12/p12_crpt.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/pkcs12/libcrypto-lib-p12_crt.o", "product" => "libcrypto", "srcs" => [ "crypto/pkcs12/p12_crt.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/pkcs12/libcrypto-lib-p12_decr.o", "product" => "libcrypto", "srcs" => [ "crypto/pkcs12/p12_decr.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/pkcs12/libcrypto-lib-p12_init.o", "product" => "libcrypto", "srcs" => [ "crypto/pkcs12/p12_init.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/pkcs12/libcrypto-lib-p12_key.o", "product" => "libcrypto", "srcs" => [ "crypto/pkcs12/p12_key.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/pkcs12/libcrypto-lib-p12_kiss.o", "product" => "libcrypto", "srcs" => [ "crypto/pkcs12/p12_kiss.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/pkcs12/libcrypto-lib-p12_mutl.o", "product" => "libcrypto", "srcs" => [ "crypto/pkcs12/p12_mutl.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/pkcs12/libcrypto-lib-p12_npas.o", "product" => "libcrypto", "srcs" => [ "crypto/pkcs12/p12_npas.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/pkcs12/libcrypto-lib-p12_p8d.o", "product" => "libcrypto", "srcs" => [ "crypto/pkcs12/p12_p8d.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/pkcs12/libcrypto-lib-p12_p8e.o", "product" => "libcrypto", "srcs" => [ "crypto/pkcs12/p12_p8e.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/pkcs12/libcrypto-lib-p12_sbag.o", "product" => "libcrypto", "srcs" => [ "crypto/pkcs12/p12_sbag.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/pkcs12/libcrypto-lib-p12_utl.o", "product" => "libcrypto", "srcs" => [ "crypto/pkcs12/p12_utl.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/pkcs12/libcrypto-lib-pk12err.o", "product" => "libcrypto", "srcs" => [ "crypto/pkcs12/pk12err.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/pkcs7/libcrypto-lib-bio_pk7.o", "product" => "libcrypto", "srcs" => [ "crypto/pkcs7/bio_pk7.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/pkcs7/libcrypto-lib-pk7_asn1.o", "product" => "libcrypto", "srcs" => [ "crypto/pkcs7/pk7_asn1.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/pkcs7/libcrypto-lib-pk7_attr.o", "product" => "libcrypto", "srcs" => [ "crypto/pkcs7/pk7_attr.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/pkcs7/libcrypto-lib-pk7_doit.o", "product" => "libcrypto", "srcs" => [ "crypto/pkcs7/pk7_doit.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/pkcs7/libcrypto-lib-pk7_lib.o", "product" => "libcrypto", "srcs" => [ "crypto/pkcs7/pk7_lib.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/pkcs7/libcrypto-lib-pk7_mime.o", "product" => "libcrypto", "srcs" => [ "crypto/pkcs7/pk7_mime.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/pkcs7/libcrypto-lib-pk7_smime.o", "product" => "libcrypto", "srcs" => [ "crypto/pkcs7/pk7_smime.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/pkcs7/libcrypto-lib-pkcs7err.o", "product" => "libcrypto", "srcs" => [ "crypto/pkcs7/pkcs7err.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/property/libcrypto-lib-defn_cache.o", "product" => "libcrypto", "srcs" => [ "crypto/property/defn_cache.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/property/libcrypto-lib-property.o", "product" => "libcrypto", "srcs" => [ "crypto/property/property.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/property/libcrypto-lib-property_err.o", "product" => "libcrypto", "srcs" => [ "crypto/property/property_err.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/property/libcrypto-lib-property_parse.o", "product" => "libcrypto", "srcs" => [ "crypto/property/property_parse.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/property/libcrypto-lib-property_query.o", "product" => "libcrypto", "srcs" => [ "crypto/property/property_query.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/property/libcrypto-lib-property_string.o", "product" => "libcrypto", "srcs" => [ "crypto/property/property_string.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/rand/libcrypto-lib-prov_seed.o", "product" => "libcrypto", "srcs" => [ "crypto/rand/prov_seed.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/rand/libcrypto-lib-rand_deprecated.o", "product" => "libcrypto", "srcs" => [ "crypto/rand/rand_deprecated.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/rand/libcrypto-lib-rand_err.o", "product" => "libcrypto", "srcs" => [ "crypto/rand/rand_err.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/rand/libcrypto-lib-rand_lib.o", "product" => "libcrypto", "srcs" => [ "crypto/rand/rand_lib.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/rand/libcrypto-lib-rand_meth.o", "product" => "libcrypto", "srcs" => [ "crypto/rand/rand_meth.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/rand/libcrypto-lib-rand_pool.o", "product" => "libcrypto", "srcs" => [ "crypto/rand/rand_pool.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/rand/libcrypto-lib-randfile.o", "product" => "libcrypto", "srcs" => [ "crypto/rand/randfile.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/rc2/libcrypto-lib-rc2_cbc.o", "product" => "libcrypto", "srcs" => [ "crypto/rc2/rc2_cbc.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/rc2/libcrypto-lib-rc2_ecb.o", "product" => "libcrypto", "srcs" => [ "crypto/rc2/rc2_ecb.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/rc2/libcrypto-lib-rc2_skey.o", "product" => "libcrypto", "srcs" => [ "crypto/rc2/rc2_skey.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/rc2/libcrypto-lib-rc2cfb64.o", "product" => "libcrypto", "srcs" => [ "crypto/rc2/rc2cfb64.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/rc2/libcrypto-lib-rc2ofb64.o", "product" => "libcrypto", "srcs" => [ "crypto/rc2/rc2ofb64.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/rc4/libcrypto-lib-rc4_enc.o", "product" => "libcrypto", "srcs" => [ "crypto/rc4/rc4_enc.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/rc4/libcrypto-lib-rc4_skey.o", "product" => "libcrypto", "srcs" => [ "crypto/rc4/rc4_skey.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/ripemd/libcrypto-lib-rmd_dgst.o", "product" => "libcrypto", "srcs" => [ "crypto/ripemd/rmd_dgst.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/ripemd/libcrypto-lib-rmd_one.o", "product" => "libcrypto", "srcs" => [ "crypto/ripemd/rmd_one.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/rsa/libcrypto-lib-rsa_ameth.o", "product" => "libcrypto", "srcs" => [ "crypto/rsa/rsa_ameth.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/rsa/libcrypto-lib-rsa_asn1.o", "product" => "libcrypto", "srcs" => [ "crypto/rsa/rsa_asn1.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/rsa/libcrypto-lib-rsa_backend.o", "product" => "libcrypto", "srcs" => [ "crypto/rsa/rsa_backend.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/rsa/libcrypto-lib-rsa_chk.o", "product" => "libcrypto", "srcs" => [ "crypto/rsa/rsa_chk.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/rsa/libcrypto-lib-rsa_crpt.o", "product" => "libcrypto", "srcs" => [ "crypto/rsa/rsa_crpt.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/rsa/libcrypto-lib-rsa_depr.o", "product" => "libcrypto", "srcs" => [ "crypto/rsa/rsa_depr.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/rsa/libcrypto-lib-rsa_err.o", "product" => "libcrypto", "srcs" => [ "crypto/rsa/rsa_err.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/rsa/libcrypto-lib-rsa_gen.o", "product" => "libcrypto", "srcs" => [ "crypto/rsa/rsa_gen.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/rsa/libcrypto-lib-rsa_lib.o", "product" => "libcrypto", "srcs" => [ "crypto/rsa/rsa_lib.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/rsa/libcrypto-lib-rsa_meth.o", "product" => "libcrypto", "srcs" => [ "crypto/rsa/rsa_meth.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/rsa/libcrypto-lib-rsa_mp.o", "product" => "libcrypto", "srcs" => [ "crypto/rsa/rsa_mp.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/rsa/libcrypto-lib-rsa_mp_names.o", "product" => "libcrypto", "srcs" => [ "crypto/rsa/rsa_mp_names.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/rsa/libcrypto-lib-rsa_none.o", "product" => "libcrypto", "srcs" => [ "crypto/rsa/rsa_none.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/rsa/libcrypto-lib-rsa_oaep.o", "product" => "libcrypto", "srcs" => [ "crypto/rsa/rsa_oaep.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/rsa/libcrypto-lib-rsa_ossl.o", "product" => "libcrypto", "srcs" => [ "crypto/rsa/rsa_ossl.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/rsa/libcrypto-lib-rsa_pk1.o", "product" => "libcrypto", "srcs" => [ "crypto/rsa/rsa_pk1.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/rsa/libcrypto-lib-rsa_pmeth.o", "product" => "libcrypto", "srcs" => [ "crypto/rsa/rsa_pmeth.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/rsa/libcrypto-lib-rsa_prn.o", "product" => "libcrypto", "srcs" => [ "crypto/rsa/rsa_prn.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/rsa/libcrypto-lib-rsa_pss.o", "product" => "libcrypto", "srcs" => [ "crypto/rsa/rsa_pss.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/rsa/libcrypto-lib-rsa_saos.o", "product" => "libcrypto", "srcs" => [ "crypto/rsa/rsa_saos.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/rsa/libcrypto-lib-rsa_schemes.o", "product" => "libcrypto", "srcs" => [ "crypto/rsa/rsa_schemes.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/rsa/libcrypto-lib-rsa_sign.o", "product" => "libcrypto", "srcs" => [ "crypto/rsa/rsa_sign.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/rsa/libcrypto-lib-rsa_sp800_56b_check.o", "product" => "libcrypto", "srcs" => [ "crypto/rsa/rsa_sp800_56b_check.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/rsa/libcrypto-lib-rsa_sp800_56b_gen.o", "product" => "libcrypto", "srcs" => [ "crypto/rsa/rsa_sp800_56b_gen.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/rsa/libcrypto-lib-rsa_x931.o", "product" => "libcrypto", "srcs" => [ "crypto/rsa/rsa_x931.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/rsa/libcrypto-lib-rsa_x931g.o", "product" => "libcrypto", "srcs" => [ "crypto/rsa/rsa_x931g.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/sha/libcrypto-lib-keccak1600.o", "product" => "libcrypto", "srcs" => [ "crypto/sha/keccak1600.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/sha/libcrypto-lib-sha1_one.o", "product" => "libcrypto", "srcs" => [ "crypto/sha/sha1_one.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/sha/libcrypto-lib-sha1dgst.o", "product" => "libcrypto", "srcs" => [ "crypto/sha/sha1dgst.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/sha/libcrypto-lib-sha256.o", "product" => "libcrypto", "srcs" => [ "crypto/sha/sha256.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/sha/libcrypto-lib-sha3.o", "product" => "libcrypto", "srcs" => [ "crypto/sha/sha3.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/sha/libcrypto-lib-sha512.o", "product" => "libcrypto", "srcs" => [ "crypto/sha/sha512.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/siphash/libcrypto-lib-siphash.o", "product" => "libcrypto", "srcs" => [ "crypto/siphash/siphash.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/stack/libcrypto-lib-stack.o", "product" => "libcrypto", "srcs" => [ "crypto/stack/stack.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/store/libcrypto-lib-store_err.o", "product" => "libcrypto", "srcs" => [ "crypto/store/store_err.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/store/libcrypto-lib-store_init.o", "product" => "libcrypto", "srcs" => [ "crypto/store/store_init.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/store/libcrypto-lib-store_lib.o", "product" => "libcrypto", "srcs" => [ "crypto/store/store_lib.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/store/libcrypto-lib-store_meth.o", "product" => "libcrypto", "srcs" => [ "crypto/store/store_meth.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/store/libcrypto-lib-store_register.o", "product" => "libcrypto", "srcs" => [ "crypto/store/store_register.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/store/libcrypto-lib-store_result.o", "product" => "libcrypto", "srcs" => [ "crypto/store/store_result.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/store/libcrypto-lib-store_strings.o", "product" => "libcrypto", "srcs" => [ "crypto/store/store_strings.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/ts/libcrypto-lib-ts_asn1.o", "product" => "libcrypto", "srcs" => [ "crypto/ts/ts_asn1.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/ts/libcrypto-lib-ts_conf.o", "product" => "libcrypto", "srcs" => [ "crypto/ts/ts_conf.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/ts/libcrypto-lib-ts_err.o", "product" => "libcrypto", "srcs" => [ "crypto/ts/ts_err.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/ts/libcrypto-lib-ts_lib.o", "product" => "libcrypto", "srcs" => [ "crypto/ts/ts_lib.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/ts/libcrypto-lib-ts_req_print.o", "product" => "libcrypto", "srcs" => [ "crypto/ts/ts_req_print.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/ts/libcrypto-lib-ts_req_utils.o", "product" => "libcrypto", "srcs" => [ "crypto/ts/ts_req_utils.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/ts/libcrypto-lib-ts_rsp_print.o", "product" => "libcrypto", "srcs" => [ "crypto/ts/ts_rsp_print.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/ts/libcrypto-lib-ts_rsp_sign.o", "product" => "libcrypto", "srcs" => [ "crypto/ts/ts_rsp_sign.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/ts/libcrypto-lib-ts_rsp_utils.o", "product" => "libcrypto", "srcs" => [ "crypto/ts/ts_rsp_utils.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/ts/libcrypto-lib-ts_rsp_verify.o", "product" => "libcrypto", "srcs" => [ "crypto/ts/ts_rsp_verify.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/ts/libcrypto-lib-ts_verify_ctx.o", "product" => "libcrypto", "srcs" => [ "crypto/ts/ts_verify_ctx.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/txt_db/libcrypto-lib-txt_db.o", "product" => "libcrypto", "srcs" => [ "crypto/txt_db/txt_db.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/ui/libcrypto-lib-ui_err.o", "product" => "libcrypto", "srcs" => [ "crypto/ui/ui_err.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/ui/libcrypto-lib-ui_lib.o", "product" => "libcrypto", "srcs" => [ "crypto/ui/ui_lib.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/ui/libcrypto-lib-ui_null.o", "product" => "libcrypto", "srcs" => [ "crypto/ui/ui_null.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/ui/libcrypto-lib-ui_openssl.o", "product" => "libcrypto", "srcs" => [ "crypto/ui/ui_openssl.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/ui/libcrypto-lib-ui_util.o", "product" => "libcrypto", "srcs" => [ "crypto/ui/ui_util.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/x509/libcrypto-lib-by_dir.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/by_dir.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/x509/libcrypto-lib-by_file.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/by_file.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/x509/libcrypto-lib-by_store.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/by_store.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/x509/libcrypto-lib-pcy_cache.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/pcy_cache.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/x509/libcrypto-lib-pcy_data.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/pcy_data.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/x509/libcrypto-lib-pcy_lib.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/pcy_lib.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/x509/libcrypto-lib-pcy_map.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/pcy_map.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/x509/libcrypto-lib-pcy_node.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/pcy_node.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/x509/libcrypto-lib-pcy_tree.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/pcy_tree.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/x509/libcrypto-lib-t_crl.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/t_crl.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/x509/libcrypto-lib-t_req.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/t_req.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/x509/libcrypto-lib-t_x509.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/t_x509.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/x509/libcrypto-lib-v3_addr.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/v3_addr.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/x509/libcrypto-lib-v3_admis.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/v3_admis.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/x509/libcrypto-lib-v3_akeya.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/v3_akeya.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/x509/libcrypto-lib-v3_akid.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/v3_akid.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/x509/libcrypto-lib-v3_asid.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/v3_asid.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/x509/libcrypto-lib-v3_bcons.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/v3_bcons.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/x509/libcrypto-lib-v3_bitst.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/v3_bitst.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/x509/libcrypto-lib-v3_conf.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/v3_conf.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/x509/libcrypto-lib-v3_cpols.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/v3_cpols.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/x509/libcrypto-lib-v3_crld.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/v3_crld.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/x509/libcrypto-lib-v3_enum.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/v3_enum.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/x509/libcrypto-lib-v3_extku.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/v3_extku.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/x509/libcrypto-lib-v3_genn.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/v3_genn.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/x509/libcrypto-lib-v3_ia5.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/v3_ia5.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/x509/libcrypto-lib-v3_info.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/v3_info.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/x509/libcrypto-lib-v3_int.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/v3_int.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/x509/libcrypto-lib-v3_ist.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/v3_ist.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/x509/libcrypto-lib-v3_lib.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/v3_lib.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/x509/libcrypto-lib-v3_ncons.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/v3_ncons.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/x509/libcrypto-lib-v3_pci.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/v3_pci.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/x509/libcrypto-lib-v3_pcia.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/v3_pcia.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/x509/libcrypto-lib-v3_pcons.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/v3_pcons.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/x509/libcrypto-lib-v3_pku.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/v3_pku.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/x509/libcrypto-lib-v3_pmaps.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/v3_pmaps.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/x509/libcrypto-lib-v3_prn.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/v3_prn.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/x509/libcrypto-lib-v3_purp.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/v3_purp.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/x509/libcrypto-lib-v3_san.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/v3_san.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/x509/libcrypto-lib-v3_skid.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/v3_skid.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/x509/libcrypto-lib-v3_sxnet.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/v3_sxnet.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/x509/libcrypto-lib-v3_tlsf.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/v3_tlsf.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/x509/libcrypto-lib-v3_utf8.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/v3_utf8.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/x509/libcrypto-lib-v3_utl.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/v3_utl.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/x509/libcrypto-lib-v3err.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/v3err.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/x509/libcrypto-lib-x509_att.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/x509_att.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/x509/libcrypto-lib-x509_cmp.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/x509_cmp.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/x509/libcrypto-lib-x509_d2.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/x509_d2.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/x509/libcrypto-lib-x509_def.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/x509_def.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/x509/libcrypto-lib-x509_err.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/x509_err.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/x509/libcrypto-lib-x509_ext.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/x509_ext.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/x509/libcrypto-lib-x509_lu.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/x509_lu.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/x509/libcrypto-lib-x509_meth.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/x509_meth.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/x509/libcrypto-lib-x509_obj.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/x509_obj.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/x509/libcrypto-lib-x509_r2x.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/x509_r2x.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/x509/libcrypto-lib-x509_req.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/x509_req.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/x509/libcrypto-lib-x509_set.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/x509_set.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/x509/libcrypto-lib-x509_trust.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/x509_trust.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/x509/libcrypto-lib-x509_txt.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/x509_txt.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/x509/libcrypto-lib-x509_v3.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/x509_v3.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/x509/libcrypto-lib-x509_vfy.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/x509_vfy.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/x509/libcrypto-lib-x509_vpm.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/x509_vpm.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/x509/libcrypto-lib-x509cset.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/x509cset.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/x509/libcrypto-lib-x509name.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/x509name.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/x509/libcrypto-lib-x509rset.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/x509rset.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/x509/libcrypto-lib-x509spki.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/x509spki.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/x509/libcrypto-lib-x509type.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/x509type.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/x509/libcrypto-lib-x_all.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/x_all.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/x509/libcrypto-lib-x_attrib.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/x_attrib.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/x509/libcrypto-lib-x_crl.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/x_crl.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/x509/libcrypto-lib-x_exten.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/x_exten.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/x509/libcrypto-lib-x_name.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/x_name.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/x509/libcrypto-lib-x_pubkey.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/x_pubkey.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/x509/libcrypto-lib-x_req.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/x_req.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/x509/libcrypto-lib-x_x509.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/x_x509.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "crypto/x509/libcrypto-lib-x_x509a.o", "product" => "libcrypto", "srcs" => [ "crypto/x509/x_x509a.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "providers/libcrypto-lib-baseprov.o", "product" => "libcrypto", "srcs" => [ "providers/baseprov.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "providers/libcrypto-lib-defltprov.o", "product" => "libcrypto", "srcs" => [ "providers/defltprov.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "providers/libcrypto-lib-nullprov.o", "product" => "libcrypto", "srcs" => [ "providers/nullprov.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/common/include", "providers/implementations/include" ], "intent" => "lib", "obj" => "providers/libcrypto-lib-prov_running.o", "product" => "libcrypto", "srcs" => [ "providers/prov_running.c" ] ); 
-}{-
 obj2shlib( "attrs" => {}, "deps" => [ "libcrypto" ], "lib" => "libssl", "objs" => [ "crypto/libssl-shlib-packet.o", "libssl.ld", "ssl/libssl-shlib-bio_ssl.o", "ssl/libssl-shlib-d1_lib.o", "ssl/libssl-shlib-d1_msg.o", "ssl/libssl-shlib-d1_srtp.o", "ssl/libssl-shlib-methods.o", "ssl/libssl-shlib-pqueue.o", "ssl/libssl-shlib-s3_cbc.o", "ssl/libssl-shlib-s3_enc.o", "ssl/libssl-shlib-s3_lib.o", "ssl/libssl-shlib-s3_msg.o", "ssl/libssl-shlib-ssl_asn1.o", "ssl/libssl-shlib-ssl_cert.o", "ssl/libssl-shlib-ssl_ciph.o", "ssl/libssl-shlib-ssl_conf.o", "ssl/libssl-shlib-ssl_err.o", "ssl/libssl-shlib-ssl_err_legacy.o", "ssl/libssl-shlib-ssl_init.o", "ssl/libssl-shlib-ssl_lib.o", "ssl/libssl-shlib-ssl_mcnf.o", "ssl/libssl-shlib-ssl_rsa.o", "ssl/libssl-shlib-ssl_rsa_legacy.o", "ssl/libssl-shlib-ssl_sess.o", "ssl/libssl-shlib-ssl_stat.o", "ssl/libssl-shlib-ssl_txt.o", "ssl/libssl-shlib-ssl_utst.o", "ssl/libssl-shlib-t1_enc.o", "ssl/libssl-shlib-t1_lib.o", "ssl/libssl-shlib-t1_trce.o", "ssl/libssl-shlib-tls13_enc.o", "ssl/libssl-shlib-tls_depr.o", "ssl/libssl-shlib-tls_srp.o", "ssl/record/libssl-shlib-dtls1_bitmap.o", "ssl/record/libssl-shlib-rec_layer_d1.o", "ssl/record/libssl-shlib-rec_layer_s3.o", "ssl/record/libssl-shlib-ssl3_buffer.o", "ssl/record/libssl-shlib-ssl3_record.o", "ssl/record/libssl-shlib-ssl3_record_tls13.o", "ssl/record/libssl-shlib-tls_pad.o", "ssl/statem/libssl-shlib-extensions.o", "ssl/statem/libssl-shlib-extensions_clnt.o", "ssl/statem/libssl-shlib-extensions_cust.o", "ssl/statem/libssl-shlib-extensions_srvr.o", "ssl/statem/libssl-shlib-statem.o", "ssl/statem/libssl-shlib-statem_clnt.o", "ssl/statem/libssl-shlib-statem_dtls.o", "ssl/statem/libssl-shlib-statem_lib.o", "ssl/statem/libssl-shlib-statem_srvr.o" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include" ], "intent" => "shlib", "obj" => "crypto/libssl-shlib-packet.o", "product" => "libssl", "srcs" => [ "crypto/packet.c" ] ); 
-}{-
 generatesrc( "attrs" => {}, "defs" => [], "deps" => [ "configdata.pm", "util/perl/OpenSSL/Ordinals.pm" ], "generator" => [ "util/libssl.num", "libssl" ], "generator_deps" => [], "generator_incs" => [], "incs" => [], "intent" => "lib", "product" => undef, "src" => "libssl.ld" ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include" ], "intent" => "shlib", "obj" => "ssl/libssl-shlib-bio_ssl.o", "product" => "libssl", "srcs" => [ "ssl/bio_ssl.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include" ], "intent" => "shlib", "obj" => "ssl/libssl-shlib-d1_lib.o", "product" => "libssl", "srcs" => [ "ssl/d1_lib.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include" ], "intent" => "shlib", "obj" => "ssl/libssl-shlib-d1_msg.o", "product" => "libssl", "srcs" => [ "ssl/d1_msg.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include" ], "intent" => "shlib", "obj" => "ssl/libssl-shlib-d1_srtp.o", "product" => "libssl", "srcs" => [ "ssl/d1_srtp.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include" ], "intent" => "shlib", "obj" => "ssl/libssl-shlib-methods.o", "product" => "libssl", "srcs" => [ "ssl/methods.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include" ], "intent" => "shlib", "obj" => "ssl/libssl-shlib-pqueue.o", "product" => "libssl", "srcs" => [ "ssl/pqueue.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include" ], "intent" => "shlib", "obj" => "ssl/libssl-shlib-s3_cbc.o", "product" => "libssl", "srcs" => [ "ssl/s3_cbc.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include" ], "intent" => "shlib", "obj" => "ssl/libssl-shlib-s3_enc.o", "product" => "libssl", "srcs" => [ "ssl/s3_enc.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include" ], "intent" => "shlib", "obj" => "ssl/libssl-shlib-s3_lib.o", "product" => "libssl", "srcs" => [ "ssl/s3_lib.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include" ], "intent" => "shlib", "obj" => "ssl/libssl-shlib-s3_msg.o", "product" => "libssl", "srcs" => [ "ssl/s3_msg.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include" ], "intent" => "shlib", "obj" => "ssl/libssl-shlib-ssl_asn1.o", "product" => "libssl", "srcs" => [ "ssl/ssl_asn1.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include" ], "intent" => "shlib", "obj" => "ssl/libssl-shlib-ssl_cert.o", "product" => "libssl", "srcs" => [ "ssl/ssl_cert.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include" ], "intent" => "shlib", "obj" => "ssl/libssl-shlib-ssl_ciph.o", "product" => "libssl", "srcs" => [ "ssl/ssl_ciph.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include" ], "intent" => "shlib", "obj" => "ssl/libssl-shlib-ssl_conf.o", "product" => "libssl", "srcs" => [ "ssl/ssl_conf.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include" ], "intent" => "shlib", "obj" => "ssl/libssl-shlib-ssl_err.o", "product" => "libssl", "srcs" => [ "ssl/ssl_err.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include" ], "intent" => "shlib", "obj" => "ssl/libssl-shlib-ssl_err_legacy.o", "product" => "libssl", "srcs" => [ "ssl/ssl_err_legacy.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include" ], "intent" => "shlib", "obj" => "ssl/libssl-shlib-ssl_init.o", "product" => "libssl", "srcs" => [ "ssl/ssl_init.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include" ], "intent" => "shlib", "obj" => "ssl/libssl-shlib-ssl_lib.o", "product" => "libssl", "srcs" => [ "ssl/ssl_lib.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include" ], "intent" => "shlib", "obj" => "ssl/libssl-shlib-ssl_mcnf.o", "product" => "libssl", "srcs" => [ "ssl/ssl_mcnf.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include" ], "intent" => "shlib", "obj" => "ssl/libssl-shlib-ssl_rsa.o", "product" => "libssl", "srcs" => [ "ssl/ssl_rsa.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include" ], "intent" => "shlib", "obj" => "ssl/libssl-shlib-ssl_rsa_legacy.o", "product" => "libssl", "srcs" => [ "ssl/ssl_rsa_legacy.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include" ], "intent" => "shlib", "obj" => "ssl/libssl-shlib-ssl_sess.o", "product" => "libssl", "srcs" => [ "ssl/ssl_sess.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include" ], "intent" => "shlib", "obj" => "ssl/libssl-shlib-ssl_stat.o", "product" => "libssl", "srcs" => [ "ssl/ssl_stat.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include" ], "intent" => "shlib", "obj" => "ssl/libssl-shlib-ssl_txt.o", "product" => "libssl", "srcs" => [ "ssl/ssl_txt.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include" ], "intent" => "shlib", "obj" => "ssl/libssl-shlib-ssl_utst.o", "product" => "libssl", "srcs" => [ "ssl/ssl_utst.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include" ], "intent" => "shlib", "obj" => "ssl/libssl-shlib-t1_enc.o", "product" => "libssl", "srcs" => [ "ssl/t1_enc.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include" ], "intent" => "shlib", "obj" => "ssl/libssl-shlib-t1_lib.o", "product" => "libssl", "srcs" => [ "ssl/t1_lib.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include" ], "intent" => "shlib", "obj" => "ssl/libssl-shlib-t1_trce.o", "product" => "libssl", "srcs" => [ "ssl/t1_trce.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include" ], "intent" => "shlib", "obj" => "ssl/libssl-shlib-tls13_enc.o", "product" => "libssl", "srcs" => [ "ssl/tls13_enc.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include" ], "intent" => "shlib", "obj" => "ssl/libssl-shlib-tls_depr.o", "product" => "libssl", "srcs" => [ "ssl/tls_depr.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include" ], "intent" => "shlib", "obj" => "ssl/libssl-shlib-tls_srp.o", "product" => "libssl", "srcs" => [ "ssl/tls_srp.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include" ], "intent" => "shlib", "obj" => "ssl/record/libssl-shlib-dtls1_bitmap.o", "product" => "libssl", "srcs" => [ "ssl/record/dtls1_bitmap.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include" ], "intent" => "shlib", "obj" => "ssl/record/libssl-shlib-rec_layer_d1.o", "product" => "libssl", "srcs" => [ "ssl/record/rec_layer_d1.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include" ], "intent" => "shlib", "obj" => "ssl/record/libssl-shlib-rec_layer_s3.o", "product" => "libssl", "srcs" => [ "ssl/record/rec_layer_s3.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include" ], "intent" => "shlib", "obj" => "ssl/record/libssl-shlib-ssl3_buffer.o", "product" => "libssl", "srcs" => [ "ssl/record/ssl3_buffer.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include" ], "intent" => "shlib", "obj" => "ssl/record/libssl-shlib-ssl3_record.o", "product" => "libssl", "srcs" => [ "ssl/record/ssl3_record.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include" ], "intent" => "shlib", "obj" => "ssl/record/libssl-shlib-ssl3_record_tls13.o", "product" => "libssl", "srcs" => [ "ssl/record/ssl3_record_tls13.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include" ], "intent" => "shlib", "obj" => "ssl/record/libssl-shlib-tls_pad.o", "product" => "libssl", "srcs" => [ "ssl/record/tls_pad.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include" ], "intent" => "shlib", "obj" => "ssl/statem/libssl-shlib-extensions.o", "product" => "libssl", "srcs" => [ "ssl/statem/extensions.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include" ], "intent" => "shlib", "obj" => "ssl/statem/libssl-shlib-extensions_clnt.o", "product" => "libssl", "srcs" => [ "ssl/statem/extensions_clnt.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include" ], "intent" => "shlib", "obj" => "ssl/statem/libssl-shlib-extensions_cust.o", "product" => "libssl", "srcs" => [ "ssl/statem/extensions_cust.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include" ], "intent" => "shlib", "obj" => "ssl/statem/libssl-shlib-extensions_srvr.o", "product" => "libssl", "srcs" => [ "ssl/statem/extensions_srvr.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include" ], "intent" => "shlib", "obj" => "ssl/statem/libssl-shlib-statem.o", "product" => "libssl", "srcs" => [ "ssl/statem/statem.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include" ], "intent" => "shlib", "obj" => "ssl/statem/libssl-shlib-statem_clnt.o", "product" => "libssl", "srcs" => [ "ssl/statem/statem_clnt.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include" ], "intent" => "shlib", "obj" => "ssl/statem/libssl-shlib-statem_dtls.o", "product" => "libssl", "srcs" => [ "ssl/statem/statem_dtls.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include" ], "intent" => "shlib", "obj" => "ssl/statem/libssl-shlib-statem_lib.o", "product" => "libssl", "srcs" => [ "ssl/statem/statem_lib.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include" ], "intent" => "shlib", "obj" => "ssl/statem/libssl-shlib-statem_srvr.o", "product" => "libssl", "srcs" => [ "ssl/statem/statem_srvr.c" ] ); 
-}{-
 obj2lib( "attrs" => {}, "lib" => "libssl", "objs" => [ "ssl/libssl-lib-bio_ssl.o", "ssl/libssl-lib-d1_lib.o", "ssl/libssl-lib-d1_msg.o", "ssl/libssl-lib-d1_srtp.o", "ssl/libssl-lib-methods.o", "ssl/libssl-lib-pqueue.o", "ssl/libssl-lib-s3_enc.o", "ssl/libssl-lib-s3_lib.o", "ssl/libssl-lib-s3_msg.o", "ssl/libssl-lib-ssl_asn1.o", "ssl/libssl-lib-ssl_cert.o", "ssl/libssl-lib-ssl_ciph.o", "ssl/libssl-lib-ssl_conf.o", "ssl/libssl-lib-ssl_err.o", "ssl/libssl-lib-ssl_err_legacy.o", "ssl/libssl-lib-ssl_init.o", "ssl/libssl-lib-ssl_lib.o", "ssl/libssl-lib-ssl_mcnf.o", "ssl/libssl-lib-ssl_rsa.o", "ssl/libssl-lib-ssl_rsa_legacy.o", "ssl/libssl-lib-ssl_sess.o", "ssl/libssl-lib-ssl_stat.o", "ssl/libssl-lib-ssl_txt.o", "ssl/libssl-lib-ssl_utst.o", "ssl/libssl-lib-t1_enc.o", "ssl/libssl-lib-t1_lib.o", "ssl/libssl-lib-t1_trce.o", "ssl/libssl-lib-tls13_enc.o", "ssl/libssl-lib-tls_depr.o", "ssl/libssl-lib-tls_srp.o", "ssl/record/libssl-lib-dtls1_bitmap.o", "ssl/record/libssl-lib-rec_layer_d1.o", "ssl/record/libssl-lib-rec_layer_s3.o", "ssl/record/libssl-lib-ssl3_buffer.o", "ssl/record/libssl-lib-ssl3_record.o", "ssl/record/libssl-lib-ssl3_record_tls13.o", "ssl/statem/libssl-lib-extensions.o", "ssl/statem/libssl-lib-extensions_clnt.o", "ssl/statem/libssl-lib-extensions_cust.o", "ssl/statem/libssl-lib-extensions_srvr.o", "ssl/statem/libssl-lib-statem.o", "ssl/statem/libssl-lib-statem_clnt.o", "ssl/statem/libssl-lib-statem_dtls.o", "ssl/statem/libssl-lib-statem_lib.o", "ssl/statem/libssl-lib-statem_srvr.o" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include" ], "intent" => "lib", "obj" => "ssl/libssl-lib-bio_ssl.o", "product" => "libssl", "srcs" => [ "ssl/bio_ssl.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include" ], "intent" => "lib", "obj" => "ssl/libssl-lib-d1_lib.o", "product" => "libssl", "srcs" => [ "ssl/d1_lib.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include" ], "intent" => "lib", "obj" => "ssl/libssl-lib-d1_msg.o", "product" => "libssl", "srcs" => [ "ssl/d1_msg.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include" ], "intent" => "lib", "obj" => "ssl/libssl-lib-d1_srtp.o", "product" => "libssl", "srcs" => [ "ssl/d1_srtp.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include" ], "intent" => "lib", "obj" => "ssl/libssl-lib-methods.o", "product" => "libssl", "srcs" => [ "ssl/methods.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include" ], "intent" => "lib", "obj" => "ssl/libssl-lib-pqueue.o", "product" => "libssl", "srcs" => [ "ssl/pqueue.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include" ], "intent" => "lib", "obj" => "ssl/libssl-lib-s3_enc.o", "product" => "libssl", "srcs" => [ "ssl/s3_enc.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include" ], "intent" => "lib", "obj" => "ssl/libssl-lib-s3_lib.o", "product" => "libssl", "srcs" => [ "ssl/s3_lib.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include" ], "intent" => "lib", "obj" => "ssl/libssl-lib-s3_msg.o", "product" => "libssl", "srcs" => [ "ssl/s3_msg.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include" ], "intent" => "lib", "obj" => "ssl/libssl-lib-ssl_asn1.o", "product" => "libssl", "srcs" => [ "ssl/ssl_asn1.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include" ], "intent" => "lib", "obj" => "ssl/libssl-lib-ssl_cert.o", "product" => "libssl", "srcs" => [ "ssl/ssl_cert.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include" ], "intent" => "lib", "obj" => "ssl/libssl-lib-ssl_ciph.o", "product" => "libssl", "srcs" => [ "ssl/ssl_ciph.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include" ], "intent" => "lib", "obj" => "ssl/libssl-lib-ssl_conf.o", "product" => "libssl", "srcs" => [ "ssl/ssl_conf.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include" ], "intent" => "lib", "obj" => "ssl/libssl-lib-ssl_err.o", "product" => "libssl", "srcs" => [ "ssl/ssl_err.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include" ], "intent" => "lib", "obj" => "ssl/libssl-lib-ssl_err_legacy.o", "product" => "libssl", "srcs" => [ "ssl/ssl_err_legacy.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include" ], "intent" => "lib", "obj" => "ssl/libssl-lib-ssl_init.o", "product" => "libssl", "srcs" => [ "ssl/ssl_init.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include" ], "intent" => "lib", "obj" => "ssl/libssl-lib-ssl_lib.o", "product" => "libssl", "srcs" => [ "ssl/ssl_lib.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include" ], "intent" => "lib", "obj" => "ssl/libssl-lib-ssl_mcnf.o", "product" => "libssl", "srcs" => [ "ssl/ssl_mcnf.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include" ], "intent" => "lib", "obj" => "ssl/libssl-lib-ssl_rsa.o", "product" => "libssl", "srcs" => [ "ssl/ssl_rsa.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include" ], "intent" => "lib", "obj" => "ssl/libssl-lib-ssl_rsa_legacy.o", "product" => "libssl", "srcs" => [ "ssl/ssl_rsa_legacy.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include" ], "intent" => "lib", "obj" => "ssl/libssl-lib-ssl_sess.o", "product" => "libssl", "srcs" => [ "ssl/ssl_sess.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include" ], "intent" => "lib", "obj" => "ssl/libssl-lib-ssl_stat.o", "product" => "libssl", "srcs" => [ "ssl/ssl_stat.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include" ], "intent" => "lib", "obj" => "ssl/libssl-lib-ssl_txt.o", "product" => "libssl", "srcs" => [ "ssl/ssl_txt.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include" ], "intent" => "lib", "obj" => "ssl/libssl-lib-ssl_utst.o", "product" => "libssl", "srcs" => [ "ssl/ssl_utst.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include" ], "intent" => "lib", "obj" => "ssl/libssl-lib-t1_enc.o", "product" => "libssl", "srcs" => [ "ssl/t1_enc.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include" ], "intent" => "lib", "obj" => "ssl/libssl-lib-t1_lib.o", "product" => "libssl", "srcs" => [ "ssl/t1_lib.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include" ], "intent" => "lib", "obj" => "ssl/libssl-lib-t1_trce.o", "product" => "libssl", "srcs" => [ "ssl/t1_trce.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include" ], "intent" => "lib", "obj" => "ssl/libssl-lib-tls13_enc.o", "product" => "libssl", "srcs" => [ "ssl/tls13_enc.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include" ], "intent" => "lib", "obj" => "ssl/libssl-lib-tls_depr.o", "product" => "libssl", "srcs" => [ "ssl/tls_depr.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include" ], "intent" => "lib", "obj" => "ssl/libssl-lib-tls_srp.o", "product" => "libssl", "srcs" => [ "ssl/tls_srp.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include" ], "intent" => "lib", "obj" => "ssl/record/libssl-lib-dtls1_bitmap.o", "product" => "libssl", "srcs" => [ "ssl/record/dtls1_bitmap.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include" ], "intent" => "lib", "obj" => "ssl/record/libssl-lib-rec_layer_d1.o", "product" => "libssl", "srcs" => [ "ssl/record/rec_layer_d1.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include" ], "intent" => "lib", "obj" => "ssl/record/libssl-lib-rec_layer_s3.o", "product" => "libssl", "srcs" => [ "ssl/record/rec_layer_s3.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include" ], "intent" => "lib", "obj" => "ssl/record/libssl-lib-ssl3_buffer.o", "product" => "libssl", "srcs" => [ "ssl/record/ssl3_buffer.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include" ], "intent" => "lib", "obj" => "ssl/record/libssl-lib-ssl3_record.o", "product" => "libssl", "srcs" => [ "ssl/record/ssl3_record.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include" ], "intent" => "lib", "obj" => "ssl/record/libssl-lib-ssl3_record_tls13.o", "product" => "libssl", "srcs" => [ "ssl/record/ssl3_record_tls13.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include" ], "intent" => "lib", "obj" => "ssl/statem/libssl-lib-extensions.o", "product" => "libssl", "srcs" => [ "ssl/statem/extensions.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include" ], "intent" => "lib", "obj" => "ssl/statem/libssl-lib-extensions_clnt.o", "product" => "libssl", "srcs" => [ "ssl/statem/extensions_clnt.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include" ], "intent" => "lib", "obj" => "ssl/statem/libssl-lib-extensions_cust.o", "product" => "libssl", "srcs" => [ "ssl/statem/extensions_cust.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include" ], "intent" => "lib", "obj" => "ssl/statem/libssl-lib-extensions_srvr.o", "product" => "libssl", "srcs" => [ "ssl/statem/extensions_srvr.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include" ], "intent" => "lib", "obj" => "ssl/statem/libssl-lib-statem.o", "product" => "libssl", "srcs" => [ "ssl/statem/statem.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include" ], "intent" => "lib", "obj" => "ssl/statem/libssl-lib-statem_clnt.o", "product" => "libssl", "srcs" => [ "ssl/statem/statem_clnt.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include" ], "intent" => "lib", "obj" => "ssl/statem/libssl-lib-statem_dtls.o", "product" => "libssl", "srcs" => [ "ssl/statem/statem_dtls.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include" ], "intent" => "lib", "obj" => "ssl/statem/libssl-lib-statem_lib.o", "product" => "libssl", "srcs" => [ "ssl/statem/statem_lib.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include" ], "intent" => "lib", "obj" => "ssl/statem/libssl-lib-statem_srvr.o", "product" => "libssl", "srcs" => [ "ssl/statem/statem_srvr.c" ] ); 
-}{-
 obj2lib( "attrs" => { "noinst" => "1" }, "lib" => "providers/libcommon.a", "objs" => [ "providers/common/der/libcommon-lib-der_digests_gen.o", "providers/common/der/libcommon-lib-der_dsa_gen.o", "providers/common/der/libcommon-lib-der_dsa_key.o", "providers/common/der/libcommon-lib-der_dsa_sig.o", "providers/common/der/libcommon-lib-der_ec_gen.o", "providers/common/der/libcommon-lib-der_ec_key.o", "providers/common/der/libcommon-lib-der_ec_sig.o", "providers/common/der/libcommon-lib-der_ecx_gen.o", "providers/common/der/libcommon-lib-der_ecx_key.o", "providers/common/der/libcommon-lib-der_rsa_gen.o", "providers/common/der/libcommon-lib-der_rsa_key.o", "providers/common/der/libcommon-lib-der_wrap_gen.o", "providers/common/libcommon-lib-provider_ctx.o", "providers/common/libcommon-lib-provider_err.o", "providers/implementations/ciphers/libcommon-lib-ciphercommon.o", "providers/implementations/ciphers/libcommon-lib-ciphercommon_block.o", "providers/implementations/ciphers/libcommon-lib-ciphercommon_ccm.o", "providers/implementations/ciphers/libcommon-lib-ciphercommon_ccm_hw.o", "providers/implementations/ciphers/libcommon-lib-ciphercommon_gcm.o", "providers/implementations/ciphers/libcommon-lib-ciphercommon_gcm_hw.o", "providers/implementations/ciphers/libcommon-lib-ciphercommon_hw.o", "providers/implementations/digests/libcommon-lib-digestcommon.o", "ssl/record/libcommon-lib-tls_pad.o" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [ "providers/common/include/prov/der_digests.h" ], "incs" => [ "providers/common/include/prov", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/common/der/libcommon-lib-der_digests_gen.o", "product" => "providers/libcommon.a", "srcs" => [ "providers/common/der/der_digests_gen.c" ] ); 
-}{-
 generatesrc( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [ "providers/common/der/DIGESTS.asn1", "providers/common/der/NIST.asn1", "providers/common/der/oids_to_c.pm" ], "generator" => [ "providers/common/der/der_digests_gen.c.in" ], "generator_deps" => [], "generator_incs" => [], "incs" => [ "providers/common/include/prov", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "product" => "providers/libcommon.a", "src" => "providers/common/der/der_digests_gen.c" ); 
-}{-
 generatesrc( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [ "providers/common/der/DIGESTS.asn1", "providers/common/der/NIST.asn1", "providers/common/der/oids_to_c.pm" ], "generator" => [ "providers/common/include/prov/der_digests.h.in" ], "generator_deps" => [], "generator_incs" => [], "incs" => [ "providers/common/include/prov", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "product" => "providers/libcommon.a", "src" => "providers/common/include/prov/der_digests.h" ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [ "providers/common/include/prov/der_dsa.h" ], "incs" => [ "providers/common/include/prov", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/common/der/libcommon-lib-der_dsa_gen.o", "product" => "providers/libcommon.a", "srcs" => [ "providers/common/der/der_dsa_gen.c" ] ); 
-}{-
 generatesrc( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [ "providers/common/der/DSA.asn1", "providers/common/der/oids_to_c.pm" ], "generator" => [ "providers/common/der/der_dsa_gen.c.in" ], "generator_deps" => [], "generator_incs" => [], "incs" => [ "providers/common/include/prov", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "product" => "providers/libcommon.a", "src" => "providers/common/der/der_dsa_gen.c" ); 
-}{-
 generatesrc( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [ "providers/common/der/DSA.asn1", "providers/common/der/oids_to_c.pm" ], "generator" => [ "providers/common/include/prov/der_dsa.h.in" ], "generator_deps" => [], "generator_incs" => [], "incs" => [ "providers/common/include/prov", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "product" => "providers/libcommon.a", "src" => "providers/common/include/prov/der_dsa.h" ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [ "providers/common/include/prov/der_digests.h", "providers/common/include/prov/der_dsa.h" ], "incs" => [ "providers/common/include/prov", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/common/der/libcommon-lib-der_dsa_key.o", "product" => "providers/libcommon.a", "srcs" => [ "providers/common/der/der_dsa_key.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [ "providers/common/include/prov/der_digests.h", "providers/common/include/prov/der_dsa.h" ], "incs" => [ "providers/common/include/prov", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/common/der/libcommon-lib-der_dsa_sig.o", "product" => "providers/libcommon.a", "srcs" => [ "providers/common/der/der_dsa_sig.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [ "providers/common/include/prov/der_ec.h" ], "incs" => [ "providers/common/include/prov", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/common/der/libcommon-lib-der_ec_gen.o", "product" => "providers/libcommon.a", "srcs" => [ "providers/common/der/der_ec_gen.c" ] ); 
-}{-
 generatesrc( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [ "providers/common/der/EC.asn1", "providers/common/der/oids_to_c.pm" ], "generator" => [ "providers/common/der/der_ec_gen.c.in" ], "generator_deps" => [], "generator_incs" => [], "incs" => [ "providers/common/include/prov", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "product" => "providers/libcommon.a", "src" => "providers/common/der/der_ec_gen.c" ); 
-}{-
 generatesrc( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [ "providers/common/der/EC.asn1", "providers/common/der/oids_to_c.pm" ], "generator" => [ "providers/common/include/prov/der_ec.h.in" ], "generator_deps" => [], "generator_incs" => [], "incs" => [ "providers/common/include/prov", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "product" => "providers/libcommon.a", "src" => "providers/common/include/prov/der_ec.h" ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [ "providers/common/include/prov/der_digests.h", "providers/common/include/prov/der_ec.h" ], "incs" => [ "providers/common/include/prov", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/common/der/libcommon-lib-der_ec_key.o", "product" => "providers/libcommon.a", "srcs" => [ "providers/common/der/der_ec_key.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [ "providers/common/include/prov/der_digests.h", "providers/common/include/prov/der_ec.h" ], "incs" => [ "providers/common/include/prov", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/common/der/libcommon-lib-der_ec_sig.o", "product" => "providers/libcommon.a", "srcs" => [ "providers/common/der/der_ec_sig.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [ "providers/common/include/prov/der_ecx.h" ], "incs" => [ "providers/common/include/prov", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/common/der/libcommon-lib-der_ecx_gen.o", "product" => "providers/libcommon.a", "srcs" => [ "providers/common/der/der_ecx_gen.c" ] ); 
-}{-
 generatesrc( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [ "providers/common/der/ECX.asn1", "providers/common/der/oids_to_c.pm" ], "generator" => [ "providers/common/der/der_ecx_gen.c.in" ], "generator_deps" => [], "generator_incs" => [], "incs" => [ "providers/common/include/prov", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "product" => "providers/libcommon.a", "src" => "providers/common/der/der_ecx_gen.c" ); 
-}{-
 generatesrc( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [ "providers/common/der/ECX.asn1", "providers/common/der/oids_to_c.pm" ], "generator" => [ "providers/common/include/prov/der_ecx.h.in" ], "generator_deps" => [], "generator_incs" => [], "incs" => [ "providers/common/include/prov", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "product" => "providers/libcommon.a", "src" => "providers/common/include/prov/der_ecx.h" ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [ "providers/common/include/prov/der_ecx.h" ], "incs" => [ "providers/common/include/prov", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/common/der/libcommon-lib-der_ecx_key.o", "product" => "providers/libcommon.a", "srcs" => [ "providers/common/der/der_ecx_key.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [ "providers/common/include/prov/der_rsa.h" ], "incs" => [ "providers/common/include/prov", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/common/der/libcommon-lib-der_rsa_gen.o", "product" => "providers/libcommon.a", "srcs" => [ "providers/common/der/der_rsa_gen.c" ] ); 
-}{-
 generatesrc( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [ "providers/common/der/NIST.asn1", "providers/common/der/RSA.asn1", "providers/common/der/oids_to_c.pm" ], "generator" => [ "providers/common/der/der_rsa_gen.c.in" ], "generator_deps" => [], "generator_incs" => [], "incs" => [ "providers/common/include/prov", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "product" => "providers/libcommon.a", "src" => "providers/common/der/der_rsa_gen.c" ); 
-}{-
 generatesrc( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [ "providers/common/der/NIST.asn1", "providers/common/der/RSA.asn1", "providers/common/der/oids_to_c.pm" ], "generator" => [ "providers/common/include/prov/der_rsa.h.in" ], "generator_deps" => [], "generator_incs" => [], "incs" => [ "providers/common/include/prov", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "product" => "providers/libcommon.a", "src" => "providers/common/include/prov/der_rsa.h" ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [ "providers/common/include/prov/der_digests.h", "providers/common/include/prov/der_rsa.h" ], "incs" => [ "providers/common/include/prov", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/common/der/libcommon-lib-der_rsa_key.o", "product" => "providers/libcommon.a", "srcs" => [ "providers/common/der/der_rsa_key.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [ "providers/common/include/prov/der_wrap.h" ], "incs" => [ "providers/common/include/prov", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/common/der/libcommon-lib-der_wrap_gen.o", "product" => "providers/libcommon.a", "srcs" => [ "providers/common/der/der_wrap_gen.c" ] ); 
-}{-
 generatesrc( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [ "providers/common/der/oids_to_c.pm", "providers/common/der/wrap.asn1" ], "generator" => [ "providers/common/der/der_wrap_gen.c.in" ], "generator_deps" => [], "generator_incs" => [], "incs" => [ "providers/common/include/prov", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "product" => "providers/libcommon.a", "src" => "providers/common/der/der_wrap_gen.c" ); 
-}{-
 generatesrc( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [ "providers/common/der/oids_to_c.pm", "providers/common/der/wrap.asn1" ], "generator" => [ "providers/common/include/prov/der_wrap.h.in" ], "generator_deps" => [], "generator_incs" => [], "incs" => [ "providers/common/include/prov", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "product" => "providers/libcommon.a", "src" => "providers/common/include/prov/der_wrap.h" ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/common/libcommon-lib-provider_ctx.o", "product" => "providers/libcommon.a", "srcs" => [ "providers/common/provider_ctx.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/common/libcommon-lib-provider_err.o", "product" => "providers/libcommon.a", "srcs" => [ "providers/common/provider_err.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/ciphers/libcommon-lib-ciphercommon.o", "product" => "providers/libcommon.a", "srcs" => [ "providers/implementations/ciphers/ciphercommon.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/ciphers/libcommon-lib-ciphercommon_block.o", "product" => "providers/libcommon.a", "srcs" => [ "providers/implementations/ciphers/ciphercommon_block.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/ciphers/libcommon-lib-ciphercommon_ccm.o", "product" => "providers/libcommon.a", "srcs" => [ "providers/implementations/ciphers/ciphercommon_ccm.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/ciphers/libcommon-lib-ciphercommon_ccm_hw.o", "product" => "providers/libcommon.a", "srcs" => [ "providers/implementations/ciphers/ciphercommon_ccm_hw.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/ciphers/libcommon-lib-ciphercommon_gcm.o", "product" => "providers/libcommon.a", "srcs" => [ "providers/implementations/ciphers/ciphercommon_gcm.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/ciphers/libcommon-lib-ciphercommon_gcm_hw.o", "product" => "providers/libcommon.a", "srcs" => [ "providers/implementations/ciphers/ciphercommon_gcm_hw.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/ciphers/libcommon-lib-ciphercommon_hw.o", "product" => "providers/libcommon.a", "srcs" => [ "providers/implementations/ciphers/ciphercommon_hw.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/digests/libcommon-lib-digestcommon.o", "product" => "providers/libcommon.a", "srcs" => [ "providers/implementations/digests/digestcommon.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "ssl/record/libcommon-lib-tls_pad.o", "product" => "providers/libcommon.a", "srcs" => [ "ssl/record/tls_pad.c" ] ); 
-}{-
 obj2lib( "attrs" => { "noinst" => "1" }, "lib" => "providers/libdefault.a", "objs" => [ "providers/common/der/libdefault-lib-der_rsa_sig.o", "providers/common/libdefault-lib-bio_prov.o", "providers/common/libdefault-lib-capabilities.o", "providers/common/libdefault-lib-digest_to_nid.o", "providers/common/libdefault-lib-provider_seeding.o", "providers/common/libdefault-lib-provider_util.o", "providers/common/libdefault-lib-securitycheck.o", "providers/common/libdefault-lib-securitycheck_default.o", "providers/implementations/asymciphers/libdefault-lib-rsa_enc.o", "providers/implementations/ciphers/libdefault-lib-cipher_aes.o", "providers/implementations/ciphers/libdefault-lib-cipher_aes_cbc_hmac_sha.o", "providers/implementations/ciphers/libdefault-lib-cipher_aes_cbc_hmac_sha1_hw.o", "providers/implementations/ciphers/libdefault-lib-cipher_aes_cbc_hmac_sha256_hw.o", "providers/implementations/ciphers/libdefault-lib-cipher_aes_ccm.o", "providers/implementations/ciphers/libdefault-lib-cipher_aes_ccm_hw.o", "providers/implementations/ciphers/libdefault-lib-cipher_aes_gcm.o", "providers/implementations/ciphers/libdefault-lib-cipher_aes_gcm_hw.o", "providers/implementations/ciphers/libdefault-lib-cipher_aes_hw.o", "providers/implementations/ciphers/libdefault-lib-cipher_aes_ocb.o", "providers/implementations/ciphers/libdefault-lib-cipher_aes_ocb_hw.o", "providers/implementations/ciphers/libdefault-lib-cipher_aes_siv.o", "providers/implementations/ciphers/libdefault-lib-cipher_aes_siv_hw.o", "providers/implementations/ciphers/libdefault-lib-cipher_aes_wrp.o", "providers/implementations/ciphers/libdefault-lib-cipher_aes_xts.o", "providers/implementations/ciphers/libdefault-lib-cipher_aes_xts_fips.o", "providers/implementations/ciphers/libdefault-lib-cipher_aes_xts_hw.o", "providers/implementations/ciphers/libdefault-lib-cipher_cts.o", "providers/implementations/ciphers/libdefault-lib-cipher_null.o", "providers/implementations/ciphers/libdefault-lib-cipher_tdes.o", "providers/implementations/ciphers/libdefault-lib-cipher_tdes_common.o", "providers/implementations/ciphers/libdefault-lib-cipher_tdes_default.o", "providers/implementations/ciphers/libdefault-lib-cipher_tdes_default_hw.o", "providers/implementations/ciphers/libdefault-lib-cipher_tdes_hw.o", "providers/implementations/ciphers/libdefault-lib-cipher_tdes_wrap.o", "providers/implementations/ciphers/libdefault-lib-cipher_tdes_wrap_hw.o", "providers/implementations/digests/libdefault-lib-md5_prov.o", "providers/implementations/digests/libdefault-lib-md5_sha1_prov.o", "providers/implementations/digests/libdefault-lib-null_prov.o", "providers/implementations/digests/libdefault-lib-ripemd_prov.o", "providers/implementations/digests/libdefault-lib-sha2_prov.o", "providers/implementations/digests/libdefault-lib-sha3_prov.o", "providers/implementations/encode_decode/libdefault-lib-decode_der2key.o", "providers/implementations/encode_decode/libdefault-lib-decode_epki2pki.o", "providers/implementations/encode_decode/libdefault-lib-decode_msblob2key.o", "providers/implementations/encode_decode/libdefault-lib-decode_pem2der.o", "providers/implementations/encode_decode/libdefault-lib-decode_pvk2key.o", "providers/implementations/encode_decode/libdefault-lib-decode_spki2typespki.o", "providers/implementations/encode_decode/libdefault-lib-encode_key2any.o", "providers/implementations/encode_decode/libdefault-lib-encode_key2blob.o", "providers/implementations/encode_decode/libdefault-lib-encode_key2ms.o", "providers/implementations/encode_decode/libdefault-lib-encode_key2text.o", "providers/implementations/encode_decode/libdefault-lib-endecoder_common.o", "providers/implementations/exchange/libdefault-lib-dh_exch.o", "providers/implementations/exchange/libdefault-lib-ecdh_exch.o", "providers/implementations/exchange/libdefault-lib-ecx_exch.o", "providers/implementations/exchange/libdefault-lib-kdf_exch.o", "providers/implementations/kdfs/libdefault-lib-hkdf.o", "providers/implementations/kdfs/libdefault-lib-kbkdf.o", "providers/implementations/kdfs/libdefault-lib-krb5kdf.o", "providers/implementations/kdfs/libdefault-lib-pbkdf2.o", "providers/implementations/kdfs/libdefault-lib-pbkdf2_fips.o", "providers/implementations/kdfs/libdefault-lib-pkcs12kdf.o", "providers/implementations/kdfs/libdefault-lib-scrypt.o", "providers/implementations/kdfs/libdefault-lib-sshkdf.o", "providers/implementations/kdfs/libdefault-lib-sskdf.o", "providers/implementations/kdfs/libdefault-lib-tls1_prf.o", "providers/implementations/kdfs/libdefault-lib-x942kdf.o", "providers/implementations/kem/libdefault-lib-rsa_kem.o", "providers/implementations/keymgmt/libdefault-lib-dh_kmgmt.o", "providers/implementations/keymgmt/libdefault-lib-dsa_kmgmt.o", "providers/implementations/keymgmt/libdefault-lib-ec_kmgmt.o", "providers/implementations/keymgmt/libdefault-lib-ecx_kmgmt.o", "providers/implementations/keymgmt/libdefault-lib-kdf_legacy_kmgmt.o", "providers/implementations/keymgmt/libdefault-lib-mac_legacy_kmgmt.o", "providers/implementations/keymgmt/libdefault-lib-rsa_kmgmt.o", "providers/implementations/macs/libdefault-lib-cmac_prov.o", "providers/implementations/macs/libdefault-lib-gmac_prov.o", "providers/implementations/macs/libdefault-lib-hmac_prov.o", "providers/implementations/macs/libdefault-lib-kmac_prov.o", "providers/implementations/macs/libdefault-lib-siphash_prov.o", "providers/implementations/rands/libdefault-lib-crngt.o", "providers/implementations/rands/libdefault-lib-drbg.o", "providers/implementations/rands/libdefault-lib-drbg_ctr.o", "providers/implementations/rands/libdefault-lib-drbg_hash.o", "providers/implementations/rands/libdefault-lib-drbg_hmac.o", "providers/implementations/rands/libdefault-lib-seed_src.o", "providers/implementations/rands/libdefault-lib-test_rng.o", "providers/implementations/rands/seeding/libdefault-lib-rand_cpu_x86.o", "providers/implementations/rands/seeding/libdefault-lib-rand_tsc.o", "providers/implementations/rands/seeding/libdefault-lib-rand_unix.o", "providers/implementations/rands/seeding/libdefault-lib-rand_win.o", "providers/implementations/signature/libdefault-lib-dsa_sig.o", "providers/implementations/signature/libdefault-lib-ecdsa_sig.o", "providers/implementations/signature/libdefault-lib-eddsa_sig.o", "providers/implementations/signature/libdefault-lib-mac_legacy_sig.o", "providers/implementations/signature/libdefault-lib-rsa_sig.o", "providers/implementations/storemgmt/libdefault-lib-file_store.o", "providers/implementations/storemgmt/libdefault-lib-file_store_any2obj.o", "ssl/libdefault-lib-s3_cbc.o" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [ "providers/common/include/prov/der_digests.h", "providers/common/include/prov/der_rsa.h" ], "incs" => [ "providers/common/include/prov", ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/common/der/libdefault-lib-der_rsa_sig.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/common/der/der_rsa_sig.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/common/libdefault-lib-bio_prov.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/common/bio_prov.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/common/libdefault-lib-capabilities.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/common/capabilities.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/common/libdefault-lib-digest_to_nid.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/common/digest_to_nid.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/common/libdefault-lib-provider_seeding.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/common/provider_seeding.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/common/libdefault-lib-provider_util.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/common/provider_util.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/common/libdefault-lib-securitycheck.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/common/securitycheck.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/common/libdefault-lib-securitycheck_default.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/common/securitycheck_default.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/asymciphers/libdefault-lib-rsa_enc.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/implementations/asymciphers/rsa_enc.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/ciphers/libdefault-lib-cipher_aes.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/implementations/ciphers/cipher_aes.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/ciphers/libdefault-lib-cipher_aes_cbc_hmac_sha.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/implementations/ciphers/cipher_aes_cbc_hmac_sha.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/ciphers/libdefault-lib-cipher_aes_cbc_hmac_sha1_hw.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/implementations/ciphers/cipher_aes_cbc_hmac_sha1_hw.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/ciphers/libdefault-lib-cipher_aes_cbc_hmac_sha256_hw.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/implementations/ciphers/cipher_aes_cbc_hmac_sha256_hw.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/ciphers/libdefault-lib-cipher_aes_ccm.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/implementations/ciphers/cipher_aes_ccm.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/ciphers/libdefault-lib-cipher_aes_ccm_hw.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/implementations/ciphers/cipher_aes_ccm_hw.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/ciphers/libdefault-lib-cipher_aes_gcm.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/implementations/ciphers/cipher_aes_gcm.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/ciphers/libdefault-lib-cipher_aes_gcm_hw.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/implementations/ciphers/cipher_aes_gcm_hw.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/ciphers/libdefault-lib-cipher_aes_hw.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/implementations/ciphers/cipher_aes_hw.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/ciphers/libdefault-lib-cipher_aes_ocb.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/implementations/ciphers/cipher_aes_ocb.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/ciphers/libdefault-lib-cipher_aes_ocb_hw.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/implementations/ciphers/cipher_aes_ocb_hw.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/ciphers/libdefault-lib-cipher_aes_siv.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/implementations/ciphers/cipher_aes_siv.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/ciphers/libdefault-lib-cipher_aes_siv_hw.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/implementations/ciphers/cipher_aes_siv_hw.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/ciphers/libdefault-lib-cipher_aes_wrp.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/implementations/ciphers/cipher_aes_wrp.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/ciphers/libdefault-lib-cipher_aes_xts.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/implementations/ciphers/cipher_aes_xts.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/ciphers/libdefault-lib-cipher_aes_xts_fips.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/implementations/ciphers/cipher_aes_xts_fips.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/ciphers/libdefault-lib-cipher_aes_xts_hw.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/implementations/ciphers/cipher_aes_xts_hw.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/ciphers/libdefault-lib-cipher_cts.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/implementations/ciphers/cipher_cts.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/ciphers/libdefault-lib-cipher_null.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/implementations/ciphers/cipher_null.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/ciphers/libdefault-lib-cipher_tdes.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/implementations/ciphers/cipher_tdes.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/ciphers/libdefault-lib-cipher_tdes_common.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/implementations/ciphers/cipher_tdes_common.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/ciphers/libdefault-lib-cipher_tdes_default.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/implementations/ciphers/cipher_tdes_default.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/ciphers/libdefault-lib-cipher_tdes_default_hw.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/implementations/ciphers/cipher_tdes_default_hw.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/ciphers/libdefault-lib-cipher_tdes_hw.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/implementations/ciphers/cipher_tdes_hw.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/ciphers/libdefault-lib-cipher_tdes_wrap.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/implementations/ciphers/cipher_tdes_wrap.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/ciphers/libdefault-lib-cipher_tdes_wrap_hw.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/implementations/ciphers/cipher_tdes_wrap_hw.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/digests/libdefault-lib-md5_prov.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/implementations/digests/md5_prov.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/digests/libdefault-lib-md5_sha1_prov.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/implementations/digests/md5_sha1_prov.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/digests/libdefault-lib-null_prov.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/implementations/digests/null_prov.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/digests/libdefault-lib-ripemd_prov.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/implementations/digests/ripemd_prov.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/digests/libdefault-lib-sha2_prov.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/implementations/digests/sha2_prov.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/digests/libdefault-lib-sha3_prov.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/implementations/digests/sha3_prov.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/encode_decode/libdefault-lib-decode_der2key.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/implementations/encode_decode/decode_der2key.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/encode_decode/libdefault-lib-decode_epki2pki.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/implementations/encode_decode/decode_epki2pki.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/encode_decode/libdefault-lib-decode_msblob2key.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/implementations/encode_decode/decode_msblob2key.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/encode_decode/libdefault-lib-decode_pem2der.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/implementations/encode_decode/decode_pem2der.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/encode_decode/libdefault-lib-decode_pvk2key.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/implementations/encode_decode/decode_pvk2key.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/encode_decode/libdefault-lib-decode_spki2typespki.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/implementations/encode_decode/decode_spki2typespki.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [ "providers/common/include/prov/der_rsa.h" ], "incs" => [ "providers/common/include/prov", ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/encode_decode/libdefault-lib-encode_key2any.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/implementations/encode_decode/encode_key2any.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/encode_decode/libdefault-lib-encode_key2blob.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/implementations/encode_decode/encode_key2blob.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/encode_decode/libdefault-lib-encode_key2ms.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/implementations/encode_decode/encode_key2ms.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/encode_decode/libdefault-lib-encode_key2text.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/implementations/encode_decode/encode_key2text.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/encode_decode/libdefault-lib-endecoder_common.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/implementations/encode_decode/endecoder_common.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/exchange/libdefault-lib-dh_exch.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/implementations/exchange/dh_exch.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/exchange/libdefault-lib-ecdh_exch.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/implementations/exchange/ecdh_exch.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/exchange/libdefault-lib-ecx_exch.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/implementations/exchange/ecx_exch.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/exchange/libdefault-lib-kdf_exch.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/implementations/exchange/kdf_exch.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/kdfs/libdefault-lib-hkdf.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/implementations/kdfs/hkdf.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/kdfs/libdefault-lib-kbkdf.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/implementations/kdfs/kbkdf.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/kdfs/libdefault-lib-krb5kdf.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/implementations/kdfs/krb5kdf.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/kdfs/libdefault-lib-pbkdf2.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/implementations/kdfs/pbkdf2.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/kdfs/libdefault-lib-pbkdf2_fips.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/implementations/kdfs/pbkdf2_fips.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/kdfs/libdefault-lib-pkcs12kdf.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/implementations/kdfs/pkcs12kdf.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/kdfs/libdefault-lib-scrypt.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/implementations/kdfs/scrypt.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/kdfs/libdefault-lib-sshkdf.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/implementations/kdfs/sshkdf.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/kdfs/libdefault-lib-sskdf.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/implementations/kdfs/sskdf.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/kdfs/libdefault-lib-tls1_prf.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/implementations/kdfs/tls1_prf.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [ "providers/common/include/prov/der_wrap.h" ], "incs" => [ "providers/common/include/prov", ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/kdfs/libdefault-lib-x942kdf.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/implementations/kdfs/x942kdf.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/kem/libdefault-lib-rsa_kem.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/implementations/kem/rsa_kem.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/keymgmt/libdefault-lib-dh_kmgmt.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/implementations/keymgmt/dh_kmgmt.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/keymgmt/libdefault-lib-dsa_kmgmt.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/implementations/keymgmt/dsa_kmgmt.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/keymgmt/libdefault-lib-ec_kmgmt.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/implementations/keymgmt/ec_kmgmt.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/keymgmt/libdefault-lib-ecx_kmgmt.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/implementations/keymgmt/ecx_kmgmt.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/keymgmt/libdefault-lib-kdf_legacy_kmgmt.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/implementations/keymgmt/kdf_legacy_kmgmt.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/keymgmt/libdefault-lib-mac_legacy_kmgmt.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/implementations/keymgmt/mac_legacy_kmgmt.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/keymgmt/libdefault-lib-rsa_kmgmt.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/implementations/keymgmt/rsa_kmgmt.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/macs/libdefault-lib-cmac_prov.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/implementations/macs/cmac_prov.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/macs/libdefault-lib-gmac_prov.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/implementations/macs/gmac_prov.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/macs/libdefault-lib-hmac_prov.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/implementations/macs/hmac_prov.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/macs/libdefault-lib-kmac_prov.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/implementations/macs/kmac_prov.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/macs/libdefault-lib-siphash_prov.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/implementations/macs/siphash_prov.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/rands/libdefault-lib-crngt.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/implementations/rands/crngt.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/rands/libdefault-lib-drbg.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/implementations/rands/drbg.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/rands/libdefault-lib-drbg_ctr.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/implementations/rands/drbg_ctr.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/rands/libdefault-lib-drbg_hash.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/implementations/rands/drbg_hash.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/rands/libdefault-lib-drbg_hmac.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/implementations/rands/drbg_hmac.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/rands/libdefault-lib-seed_src.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/implementations/rands/seed_src.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/rands/libdefault-lib-test_rng.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/implementations/rands/test_rng.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/rands/seeding/libdefault-lib-rand_cpu_x86.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/implementations/rands/seeding/rand_cpu_x86.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/rands/seeding/libdefault-lib-rand_tsc.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/implementations/rands/seeding/rand_tsc.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/rands/seeding/libdefault-lib-rand_unix.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/implementations/rands/seeding/rand_unix.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/rands/seeding/libdefault-lib-rand_win.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/implementations/rands/seeding/rand_win.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [ "providers/common/include/prov/der_dsa.h" ], "incs" => [ "providers/common/include/prov", ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/signature/libdefault-lib-dsa_sig.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/implementations/signature/dsa_sig.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [ "providers/common/include/prov/der_ec.h" ], "incs" => [ "providers/common/include/prov", ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/signature/libdefault-lib-ecdsa_sig.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/implementations/signature/ecdsa_sig.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [ "providers/common/include/prov/der_ecx.h" ], "incs" => [ "providers/common/include/prov", ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/signature/libdefault-lib-eddsa_sig.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/implementations/signature/eddsa_sig.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/signature/libdefault-lib-mac_legacy_sig.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/implementations/signature/mac_legacy_sig.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [ "providers/common/include/prov/der_rsa.h" ], "incs" => [ "providers/common/include/prov", ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/signature/libdefault-lib-rsa_sig.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/implementations/signature/rsa_sig.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/storemgmt/libdefault-lib-file_store.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/implementations/storemgmt/file_store.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/storemgmt/libdefault-lib-file_store_any2obj.o", "product" => "providers/libdefault.a", "srcs" => [ "providers/implementations/storemgmt/file_store_any2obj.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "ssl/libdefault-lib-s3_cbc.o", "product" => "providers/libdefault.a", "srcs" => [ "ssl/s3_cbc.c" ] ); 
-}{-
 obj2lib( "attrs" => { "noinst" => "1" }, "lib" => "providers/liblegacy.a", "objs" => [ "crypto/des/liblegacy-lib-des_enc.o", "crypto/des/liblegacy-lib-fcrypt_b.o", "crypto/md5/liblegacy-lib-md5_dgst.o", "crypto/md5/liblegacy-lib-md5_one.o", "crypto/md5/liblegacy-lib-md5_sha1.o", "crypto/rc4/liblegacy-lib-rc4_enc.o", "crypto/rc4/liblegacy-lib-rc4_skey.o", "providers/common/liblegacy-lib-provider_util.o", "providers/implementations/ciphers/liblegacy-lib-cipher_blowfish.o", "providers/implementations/ciphers/liblegacy-lib-cipher_blowfish_hw.o", "providers/implementations/ciphers/liblegacy-lib-cipher_cast5.o", "providers/implementations/ciphers/liblegacy-lib-cipher_cast5_hw.o", "providers/implementations/ciphers/liblegacy-lib-cipher_des.o", "providers/implementations/ciphers/liblegacy-lib-cipher_des_hw.o", "providers/implementations/ciphers/liblegacy-lib-cipher_desx.o", "providers/implementations/ciphers/liblegacy-lib-cipher_desx_hw.o", "providers/implementations/ciphers/liblegacy-lib-cipher_rc2.o", "providers/implementations/ciphers/liblegacy-lib-cipher_rc2_hw.o", "providers/implementations/ciphers/liblegacy-lib-cipher_rc4.o", "providers/implementations/ciphers/liblegacy-lib-cipher_rc4_hmac_md5.o", "providers/implementations/ciphers/liblegacy-lib-cipher_rc4_hmac_md5_hw.o", "providers/implementations/ciphers/liblegacy-lib-cipher_rc4_hw.o", "providers/implementations/ciphers/liblegacy-lib-cipher_tdes_common.o", "providers/implementations/digests/liblegacy-lib-md4_prov.o", "providers/implementations/digests/liblegacy-lib-ripemd_prov.o", "providers/implementations/kdfs/liblegacy-lib-pbkdf1.o", "providers/liblegacy-lib-prov_running.o" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "crypto/des/liblegacy-lib-des_enc.o", "product" => "providers/liblegacy.a", "srcs" => [ "crypto/des/des_enc.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "crypto/des/liblegacy-lib-fcrypt_b.o", "product" => "providers/liblegacy.a", "srcs" => [ "crypto/des/fcrypt_b.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "crypto/md5/liblegacy-lib-md5_dgst.o", "product" => "providers/liblegacy.a", "srcs" => [ "crypto/md5/md5_dgst.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "crypto/md5/liblegacy-lib-md5_one.o", "product" => "providers/liblegacy.a", "srcs" => [ "crypto/md5/md5_one.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "crypto/md5/liblegacy-lib-md5_sha1.o", "product" => "providers/liblegacy.a", "srcs" => [ "crypto/md5/md5_sha1.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "crypto/rc4/liblegacy-lib-rc4_enc.o", "product" => "providers/liblegacy.a", "srcs" => [ "crypto/rc4/rc4_enc.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "crypto/rc4/liblegacy-lib-rc4_skey.o", "product" => "providers/liblegacy.a", "srcs" => [ "crypto/rc4/rc4_skey.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/common/liblegacy-lib-provider_util.o", "product" => "providers/liblegacy.a", "srcs" => [ "providers/common/provider_util.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/ciphers/liblegacy-lib-cipher_blowfish.o", "product" => "providers/liblegacy.a", "srcs" => [ "providers/implementations/ciphers/cipher_blowfish.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/ciphers/liblegacy-lib-cipher_blowfish_hw.o", "product" => "providers/liblegacy.a", "srcs" => [ "providers/implementations/ciphers/cipher_blowfish_hw.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/ciphers/liblegacy-lib-cipher_cast5.o", "product" => "providers/liblegacy.a", "srcs" => [ "providers/implementations/ciphers/cipher_cast5.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/ciphers/liblegacy-lib-cipher_cast5_hw.o", "product" => "providers/liblegacy.a", "srcs" => [ "providers/implementations/ciphers/cipher_cast5_hw.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/ciphers/liblegacy-lib-cipher_des.o", "product" => "providers/liblegacy.a", "srcs" => [ "providers/implementations/ciphers/cipher_des.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/ciphers/liblegacy-lib-cipher_des_hw.o", "product" => "providers/liblegacy.a", "srcs" => [ "providers/implementations/ciphers/cipher_des_hw.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/ciphers/liblegacy-lib-cipher_desx.o", "product" => "providers/liblegacy.a", "srcs" => [ "providers/implementations/ciphers/cipher_desx.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/ciphers/liblegacy-lib-cipher_desx_hw.o", "product" => "providers/liblegacy.a", "srcs" => [ "providers/implementations/ciphers/cipher_desx_hw.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/ciphers/liblegacy-lib-cipher_rc2.o", "product" => "providers/liblegacy.a", "srcs" => [ "providers/implementations/ciphers/cipher_rc2.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/ciphers/liblegacy-lib-cipher_rc2_hw.o", "product" => "providers/liblegacy.a", "srcs" => [ "providers/implementations/ciphers/cipher_rc2_hw.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/ciphers/liblegacy-lib-cipher_rc4.o", "product" => "providers/liblegacy.a", "srcs" => [ "providers/implementations/ciphers/cipher_rc4.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/ciphers/liblegacy-lib-cipher_rc4_hmac_md5.o", "product" => "providers/liblegacy.a", "srcs" => [ "providers/implementations/ciphers/cipher_rc4_hmac_md5.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/ciphers/liblegacy-lib-cipher_rc4_hmac_md5_hw.o", "product" => "providers/liblegacy.a", "srcs" => [ "providers/implementations/ciphers/cipher_rc4_hmac_md5_hw.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/ciphers/liblegacy-lib-cipher_rc4_hw.o", "product" => "providers/liblegacy.a", "srcs" => [ "providers/implementations/ciphers/cipher_rc4_hw.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/ciphers/liblegacy-lib-cipher_tdes_common.o", "product" => "providers/liblegacy.a", "srcs" => [ "providers/implementations/ciphers/cipher_tdes_common.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/digests/liblegacy-lib-md4_prov.o", "product" => "providers/liblegacy.a", "srcs" => [ "providers/implementations/digests/md4_prov.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/digests/liblegacy-lib-ripemd_prov.o", "product" => "providers/liblegacy.a", "srcs" => [ "providers/implementations/digests/ripemd_prov.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/implementations/kdfs/liblegacy-lib-pbkdf1.o", "product" => "providers/liblegacy.a", "srcs" => [ "providers/implementations/kdfs/pbkdf1.c" ] ); 
-}{-
 src2obj( "attrs" => { "noinst" => "1" }, "defs" => [], "deps" => [], "incs" => [ ".", "crypto", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "lib", "obj" => "providers/liblegacy-lib-prov_running.o", "product" => "providers/liblegacy.a", "srcs" => [ "providers/prov_running.c" ] ); 
-}{-
 obj2dso( "attrs" => {}, "deps" => [ "providers/liblegacy.a", "providers/libcommon.a", "libcrypto" ], "module" => "providers/legacy", "objs" => [ "crypto/legacy-dso-cpuid.o", "crypto/legacy-dso-ctype.o", "crypto/legacy-dso-mem_clr.o", "providers/legacy-dso-legacyprov.o", "providers/legacy.ld" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ ".", "include", "providers/implementations/include", "providers/common/include" ], "intent" => "dso", "obj" => "crypto/legacy-dso-cpuid.o", "product" => "providers/legacy", "srcs" => [ "crypto/cpuid.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ "include", "providers/implementations/include", "providers/common/include" ], "intent" => "dso", "obj" => "crypto/legacy-dso-ctype.o", "product" => "providers/legacy", "srcs" => [ "crypto/ctype.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ "include", "providers/implementations/include", "providers/common/include" ], "intent" => "dso", "obj" => "crypto/legacy-dso-mem_clr.o", "product" => "providers/legacy", "srcs" => [ "crypto/mem_clr.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [], "incs" => [ "include", "providers/implementations/include", "providers/common/include" ], "intent" => "dso", "obj" => "providers/legacy-dso-legacyprov.o", "product" => "providers/legacy", "srcs" => [ "providers/legacyprov.c" ] ); 
-}{-
 generatesrc( "attrs" => {}, "defs" => [], "deps" => [], "generator" => [ "util/providers.num" ], "generator_deps" => [], "generator_incs" => [], "incs" => [ "include", "providers/implementations/include", "providers/common/include" ], "intent" => "dso", "product" => "providers/legacy", "src" => "providers/legacy.ld" ); 
-}{-
 obj2bin( "attrs" => {}, "bin" => "apps/openssl", "deps" => [ "apps/libapps.a", "libssl", "libcrypto" ], "objs" => [ "apps/lib/openssl-bin-cmp_mock_srv.o", "apps/openssl-bin-asn1parse.o", "apps/openssl-bin-ca.o", "apps/openssl-bin-ciphers.o", "apps/openssl-bin-cmp.o", "apps/openssl-bin-crl.o", "apps/openssl-bin-crl2pkcs7.o", "apps/openssl-bin-dgst.o", "apps/openssl-bin-dhparam.o", "apps/openssl-bin-dsa.o", "apps/openssl-bin-dsaparam.o", "apps/openssl-bin-ec.o", "apps/openssl-bin-ecparam.o", "apps/openssl-bin-enc.o", "apps/openssl-bin-errstr.o", "apps/openssl-bin-fipsinstall.o", "apps/openssl-bin-gendsa.o", "apps/openssl-bin-genpkey.o", "apps/openssl-bin-genrsa.o", "apps/openssl-bin-info.o", "apps/openssl-bin-kdf.o", "apps/openssl-bin-list.o", "apps/openssl-bin-mac.o", "apps/openssl-bin-nseq.o", "apps/openssl-bin-ocsp.o", "apps/openssl-bin-openssl.o", "apps/openssl-bin-passwd.o", "apps/openssl-bin-pkcs12.o", "apps/openssl-bin-pkcs7.o", "apps/openssl-bin-pkcs8.o", "apps/openssl-bin-pkey.o", "apps/openssl-bin-pkeyparam.o", "apps/openssl-bin-pkeyutl.o", "apps/openssl-bin-prime.o", "apps/openssl-bin-progs.o", "apps/openssl-bin-rand.o", "apps/openssl-bin-rehash.o", "apps/openssl-bin-req.o", "apps/openssl-bin-rsa.o", "apps/openssl-bin-rsautl.o", "apps/openssl-bin-s_client.o", "apps/openssl-bin-s_server.o", "apps/openssl-bin-s_time.o", "apps/openssl-bin-sess_id.o", "apps/openssl-bin-smime.o", "apps/openssl-bin-speed.o", "apps/openssl-bin-spkac.o", "apps/openssl-bin-storeutl.o", "apps/openssl-bin-ts.o", "apps/openssl-bin-verify.o", "apps/openssl-bin-version.o", "apps/openssl-bin-x509.o" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [ "apps/progs.h" ], "incs" => [ "apps", ".", "include", "apps/include" ], "intent" => "bin", "obj" => "apps/lib/openssl-bin-cmp_mock_srv.o", "product" => "apps/openssl", "srcs" => [ "apps/lib/cmp_mock_srv.c" ] ); 
-}{-
 generatesrc( "attrs" => {}, "defs" => [], "deps" => [ "apps/progs.c" ], "generator" => [ "apps/progs.pl", "\"-H\"", "\$(APPS_OPENSSL)" ], "generator_deps" => [], "generator_incs" => [], "incs" => [ "apps", ".", "include", "apps/include" ], "intent" => "bin", "product" => "apps/openssl", "src" => "apps/progs.h" ); 
-}{-
 generatesrc( "attrs" => {}, "defs" => [], "deps" => [ "configdata.pm" ], "generator" => [ "apps/progs.pl", "\"-C\"", "\$(APPS_OPENSSL)" ], "generator_deps" => [], "generator_incs" => [], "incs" => [ "apps", ".", "include", "apps/include" ], "intent" => "bin", "product" => "apps/openssl", "src" => "apps/progs.c" ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [ "apps/progs.h" ], "incs" => [ "apps", ".", "include", "apps/include" ], "intent" => "bin", "obj" => "apps/openssl-bin-asn1parse.o", "product" => "apps/openssl", "srcs" => [ "apps/asn1parse.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [ "apps/progs.h" ], "incs" => [ "apps", ".", "include", "apps/include" ], "intent" => "bin", "obj" => "apps/openssl-bin-ca.o", "product" => "apps/openssl", "srcs" => [ "apps/ca.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [ "apps/progs.h" ], "incs" => [ "apps", ".", "include", "apps/include" ], "intent" => "bin", "obj" => "apps/openssl-bin-ciphers.o", "product" => "apps/openssl", "srcs" => [ "apps/ciphers.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [ "apps/progs.h" ], "incs" => [ "apps", ".", "include", "apps/include" ], "intent" => "bin", "obj" => "apps/openssl-bin-cmp.o", "product" => "apps/openssl", "srcs" => [ "apps/cmp.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [ "apps/progs.h" ], "incs" => [ "apps", ".", "include", "apps/include" ], "intent" => "bin", "obj" => "apps/openssl-bin-crl.o", "product" => "apps/openssl", "srcs" => [ "apps/crl.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [ "apps/progs.h" ], "incs" => [ "apps", ".", "include", "apps/include" ], "intent" => "bin", "obj" => "apps/openssl-bin-crl2pkcs7.o", "product" => "apps/openssl", "srcs" => [ "apps/crl2pkcs7.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [ "apps/progs.h" ], "incs" => [ "apps", ".", "include", "apps/include" ], "intent" => "bin", "obj" => "apps/openssl-bin-dgst.o", "product" => "apps/openssl", "srcs" => [ "apps/dgst.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [ "apps/progs.h" ], "incs" => [ "apps", ".", "include", "apps/include" ], "intent" => "bin", "obj" => "apps/openssl-bin-dhparam.o", "product" => "apps/openssl", "srcs" => [ "apps/dhparam.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [ "apps/progs.h" ], "incs" => [ "apps", ".", "include", "apps/include" ], "intent" => "bin", "obj" => "apps/openssl-bin-dsa.o", "product" => "apps/openssl", "srcs" => [ "apps/dsa.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [ "apps/progs.h" ], "incs" => [ "apps", ".", "include", "apps/include" ], "intent" => "bin", "obj" => "apps/openssl-bin-dsaparam.o", "product" => "apps/openssl", "srcs" => [ "apps/dsaparam.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [ "apps/progs.h" ], "incs" => [ "apps", ".", "include", "apps/include" ], "intent" => "bin", "obj" => "apps/openssl-bin-ec.o", "product" => "apps/openssl", "srcs" => [ "apps/ec.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [ "apps/progs.h" ], "incs" => [ "apps", ".", "include", "apps/include" ], "intent" => "bin", "obj" => "apps/openssl-bin-ecparam.o", "product" => "apps/openssl", "srcs" => [ "apps/ecparam.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [ "apps/progs.h" ], "incs" => [ "apps", ".", "include", "apps/include" ], "intent" => "bin", "obj" => "apps/openssl-bin-enc.o", "product" => "apps/openssl", "srcs" => [ "apps/enc.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [ "apps/progs.h" ], "incs" => [ "apps", ".", "include", "apps/include" ], "intent" => "bin", "obj" => "apps/openssl-bin-errstr.o", "product" => "apps/openssl", "srcs" => [ "apps/errstr.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [ "apps/progs.h" ], "incs" => [ "apps", ".", "include", "apps/include" ], "intent" => "bin", "obj" => "apps/openssl-bin-fipsinstall.o", "product" => "apps/openssl", "srcs" => [ "apps/fipsinstall.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [ "apps/progs.h" ], "incs" => [ "apps", ".", "include", "apps/include" ], "intent" => "bin", "obj" => "apps/openssl-bin-gendsa.o", "product" => "apps/openssl", "srcs" => [ "apps/gendsa.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [ "apps/progs.h" ], "incs" => [ "apps", ".", "include", "apps/include" ], "intent" => "bin", "obj" => "apps/openssl-bin-genpkey.o", "product" => "apps/openssl", "srcs" => [ "apps/genpkey.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [ "apps/progs.h" ], "incs" => [ "apps", ".", "include", "apps/include" ], "intent" => "bin", "obj" => "apps/openssl-bin-genrsa.o", "product" => "apps/openssl", "srcs" => [ "apps/genrsa.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [ "apps/progs.h" ], "incs" => [ "apps", ".", "include", "apps/include" ], "intent" => "bin", "obj" => "apps/openssl-bin-info.o", "product" => "apps/openssl", "srcs" => [ "apps/info.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [ "apps/progs.h" ], "incs" => [ "apps", ".", "include", "apps/include" ], "intent" => "bin", "obj" => "apps/openssl-bin-kdf.o", "product" => "apps/openssl", "srcs" => [ "apps/kdf.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [ "apps/progs.h" ], "incs" => [ "apps", ".", "include", "apps/include" ], "intent" => "bin", "obj" => "apps/openssl-bin-list.o", "product" => "apps/openssl", "srcs" => [ "apps/list.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [ "apps/progs.h" ], "incs" => [ "apps", ".", "include", "apps/include" ], "intent" => "bin", "obj" => "apps/openssl-bin-mac.o", "product" => "apps/openssl", "srcs" => [ "apps/mac.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [ "apps/progs.h" ], "incs" => [ "apps", ".", "include", "apps/include" ], "intent" => "bin", "obj" => "apps/openssl-bin-nseq.o", "product" => "apps/openssl", "srcs" => [ "apps/nseq.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [ "apps/progs.h" ], "incs" => [ "apps", ".", "include", "apps/include" ], "intent" => "bin", "obj" => "apps/openssl-bin-ocsp.o", "product" => "apps/openssl", "srcs" => [ "apps/ocsp.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [ "apps/progs.h" ], "incs" => [ "apps", ".", "include", "apps/include" ], "intent" => "bin", "obj" => "apps/openssl-bin-openssl.o", "product" => "apps/openssl", "srcs" => [ "apps/openssl.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [ "apps/progs.h" ], "incs" => [ "apps", ".", "include", "apps/include" ], "intent" => "bin", "obj" => "apps/openssl-bin-passwd.o", "product" => "apps/openssl", "srcs" => [ "apps/passwd.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [ "apps/progs.h" ], "incs" => [ "apps", ".", "include", "apps/include" ], "intent" => "bin", "obj" => "apps/openssl-bin-pkcs12.o", "product" => "apps/openssl", "srcs" => [ "apps/pkcs12.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [ "apps/progs.h" ], "incs" => [ "apps", ".", "include", "apps/include" ], "intent" => "bin", "obj" => "apps/openssl-bin-pkcs7.o", "product" => "apps/openssl", "srcs" => [ "apps/pkcs7.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [ "apps/progs.h" ], "incs" => [ "apps", ".", "include", "apps/include" ], "intent" => "bin", "obj" => "apps/openssl-bin-pkcs8.o", "product" => "apps/openssl", "srcs" => [ "apps/pkcs8.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [ "apps/progs.h" ], "incs" => [ "apps", ".", "include", "apps/include" ], "intent" => "bin", "obj" => "apps/openssl-bin-pkey.o", "product" => "apps/openssl", "srcs" => [ "apps/pkey.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [ "apps/progs.h" ], "incs" => [ "apps", ".", "include", "apps/include" ], "intent" => "bin", "obj" => "apps/openssl-bin-pkeyparam.o", "product" => "apps/openssl", "srcs" => [ "apps/pkeyparam.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [ "apps/progs.h" ], "incs" => [ "apps", ".", "include", "apps/include" ], "intent" => "bin", "obj" => "apps/openssl-bin-pkeyutl.o", "product" => "apps/openssl", "srcs" => [ "apps/pkeyutl.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [ "apps/progs.h" ], "incs" => [ "apps", ".", "include", "apps/include" ], "intent" => "bin", "obj" => "apps/openssl-bin-prime.o", "product" => "apps/openssl", "srcs" => [ "apps/prime.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [ "apps/progs.h" ], "incs" => [ "apps", ".", "include", "apps/include" ], "intent" => "bin", "obj" => "apps/openssl-bin-progs.o", "product" => "apps/openssl", "srcs" => [ "apps/progs.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [ "apps/progs.h" ], "incs" => [ "apps", ".", "include", "apps/include" ], "intent" => "bin", "obj" => "apps/openssl-bin-rand.o", "product" => "apps/openssl", "srcs" => [ "apps/rand.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [ "apps/progs.h" ], "incs" => [ "apps", ".", "include", "apps/include" ], "intent" => "bin", "obj" => "apps/openssl-bin-rehash.o", "product" => "apps/openssl", "srcs" => [ "apps/rehash.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [ "apps/progs.h" ], "incs" => [ "apps", ".", "include", "apps/include" ], "intent" => "bin", "obj" => "apps/openssl-bin-req.o", "product" => "apps/openssl", "srcs" => [ "apps/req.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [ "apps/progs.h" ], "incs" => [ "apps", ".", "include", "apps/include" ], "intent" => "bin", "obj" => "apps/openssl-bin-rsa.o", "product" => "apps/openssl", "srcs" => [ "apps/rsa.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [ "apps/progs.h" ], "incs" => [ "apps", ".", "include", "apps/include" ], "intent" => "bin", "obj" => "apps/openssl-bin-rsautl.o", "product" => "apps/openssl", "srcs" => [ "apps/rsautl.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [ "apps/progs.h" ], "incs" => [ "apps", ".", "include", "apps/include" ], "intent" => "bin", "obj" => "apps/openssl-bin-s_client.o", "product" => "apps/openssl", "srcs" => [ "apps/s_client.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [ "apps/progs.h" ], "incs" => [ "apps", ".", "include", "apps/include" ], "intent" => "bin", "obj" => "apps/openssl-bin-s_server.o", "product" => "apps/openssl", "srcs" => [ "apps/s_server.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [ "apps/progs.h" ], "incs" => [ "apps", ".", "include", "apps/include" ], "intent" => "bin", "obj" => "apps/openssl-bin-s_time.o", "product" => "apps/openssl", "srcs" => [ "apps/s_time.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [ "apps/progs.h" ], "incs" => [ "apps", ".", "include", "apps/include" ], "intent" => "bin", "obj" => "apps/openssl-bin-sess_id.o", "product" => "apps/openssl", "srcs" => [ "apps/sess_id.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [ "apps/progs.h" ], "incs" => [ "apps", ".", "include", "apps/include" ], "intent" => "bin", "obj" => "apps/openssl-bin-smime.o", "product" => "apps/openssl", "srcs" => [ "apps/smime.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [ "apps/progs.h" ], "incs" => [ "apps", ".", "include", "apps/include" ], "intent" => "bin", "obj" => "apps/openssl-bin-speed.o", "product" => "apps/openssl", "srcs" => [ "apps/speed.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [ "apps/progs.h" ], "incs" => [ "apps", ".", "include", "apps/include" ], "intent" => "bin", "obj" => "apps/openssl-bin-spkac.o", "product" => "apps/openssl", "srcs" => [ "apps/spkac.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [ "apps/progs.h" ], "incs" => [ "apps", ".", "include", "apps/include" ], "intent" => "bin", "obj" => "apps/openssl-bin-storeutl.o", "product" => "apps/openssl", "srcs" => [ "apps/storeutl.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [ "apps/progs.h" ], "incs" => [ "apps", ".", "include", "apps/include" ], "intent" => "bin", "obj" => "apps/openssl-bin-ts.o", "product" => "apps/openssl", "srcs" => [ "apps/ts.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [ "apps/progs.h" ], "incs" => [ "apps", ".", "include", "apps/include" ], "intent" => "bin", "obj" => "apps/openssl-bin-verify.o", "product" => "apps/openssl", "srcs" => [ "apps/verify.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [ "apps/progs.h" ], "incs" => [ "apps", ".", "include", "apps/include" ], "intent" => "bin", "obj" => "apps/openssl-bin-version.o", "product" => "apps/openssl", "srcs" => [ "apps/version.c" ] ); 
-}{-
 src2obj( "attrs" => {}, "defs" => [], "deps" => [ "apps/progs.h" ], "incs" => [ "apps", ".", "include", "apps/include" ], "intent" => "bin", "obj" => "apps/openssl-bin-x509.o", "product" => "apps/openssl", "srcs" => [ "apps/x509.c" ] ); 
-}{-
 in2script( "attrs" => { "misc" => "1" }, "script" => "apps/CA.pl", "sources" => [ "apps/CA.pl.in" ] ); 
-}{-
 in2script( "attrs" => { "linkname" => "tsget", "misc" => "1" }, "script" => "apps/tsget.pl", "sources" => [ "apps/tsget.in" ] ); 
-}{-
 in2script( "attrs" => {}, "script" => "tools/c_rehash", "sources" => [ "tools/c_rehash.in" ] ); 
-}{-
 in2script( "attrs" => { "noinst" => "1" }, "script" => "util/shlib_wrap.sh", "sources" => [ "util/shlib_wrap.sh.in" ] ); 
-}{-
 in2script( "attrs" => { "noinst" => "1" }, "script" => "util/wrap.pl", "sources" => [ "util/wrap.pl.in" ] ); 
-}