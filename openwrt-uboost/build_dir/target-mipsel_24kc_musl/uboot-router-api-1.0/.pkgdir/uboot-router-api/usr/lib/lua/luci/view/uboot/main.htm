<%+header%>

<div class="uboot-dashboard">
    <!-- –ù—É–ª–µ–≤–æ–π –º–æ–¥—É–ª—å: –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –†–æ—É—Ç–µ—Ä–∞ -->
    <div class="cbi-section" id="registration-section">
        <h3>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –†–æ—É—Ç–µ—Ä–∞</h3>
        <div id="registration-content">
            <div class="cbi-value" id="email-input">
                <label class="cbi-value-title">Email –∞–¥—Ä–µ—Å</label>
                <div class="cbi-value-field">
                    <input type="email" id="register-email" placeholder="your@email.com" class="cbi-input-text">
                    <button class="cbi-button cbi-button-apply" onclick="requestRegistration()">
                        –ü–æ–ª—É—á–∏—Ç—å –∫–æ–¥
                    </button>
                </div>
            </div>
            
            <div class="cbi-value" id="terms-checkbox">
                <label class="cbi-value-title"></label>
                <div class="cbi-value-field">
                    <input type="checkbox" id="agree-terms">
                    <label for="agree-terms">
                        –Ø —Å–æ–≥–ª–∞—Å–µ–Ω —Å –£—Å–ª–æ–≤–∏—è–º–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∏ –ü–æ–ª–∏—Ç–∏–∫–æ–π –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏
                    </label>
                    <a href="https://uboost.com/terms" target="_blank" class="cbi-button-link">–£—Å–ª–æ–≤–∏—è</a>
                    <a href="https://uboost.com/privacy" target="_blank" class="cbi-button-link">–ö–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å</a>
                </div>
            </div>
        </div>
        
        <div class="cbi-value" id="otp-section" style="display:none">
            <label class="cbi-value-title">–ö–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è</label>
            <div class="cbi-value-field">
                <input type="text" id="otp-code" placeholder="–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –∏–∑ email" class="cbi-input-text" maxlength="6">
                <button class="cbi-button cbi-button-action" onclick="confirmRegistration()">
                    –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
                </button>
                <button class="cbi-button cbi-button-reset" onclick="resendOTP()">
                    –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–¥ –ø–æ–≤—Ç–æ—Ä–Ω–æ
                </button>
            </div>
            <div class="cbi-value-description">
                –í–≤–µ–¥–∏—Ç–µ 6-–∑–Ω–∞—á–Ω—ã–π –∫–æ–¥, –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –Ω–∞ –≤–∞—à email –∞–¥—Ä–µ—Å. –ö–æ–¥ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω –≤ —Ç–µ—á–µ–Ω–∏–µ 30 –º–∏–Ω—É—Ç.
            </div>
            
            <!-- –ë–ª–æ–∫ —Å—Ç–∞—Ç—É—Å–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ -->
            <div id="otp-status" style="display:none; margin-top: 10px;">
                <div class="alert alert-success" id="otp-success" style="display:none">
                    <strong>‚úì –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!</strong>
                    <p>DPI (YouTube –¥–æ—Å—Ç—É–ø) –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∏ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω.</p>
                </div>
                <div class="alert alert-error" id="otp-error" style="display:none">
                    <strong>‚úó –û—à–∏–±–∫–∞:</strong> <span id="otp-error-text"></span>
                </div>
                <div class="alert alert-warning" id="otp-loading" style="display:none">
                    <strong>–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞...</strong>
                </div>
            </div>
        </div>
        
        <div class="cbi-value" id="registered-banner" style="display:none">
            <label class="cbi-value-title"></label>
            <div class="cbi-value-field">
                <div class="alert alert-success">
                    <strong>‚úì –†–æ—É—Ç–µ—Ä –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω</strong>
                    <p>DPI (YouTube –¥–æ—Å—Ç—É–ø) –∞–∫—Ç–∏–≤–µ–Ω. –î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ VPN –æ—Ñ–æ—Ä–º–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É.</p>
                </div>
            </div>
        </div>
    </div>

    <!-- –ü–µ—Ä–≤—ã–π –º–æ–¥—É–ª—å: Device Status -->
    <div class="cbi-section">
        <h3>–°—Ç–∞—Ç—É—Å –£—Å—Ç—Ä–æ–π—Å—Ç–≤–∞</h3>
        <div class="cbi-value">
            <label class="cbi-value-title">Router ID</label>
            <div class="cbi-value-field">
                <span id="router-id">-</span>
            </div>
        </div>
        <div class="cbi-value">
            <label class="cbi-value-title">Router Model</label>
            <div class="cbi-value-field">
                <span id="router-model">-</span>
            </div>
        </div>
        <div class="cbi-value">
            <label class="cbi-value-title">Internet Status</label>
            <div class="cbi-value-field">
                <span id="internet-status">-</span>
            </div>
        </div>
    </div>

    <!-- –í—Ç–æ—Ä–æ–π –º–æ–¥—É–ª—å: –°—Ç–∞—Ç—É—Å DPI (YouTube Access) -->
    <div class="cbi-section">
        <h3>YouTube –¥–æ—Å—Ç—É–ø</h3>
        <div class="cbi-value">
            <label class="cbi-value-title">–°–æ—Å—Ç–æ—è–Ω–∏–µ</label>
            <div class="cbi-value-field">
                <span id="dpi-status" class="status-indicator status-unknown">‚ö´ –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω</span>
            </div>
        </div>
        <div class="cbi-value">
            <label class="cbi-value-title">–û–ø–∏—Å–∞–Ω–∏–µ</label>
            <div class="cbi-value-field">
                <div class="cbi-value-description">
                    –î–æ—Å—Ç—É–ø –∫ Youtube –≤ –ø–æ–¥–∞—Ä–æ–∫ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.
                </div>
            </div>
        </div>
    </div>

    <!-- –¢—Ä–µ—Ç–∏–π –º–æ–¥—É–ª—å: VPN Access -->
    <div class="cbi-section">
        <h3>–î–æ—Å—Ç—É–ø –∫ VPN</h3>
        
        <!-- –°—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏ -->
        <div class="cbi-value">
            <label class="cbi-value-title">–°—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏</label>
            <div class="cbi-value-field">
                <span id="vpn-subscription-status" class="status-indicator status-unknown">‚ö´ –ù–µ–∞–∫—Ç–∏–≤–Ω–∞</span>
            </div>
        </div>
        
        <!-- –ë–ª–æ–∫ –¥–ª—è –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π - –ø–æ–¥–ø–∏—Å–∫–∞ -->
        <div class="cbi-value" id="vpn-subscription-block">
            <label class="cbi-value-title">–ü–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ VPN</label>
            <div class="cbi-value-field">
                <a href="https://uboost.com/pricing" target="_blank" class="cbi-button cbi-button-positive" id="vpn-subscribe-link">
                    –û—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É
                </a>
                <div class="cbi-value-description">
                    –ü–æ–ª—É—á–∏—Ç–µ –ø–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º —Å–µ—Ä–≤–µ—Ä–∞–º VPN –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –ø–æ–¥–ø–∏—Å–∫–∏
                </div>
            </div>
        </div>
        
        <!-- –ë–ª–æ–∫ –¥–ª—è –≤–≤–æ–¥–∞ –∫–ª—é—á–∞ -->
        <div class="cbi-value" id="vpn-key-block" style="display:none">
            <label class="cbi-value-title">–ê–∫—Ç–∏–≤–∞—Ü–∏—è –∫–ª—é—á–∞</label>
            <div class="cbi-value-field">
                <input type="text" id="vpn-key-input" placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à VPN –∫–ª—é—á" class="cbi-input-text">
                <button class="cbi-button cbi-button-action" onclick="activateVPN()">
                    –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å VPN
                </button>
                <button class="cbi-button cbi-button-help" onclick="showKeyHelp()">
                    –ì–¥–µ –Ω–∞–π—Ç–∏ –∫–ª—é—á?
                </button>
            </div>
            <div class="cbi-value-description">
                –í–≤–µ–¥–∏—Ç–µ –∫–ª—é—á, –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –ø–æ–¥–ø–∏—Å–∫–∏. –ö–ª—é—á –ø—Ä–∏—Ö–æ–¥–∏—Ç –Ω–∞ email.
            </div>
        </div>
        
        <!-- –°—Ç–∞—Ç—É—Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è VPN -->
        <div class="cbi-value">
            <label class="cbi-value-title">–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ VPN</label>
            <div class="cbi-value-field">
                <span id="vpn-connection-status" class="status-indicator status-disconnected">üî¥ –û—Ç–∫–ª—é—á–µ–Ω–æ</span>
                <button class="cbi-button cbi-button-apply" id="vpn-toggle-btn" style="display:none" onclick="toggleVPNConnection()">
                    –í–∫–ª—é—á–∏—Ç—å VPN
                </button>
            </div>
        </div>
        
        <!-- –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ -->
        <div class="cbi-value" id="vpn-info" style="display:none">
            <label class="cbi-value-title">–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ VPN</label>
            <div class="cbi-value-field">
                <div class="vpn-details">
                    <div><strong>–°–µ—Ä–≤–µ—Ä:</strong> <span id="vpn-server">-</span></div>
                    <div><strong>–ü—Ä–æ—Ç–æ–∫–æ–ª:</strong> <span id="vpn-protocol">WireGuard</span></div>
                    <div><strong>–°–∫–æ—Ä–æ—Å—Ç—å:</strong> <span id="vpn-speed">-</span></div>
                    <div><strong>–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã:</strong> <span id="vpn-uptime">-</span></div>
                </div>
            </div>
        </div>
    </div>

    <!-- –ß–µ—Ç–≤–µ—Ä—Ç—ã–π –º–æ–¥—É–ª—å: Service Status -->
    <div class="cbi-section">
        <h3>–°—Ç–∞—Ç—É—Å –°–ª—É–∂–±</h3>
        <div class="cbi-value">
            <label class="cbi-value-title">Uboost Service</label>
            <div class="cbi-value-field">
                <span id="uboost-service-status" class="status-indicator">‚óè</span>
                <span id="uboost-service-text">-</span>
            </div>
        </div>
        <div class="cbi-value">
            <label class="cbi-value-title">VPN Service</label>
            <div class="cbi-value-field">
                <span id="vpn-service-status" class="status-indicator">‚óè</span>
                <span id="vpn-service-text">-</span>
                <button class="cbi-button cbi-button-remove" id="vpn-service-toggle-btn" style="display:none" onclick="toggleVPNService()">
                    –û—Ç–∫–ª—é—á–∏—Ç—å
                </button>
            </div>
        </div>
    </div>

    <!-- –ü—è—Ç—ã–π –º–æ–¥—É–ª—å: –ü–æ–¥–¥–µ—Ä–∂–∫–∞ -->
    <div class="cbi-section">
        <h3>–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞</h3>
        <div class="cbi-value">
            <label class="cbi-value-title"></label>
            <div class="cbi-value-field">
                <div class="support-info">
                    <p>–ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∏ —Ç—Ä—É–¥–Ω–æ—Å—Ç–∏ —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–æ–π –∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º, –Ω–∞–ø–∏—à–∏—Ç–µ –≤ —Å–ª—É–∂–±—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏</p>
                    <button class="cbi-button cbi-button-help" onclick="contactSupport()">
                        üí¨ –ú–Ω–µ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–æ–º–æ—â–∏ -->
<div id="key-help-modal" style="display:none; position: fixed; top: 0; left: 0; width: 100%; height: 100%; background: rgba(0,0,0,0.5); z-index: 1000;">
    <div style="position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); background: white; padding: 20px; border-radius: 8px; max-width: 500px;">
        <h3>–ì–¥–µ –Ω–∞–π—Ç–∏ VPN –∫–ª—é—á?</h3>
        <p>–ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç—ã –ø–æ–¥–ø–∏—Å–∫–∏:</p>
        <ol>
            <li>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–∞—à—É —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—É—é –ø–æ—á—Ç—É</li>
            <li>–ù–∞–π–¥–∏—Ç–µ –ø–∏—Å—å–º–æ –æ—Ç Uboost —Å —Ç–µ–º–æ–π "–í–∞—à VPN –∫–ª—é—á"</li>
            <li>–°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∫–ª—é—á –∏–∑ –ø–∏—Å—å–º–∞ (–æ–±—ã—á–Ω–æ —ç—Ç–æ –¥–ª–∏–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ –∏–∑ –±—É–∫–≤ –∏ —Ü–∏—Ñ—Ä)</li>
            <li>–í—Å—Ç–∞–≤—å—Ç–µ –∫–ª—é—á –≤ –ø–æ–ª–µ –≤—ã—à–µ –∏ –Ω–∞–∂–º–∏—Ç–µ "–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å VPN"</li>
        </ol>
        <p>–ï—Å–ª–∏ –≤—ã –Ω–µ –ø–æ–ª—É—á–∏–ª–∏ –∫–ª—é—á, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–∞–ø–∫—É "–°–ø–∞–º" –∏–ª–∏ <a href="https://uboost.com/support" target="_blank">—Å–≤—è–∂–∏—Ç–µ—Å—å —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π</a>.</p>
        <button class="cbi-button cbi-button-reset" onclick="hideKeyHelp()" style="margin-top: 15px;">–ó–∞–∫—Ä—ã—Ç—å</button>
    </div>
</div>

<!-- –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ -->
<div id="support-modal" style="display:none; position: fixed; top: 0; left: 0; width: 100%; height: 100%; background: rgba(0,0,0,0.5); z-index: 1000;">
    <div style="position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); background: white; padding: 20px; border-radius: 8px; max-width: 500px;">
        <h3>–°–ª—É–∂–±–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏</h3>
        <p>–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–º–æ—â–∏ –≤—ã –º–æ–∂–µ—Ç–µ:</p>
        <ul>
            <li><strong>Email:</strong> <a href="mailto:support@uboost.com">support@uboost.com</a></li>
            <li><strong>–¢–µ–ª–µ–≥—Ä–∞–º:</strong> <a href="https://t.me/uboost_support" target="_blank">@uboost_support</a></li>
            <li><strong>–°–∞–π—Ç:</strong> <a href="https://uboost.com/support" target="_blank">uboost.com/support</a></li>
        </ul>
        <p>–ü—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ —É–∫–∞–∂–∏—Ç–µ –≤–∞—à Router ID: <strong id="support-router-id">-</strong></p>
        <div class="cbi-value-field">
            <button class="cbi-button cbi-button-action" onclick="copyRouterId()">
                üìã –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å Router ID
            </button>
            <button class="cbi-button cbi-button-reset" onclick="hideSupportModal()" style="margin-left: 10px;">
                –ó–∞–∫—Ä—ã—Ç—å
            </button>
        </div>
    </div>
</div>

<script>
class UboostDashboard {
    static async init() {
        await this.loadStatus();
        this.setupEventListeners();
        this.startAutoRefresh();
    }
    
    static async loadStatus() {
        try {
            this.showLoading(true);
            const response = await fetch('<%=luci.dispatcher.build_url("admin/uboot/api/status")%>');
            const data = await response.json();
            
            if (data.success) {
                this.updateDashboard(data.data);
            }
        } catch (error) {
            console.error('Status load error:', error);
        } finally {
            this.showLoading(false);
        }
    }
    
    static updateDashboard(data) {
        // –û–±–Ω–æ–≤–ª—è–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
        this.updateRegistrationSection(data.registration);
        
        // Device Status
        document.getElementById('router-id').textContent = data.router_id || 'Not registered';
        document.getElementById('router-model').textContent = data.device_info?.model || 'Unknown';
        document.getElementById('internet-status').textContent = data.internet_status || 'Unknown';
        
        // –û–±–Ω–æ–≤–ª—è–µ–º Router ID –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏
        document.getElementById('support-router-id').textContent = data.router_id || 'Not registered';
        
        // DPI Status (YouTube Access)
        this.updateDPISection(data.dpi);
        
        // VPN Access  
        this.updateVPNSection(data.vpn);
        
        // Service Status
        this.updateServiceStatus(data.services);
    }
    
    static updateRegistrationSection(registration) {
        const isRegistered = registration?.status === 'completed';
        
        // –°–∫—Ä—ã–≤–∞–µ–º –≤–µ—Å—å –±–ª–æ–∫ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –µ—Å–ª–∏ —Ä–æ—É—Ç–µ—Ä –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω
        document.getElementById('registration-content').style.display = isRegistered ? 'none' : 'block';
        document.getElementById('registered-banner').style.display = isRegistered ? 'block' : 'none';
        document.getElementById('otp-section').style.display = 'none'; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º OTP —Å–µ–∫—Ü–∏—é
    }
    
    static updateDPISection(dpi) {
        const dpiStatus = document.getElementById('dpi-status');
        const statusMap = {
            'enabled': {text: 'üü¢ –ê–∫—Ç–∏–≤–µ–Ω', class: 'status-active'},
            'disabled': {text: 'üî¥ –û—Ç–∫–ª—é—á–µ–Ω', class: 'status-error'},
            'inactive': {text: '‚ö´ –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω', class: 'status-unknown'}
        };

        const status = statusMap[dpi?.status] || statusMap['inactive'];
        dpiStatus.textContent = status.text;
        dpiStatus.className = `status-indicator ${status.class}`;
    }
    
    static updateVPNSection(vpn) {
        const hasKey = vpn?.has_key;
        const isActive = vpn?.status === 'active' || vpn?.status === 'connected';
        
        document.getElementById('vpn-subscription-block').style.display = hasKey ? 'none' : 'block';
        document.getElementById('vpn-key-block').style.display = hasKey && !isActive ? 'block' : 'none';
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è VPN
        const connectionStatus = document.getElementById('vpn-connection-status');
        const statusMap = {
            'connected': {text: 'üü¢ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ', class: 'status-active'},
            'configured': {text: 'üü° –ù–∞—Å—Ç—Ä–æ–µ–Ω–æ', class: 'status-warning'},
            'disabled': {text: 'üî¥ –û—Ç–∫–ª—é—á–µ–Ω–æ', class: 'status-error'},
            'inactive': {text: '‚ö´ –ù–µ–∞–∫—Ç–∏–≤–Ω–æ', class: 'status-unknown'}
        };

        const status = statusMap[vpn?.status] || statusMap['inactive'];
        connectionStatus.textContent = status.text;
        connectionStatus.className = `status-indicator ${status.class}`;

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è VPN –µ—Å–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ
        document.getElementById('vpn-toggle-btn').style.display = 
            (vpn?.status === 'configured' || vpn?.status === 'connected') ? 'inline-block' : 'none';
    }
    
    static updateServiceStatus(services) {
        // Uboost service
        const uboostActive = services?.uboost === 'active';
        document.getElementById('uboost-service-status').className = 'status-indicator ' +
            (uboostActive ? 'status-success' : 'status-error');
        document.getElementById('uboost-service-text').textContent = uboostActive ? 'Active' : 'Inactive';
        
        // VPN service
        const vpnActive = services?.vpn === 'active';
        document.getElementById('vpn-service-status').className = 'status-indicator ' +
            (vpnActive ? 'status-success' : 'status-error');
        document.getElementById('vpn-service-text').textContent = vpnActive ? 'Active' : 'Inactive';
        document.getElementById('vpn-service-toggle-btn').style.display = vpnActive ? 'inline-block' : 'none';
        document.getElementById('vpn-service-toggle-btn').textContent = vpnActive ? 'Turn Off' : 'Turn On';
    }
    
    static async requestRegistration(email) {
        if (!document.getElementById('agree-terms').checked) {
            this.showNotification('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–æ–≥–ª–∞—Å–∏—Ç–µ—Å—å —Å —É—Å–ª–æ–≤–∏—è–º–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è', 'error');
            return;
        }
        
        this.showNotification('–û—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ–¥–∞...', 'info');
        
        try {
            const response = await fetch('<%=luci.dispatcher.build_url("admin/uboot/api/register")%>', {
                method: 'POST',
                headers: {'Content-Type': 'application/json'},
                body: JSON.stringify({email: email})
            });
            
            const result = await response.json();
            
            if (result.success) {
                // –°–∫—Ä—ã–≤–∞–µ–º –ø–æ–ª—è email –∏ —Å–æ–≥–ª–∞—à–µ–Ω–∏—è, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º OTP
                document.getElementById('registration-content').style.display = 'none';
                document.getElementById('otp-section').style.display = 'block';
                this.showNotification('–ö–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –≤–∞—à email', 'success');
            } else {
                this.showNotification(result.error || '–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏', 'error');
            }
        } catch (error) {
            this.showNotification('–û—à–∏–±–∫–∞ —Å–µ—Ç–∏', 'error');
        }
    }

    static async verifyOTP(email, otpCode) {
        try {
            const response = await fetch('<%=luci.dispatcher.build_url("admin/uboot/api/verify-otp")%>', {
                method: 'POST',
                headers: {'Content-Type': 'application/json'},
                body: JSON.stringify({email: email, otp_code: otpCode})
            });
            
            const result = await response.json();
            
            if (result.success) {
                // –í–∫–ª—é—á–∞–µ–º DPI –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
                await this.enableDPI();
                return {success: true, data: result.data};
            } else {
                return {success: false, error: result.error};
            }
        } catch (error) {
            console.error('OTP verification error:', error);
            return {success: false, error: 'Network error'};
        }
    }

    static async enableDPI() {
        try {
            const response = await fetch('<%=luci.dispatcher.build_url("admin/uboot/api/enable-dpi")%>', {
                method: 'POST'
            });
            return await response.json();
        } catch (error) {
            console.error('DPI enable error:', error);
            return {success: false, error: 'DPI setup failed'};
        }
    }
    
    static showLoading(show) {
        const buttons = document.querySelectorAll('.cbi-button');
        buttons.forEach(btn => {
            btn.disabled = show;
            if (show) {
                btn.classList.add('loading');
            } else {
                btn.classList.remove('loading');
            }
        });
    }
    
    static showNotification(message, type = 'info') {
        console.log(`${type.toUpperCase()}: ${message}`);
    }
    
    static setupEventListeners() {
        const emailInput = document.getElementById('register-email');
        if (emailInput) {
            emailInput.addEventListener('keypress', (e) => {
                if (e.key === 'Enter') {
                    this.handleRegistration();
                }
            });
        }
    }
    
    static startAutoRefresh() {
        setInterval(() => {
            this.loadStatus();
        }, 30000);
    }
    
    static async handleRegistration() {
        const email = document.getElementById('register-email')?.value;
        if (!email || !this.validateEmail(email)) {
            this.showNotification('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email', 'error');
            return;
        }
        
        await this.requestRegistration(email);
    }
    
    static validateEmail(email) {
        return /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email);
    }
}

// –û—Å—Ç–∞–ª—å–Ω–æ–π JavaScript –∫–æ–¥ –æ—Å—Ç–∞–µ—Ç—Å—è —Ç–∞–∫–∏–º –∂–µ –∫–∞–∫ –≤ –ø—Ä–µ–¥—ã–¥—É—â–µ–π –≤–µ—Ä—Å–∏–∏
// (VPNManager –∏ –≥–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏)

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
function requestRegistration() {
    UboostDashboard.handleRegistration();
}

function confirmRegistration() {
    const email = document.getElementById('register-email').value;
    const otp = document.getElementById('otp-code').value.trim();
    
    if (!otp) {
        showOtpError('–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è');
        return;
    }
    
    if (otp.length < 4) {
        showOtpError('–ö–æ–¥ –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –Ω–µ –º–µ–Ω–µ–µ 4 —Å–∏–º–≤–æ–ª–æ–≤');
        return;
    }
    
    showOtpLoading();
    
    UboostDashboard.verifyOTP(email, otp).then(result => {
        if (result.success) {
            showOtpSuccess();
            setTimeout(() => {
                UboostDashboard.loadStatus();
            }, 2000);
        } else {
            showOtpError(result.error || '–ù–µ–≤–µ—Ä–Ω—ã–π –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è');
        }
    });
}

function resendOTP() {
    const email = document.getElementById('register-email').value;
    
    if (!email) {
        showOtpError('–í–≤–µ–¥–∏—Ç–µ email –∞–¥—Ä–µ—Å');
        return;
    }
    
    showOtpLoading();
    
    setTimeout(() => {
        hideOtpStatus();
        UboostDashboard.showNotification('–ù–æ–≤—ã–π –∫–æ–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –≤–∞—à email', 'info');
        document.getElementById('otp-code').value = '';
        document.getElementById('otp-code').focus();
    }, 1000);
}

// –û—Å—Ç–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –æ—Å—Ç–∞—é—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
function activateVPN() {
    const key = document.getElementById('vpn-key-input').value.trim();
    VPNManager.activateVPN(key);
}

function toggleVPNConnection() {
    VPNManager.toggleVPNConnection();
}

function toggleVPNService() {
    console.log('Toggle VPN service');
}

function contactSupport() {
    document.getElementById('support-modal').style.display = 'block';
}

function hideSupportModal() {
    document.getElementById('support-modal').style.display = 'none';
}

function copyRouterId() {
    const routerId = document.getElementById('support-router-id').textContent;
    navigator.clipboard.writeText(routerId).then(() => {
        UboostDashboard.showNotification('Router ID —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞', 'success');
    });
}

function showKeyHelp() {
    document.getElementById('key-help-modal').style.display = 'block';
}

function hideKeyHelp() {
    document.getElementById('key-help-modal').style.display = 'none';
}

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–æ–º OTP
function showOtpLoading() {
    hideOtpStatus();
    document.getElementById('otp-status').style.display = 'block';
    document.getElementById('otp-loading').style.display = 'block';
}

function showOtpSuccess() {
    hideOtpStatus();
    document.getElementById('otp-status').style.display = 'block';
    document.getElementById('otp-success').style.display = 'block';
}

function showOtpError(message) {
    hideOtpStatus();
    document.getElementById('otp-status').style.display = 'block';
    document.getElementById('otp-error').style.display = 'block';
    document.getElementById('otp-error-text').textContent = message;
}

function hideOtpStatus() {
    document.getElementById('otp-status').style.display = 'none';
    document.getElementById('otp-success').style.display = 'none';
    document.getElementById('otp-error').style.display = 'none';
    document.getElementById('otp-loading').style.display = 'none';
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
document.addEventListener('DOMContentLoaded', function() {
    UboostDashboard.init();
    VPNManager.init();
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ Enter –≤ –ø–æ–ª—è—Ö
    const otpInput = document.getElementById('otp-code');
    if (otpInput) {
        otpInput.addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                confirmRegistration();
            }
        });
    }
    
    const vpnKeyInput = document.getElementById('vpn-key-input');
    if (vpnKeyInput) {
        vpnKeyInput.addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                activateVPN();
            }
        });
    }
    
    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
    document.getElementById('key-help-modal').addEventListener('click', function(e) {
        if (e.target === this) hideKeyHelp();
    });
    
    document.getElementById('support-modal').addEventListener('click', function(e) {
        if (e.target === this) hideSupportModal();
    });
});
</script>

<style>
.alert {
    padding: 8px 12px;
    border-radius: 4px;
    margin: 5px 0;
}

.alert-success {
    background-color: #dff0d8;
    border: 1px solid #d6e9c6;
    color: #3c763d;
}

.alert-error {
    background-color: #f2dede;
    border: 1px solid #ebccd1;
    color: #a94442;
}

.alert-warning {
    background-color: #fcf8e3;
    border: 1px solid #faebcc;
    color: #8a6d3b;
}

.status-indicator {
    display: inline-block;
    margin-right: 8px;
    font-weight: bold;
}

.status-active { color: #28a745; }
.status-warning { color: #ffc107; }
.status-error { color: #dc3545; }
.status-unknown { color: #6c757d; }
.status-disconnected { color: #dc3545; }

.vpn-details {
    background: #f8f9fa;
    padding: 10px;
    border-radius: 4px;
    border-left: 4px solid #007bff;
}

.vpn-details div {
    margin: 5px 0;
}

.support-info {
    background: #f8f9fa;
    padding: 15px;
    border-radius: 4px;
    border-left: 4px solid #17a2b8;
}

.support-info p {
    margin-bottom: 15px;
    color: #495057;
}

.cbi-button-link {
    margin-left: 10px;
    text-decoration: none;
    color: #0066cc;
}

.cbi-button-link:hover {
    text-decoration: underline;
}

.cbi-button-reset {
    background-color: #6c757d;
    border-color: #6c757d;
}

.cbi-button-reset:hover {
    background-color: #5a6268;
    border-color: #545b62;
}

.cbi-button-help {
    background-color: #17a2b8;
    border-color: #17a2b8;
}

.cbi-button-help:hover {
    background-color: #138496;
    border-color: #117a8b;
}

#key-help-modal ol, #support-modal ul {
    margin: 10px 0;
    padding-left: 20px;
}

#key-help-modal li, #support-modal li {
    margin: 5px 0;
}

.loading {
    opacity: 0.6;
    pointer-events: none;
}

#support-modal a {
    color: #007bff;
    text-decoration: none;
}

#support-modal a:hover {
    text-decoration: underline;
}
</style>

<%+footer%>
